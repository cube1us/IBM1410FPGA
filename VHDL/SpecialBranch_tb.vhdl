-- Test BenchVHDL for IBM SMS ALD group SpecialBranch
-- Title: SpecialBranch
-- IBM Machine Name 1411
-- Generated by GenerateHDL on 7/15/2020 4:59:18 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity SpecialBranch_tb is
end SpecialBranch_tb;

architecture behavioral of SpecialBranch_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component SpecialBranch
	    Port (
		FPGA_CLK: in STD_LOGIC;
		PS_LAST_LOGIC_GATE_2: in STD_LOGIC;
		PS_LAST_LOGIC_GATE_1: in STD_LOGIC;
		PS_NO_SCAN: in STD_LOGIC;
		PS_EXCLAM_MARK_OR_REC_MARK_OP_MOD: in STD_LOGIC;
		PS_QUESTION_MK_OP_MODIFIER: in STD_LOGIC;
		PS_COND_TEST_BRANCH_OP_CODE: in STD_LOGIC;
		PS_K_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_PERCENT_SIGN_OP_MODIFIER: in STD_LOGIC;
		PS_W_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_Z_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		MS_Q_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		MS_ASTERISK_OP_MODIFIER: in STD_LOGIC;
		MS_LOGIC_GATE_B_1: in STD_LOGIC;
		PS_LOGIC_GATE_C_1: in STD_LOGIC;
		PS_BRANCH_TO_A_CONDITIONS: in STD_LOGIC;
		MC_BUFFER_INQ_REQUEST: in STD_LOGIC;
		PS_N_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		MS_PROGRAM_RESET_1: in STD_LOGIC;
		MS_CONS_INQUIRY_REQUEST: in STD_LOGIC;
		PS_Q_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		MS_INTERRUPT_TEST_OP_CODE: in STD_LOGIC;
		MS_COND_TEST_BRANCH_OP_CODE: in STD_LOGIC;
		MC_BUFFER_OUTQUIRY_PULSE: in STD_LOGIC;
		MS_E_CH_TAPE_INDICATOR: in STD_LOGIC;
		MS_F_CH_TAPE_INDICATOR: in STD_LOGIC;
		PS_SPEC_BRANCH_LATCH_STAR_1414_STAR: in STD_LOGIC;
		MC_PRINTER_CHANNEL_9: in STD_LOGIC;
		MS_9_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		MS_1401_MODE: in STD_LOGIC;
		MC_PRINTER_CHANNEL_12: in STD_LOGIC;
		MS_COML_AT_SYM_OP_MODIFIER: in STD_LOGIC;
		MC_FORMS_BUSY_STATUS_TO_CPU: in STD_LOGIC;
		PS_R_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_P_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_1403_PRINT_BUFFER_BUSY: in STD_LOGIC;
		MC_READ_COLUMN_BINARY: in STD_LOGIC;
		PS_M_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		MS_RESET_READER_ERROR_LATCH: out STD_LOGIC;
		MS_RES_PUNCH_OR_PRINT_ERROR: out STD_LOGIC;
		MS_RESET_END_OF_REEL_IND: out STD_LOGIC;
		MS_RESET_PROCESS_CK_LAT: out STD_LOGIC;
		MS_SET_NO_DIV_OVERFLOW: out STD_LOGIC;
		MS_RESET_DIV_OVERFLOW: out STD_LOGIC;
		MS_RESET_INQUIRY_ERROR: out STD_LOGIC;
		MS_SET_NO_OVERFLOW: out STD_LOGIC;
		MS_RESET_OVERFLOW: out STD_LOGIC;
		MS_SPECIAL_BRANCH_LATCH: out STD_LOGIC;
		PS_SPECIAL_BRANCH_LATCH: out STD_LOGIC;
		PS_SELECTED_CARRIAGE_CH: out STD_LOGIC;
		MS_PRT_CARR_BUSY: out STD_LOGIC;
		PS_ANY_INQUIRY_REQUEST: out STD_LOGIC;
		PS_INT_OUTQUIRY_REQUEST: out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_LAST_LOGIC_GATE_2: STD_LOGIC := '0';
	signal PS_LAST_LOGIC_GATE_1: STD_LOGIC := '0';
	signal PS_NO_SCAN: STD_LOGIC := '0';
	signal PS_EXCLAM_MARK_OR_REC_MARK_OP_MOD: STD_LOGIC := '0';
	signal PS_QUESTION_MK_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_COND_TEST_BRANCH_OP_CODE: STD_LOGIC := '0';
	signal PS_K_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_PERCENT_SIGN_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_W_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_Z_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal MS_Q_SYMBOL_OP_MODIFIER: STD_LOGIC := '1';
	signal MS_ASTERISK_OP_MODIFIER: STD_LOGIC := '1';
	signal MS_LOGIC_GATE_B_1: STD_LOGIC := '1';
	signal PS_LOGIC_GATE_C_1: STD_LOGIC := '0';
	signal PS_BRANCH_TO_A_CONDITIONS: STD_LOGIC := '0';
	signal MC_BUFFER_INQ_REQUEST: STD_LOGIC := '1';
	signal PS_N_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal MS_PROGRAM_RESET_1: STD_LOGIC := '1';
	signal MS_CONS_INQUIRY_REQUEST: STD_LOGIC := '1';
	signal PS_Q_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal MS_INTERRUPT_TEST_OP_CODE: STD_LOGIC := '1';
	signal MS_COND_TEST_BRANCH_OP_CODE: STD_LOGIC := '1';
	signal MC_BUFFER_OUTQUIRY_PULSE: STD_LOGIC := '1';
	signal MS_E_CH_TAPE_INDICATOR: STD_LOGIC := '1';
	signal MS_F_CH_TAPE_INDICATOR: STD_LOGIC := '1';
	signal PS_SPEC_BRANCH_LATCH_STAR_1414_STAR: STD_LOGIC := '0';
	signal MC_PRINTER_CHANNEL_9: STD_LOGIC := '1';
	signal MS_9_SYMBOL_OP_MODIFIER: STD_LOGIC := '1';
	signal MS_1401_MODE: STD_LOGIC := '1';
	signal MC_PRINTER_CHANNEL_12: STD_LOGIC := '1';
	signal MS_COML_AT_SYM_OP_MODIFIER: STD_LOGIC := '1';
	signal MC_FORMS_BUSY_STATUS_TO_CPU: STD_LOGIC := '1';
	signal PS_R_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_P_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_1403_PRINT_BUFFER_BUSY: STD_LOGIC := '0';
	signal MC_READ_COLUMN_BINARY: STD_LOGIC := '1';
	signal PS_M_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';

	-- Outputs

	signal MS_RESET_READER_ERROR_LATCH: STD_LOGIC;
	signal MS_RES_PUNCH_OR_PRINT_ERROR: STD_LOGIC;
	signal MS_RESET_END_OF_REEL_IND: STD_LOGIC;
	signal MS_RESET_PROCESS_CK_LAT: STD_LOGIC;
	signal MS_SET_NO_DIV_OVERFLOW: STD_LOGIC;
	signal MS_RESET_DIV_OVERFLOW: STD_LOGIC;
	signal MS_RESET_INQUIRY_ERROR: STD_LOGIC;
	signal MS_SET_NO_OVERFLOW: STD_LOGIC;
	signal MS_RESET_OVERFLOW: STD_LOGIC;
	signal MS_SPECIAL_BRANCH_LATCH: STD_LOGIC;
	signal PS_SPECIAL_BRANCH_LATCH: STD_LOGIC;
	signal PS_SELECTED_CARRIAGE_CH: STD_LOGIC;
	signal MS_PRT_CARR_BUSY: STD_LOGIC;
	signal PS_ANY_INQUIRY_REQUEST: STD_LOGIC;
	signal PS_INT_OUTQUIRY_REQUEST: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: SpecialBranch port map(
		FPGA_CLK => FPGA_CLK,
		PS_LAST_LOGIC_GATE_2 => PS_LAST_LOGIC_GATE_2,
		PS_LAST_LOGIC_GATE_1 => PS_LAST_LOGIC_GATE_1,
		PS_NO_SCAN => PS_NO_SCAN,
		PS_EXCLAM_MARK_OR_REC_MARK_OP_MOD => PS_EXCLAM_MARK_OR_REC_MARK_OP_MOD,
		PS_QUESTION_MK_OP_MODIFIER => PS_QUESTION_MK_OP_MODIFIER,
		PS_COND_TEST_BRANCH_OP_CODE => PS_COND_TEST_BRANCH_OP_CODE,
		PS_K_SYMBOL_OP_MODIFIER => PS_K_SYMBOL_OP_MODIFIER,
		PS_PERCENT_SIGN_OP_MODIFIER => PS_PERCENT_SIGN_OP_MODIFIER,
		PS_W_SYMBOL_OP_MODIFIER => PS_W_SYMBOL_OP_MODIFIER,
		PS_Z_SYMBOL_OP_MODIFIER => PS_Z_SYMBOL_OP_MODIFIER,
		MS_Q_SYMBOL_OP_MODIFIER => MS_Q_SYMBOL_OP_MODIFIER,
		MS_ASTERISK_OP_MODIFIER => MS_ASTERISK_OP_MODIFIER,
		MS_LOGIC_GATE_B_1 => MS_LOGIC_GATE_B_1,
		PS_LOGIC_GATE_C_1 => PS_LOGIC_GATE_C_1,
		PS_BRANCH_TO_A_CONDITIONS => PS_BRANCH_TO_A_CONDITIONS,
		MC_BUFFER_INQ_REQUEST => MC_BUFFER_INQ_REQUEST,
		PS_N_SYMBOL_OP_MODIFIER => PS_N_SYMBOL_OP_MODIFIER,
		MS_PROGRAM_RESET_1 => MS_PROGRAM_RESET_1,
		MS_CONS_INQUIRY_REQUEST => MS_CONS_INQUIRY_REQUEST,
		PS_Q_SYMBOL_OP_MODIFIER => PS_Q_SYMBOL_OP_MODIFIER,
		MS_INTERRUPT_TEST_OP_CODE => MS_INTERRUPT_TEST_OP_CODE,
		MS_COND_TEST_BRANCH_OP_CODE => MS_COND_TEST_BRANCH_OP_CODE,
		MC_BUFFER_OUTQUIRY_PULSE => MC_BUFFER_OUTQUIRY_PULSE,
		MS_E_CH_TAPE_INDICATOR => MS_E_CH_TAPE_INDICATOR,
		MS_F_CH_TAPE_INDICATOR => MS_F_CH_TAPE_INDICATOR,
		PS_SPEC_BRANCH_LATCH_STAR_1414_STAR => PS_SPEC_BRANCH_LATCH_STAR_1414_STAR,
		MC_PRINTER_CHANNEL_9 => MC_PRINTER_CHANNEL_9,
		MS_9_SYMBOL_OP_MODIFIER => MS_9_SYMBOL_OP_MODIFIER,
		MS_1401_MODE => MS_1401_MODE,
		MC_PRINTER_CHANNEL_12 => MC_PRINTER_CHANNEL_12,
		MS_COML_AT_SYM_OP_MODIFIER => MS_COML_AT_SYM_OP_MODIFIER,
		MC_FORMS_BUSY_STATUS_TO_CPU => MC_FORMS_BUSY_STATUS_TO_CPU,
		PS_R_SYMBOL_OP_MODIFIER => PS_R_SYMBOL_OP_MODIFIER,
		PS_P_SYMBOL_OP_MODIFIER => PS_P_SYMBOL_OP_MODIFIER,
		PS_1403_PRINT_BUFFER_BUSY => PS_1403_PRINT_BUFFER_BUSY,
		MC_READ_COLUMN_BINARY => MC_READ_COLUMN_BINARY,
		PS_M_SYMBOL_OP_MODIFIER => PS_M_SYMBOL_OP_MODIFIER,
		MS_RESET_READER_ERROR_LATCH => MS_RESET_READER_ERROR_LATCH,
		MS_RES_PUNCH_OR_PRINT_ERROR => MS_RES_PUNCH_OR_PRINT_ERROR,
		MS_RESET_END_OF_REEL_IND => MS_RESET_END_OF_REEL_IND,
		MS_RESET_PROCESS_CK_LAT => MS_RESET_PROCESS_CK_LAT,
		MS_SET_NO_DIV_OVERFLOW => MS_SET_NO_DIV_OVERFLOW,
		MS_RESET_DIV_OVERFLOW => MS_RESET_DIV_OVERFLOW,
		MS_RESET_INQUIRY_ERROR => MS_RESET_INQUIRY_ERROR,
		MS_SET_NO_OVERFLOW => MS_SET_NO_OVERFLOW,
		MS_RESET_OVERFLOW => MS_RESET_OVERFLOW,
		MS_SPECIAL_BRANCH_LATCH => MS_SPECIAL_BRANCH_LATCH,
		PS_SPECIAL_BRANCH_LATCH => PS_SPECIAL_BRANCH_LATCH,
		PS_SELECTED_CARRIAGE_CH => PS_SELECTED_CARRIAGE_CH,
		MS_PRT_CARR_BUSY => MS_PRT_CARR_BUSY,
		PS_ANY_INQUIRY_REQUEST => PS_ANY_INQUIRY_REQUEST,
		PS_INT_OUTQUIRY_REQUEST => PS_INT_OUTQUIRY_REQUEST);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

END;
