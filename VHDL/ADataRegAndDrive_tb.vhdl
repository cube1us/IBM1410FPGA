-- Test BenchVHDL for IBM SMS ALD group ADataRegAndDrive
-- Title: ADataRegAndDrive
-- IBM Machine Name 1411
-- Generated by GenerateHDL on 9/9/2020 11:42:57 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ADataRegAndDrive_tb is
end ADataRegAndDrive_tb;

architecture behavioral of ADataRegAndDrive_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ADataRegAndDrive
	    Port (
		FPGA_CLK: in STD_LOGIC;
		PS_SW_B_CH_TO_A_REG: in STD_LOGIC;
		PS_SW_AR_EXIT_CH_TO_A_REG: in STD_LOGIC;
		MS_RESET_A_DATA_REG: in STD_LOGIC;
		PS_GATE_A_DATA_REG_TO_A_CH: in STD_LOGIC;
		PS_GATE_OP_MOD_REG_TO_A_CH: in STD_LOGIC;
		PS_GATE_E2_DATA_REG_TO_A_CH: in STD_LOGIC;
		PS_GATE_F2_DATA_REG_TO_A_CH: in STD_LOGIC;
		PS_B_CH_WM_BIT_1: in STD_LOGIC;
		PS_OP_MOD_REG_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		PS_AR_EXIT_CH_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		PS_B_CH_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		PS_E2_REG_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		PS_F2_REG_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		PS_AR_CH_STAR_TRANSLATOR_STAR_BUS: in STD_LOGIC_VECTOR (3 downTo 0);
		PS_B_CH_NOT_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		PS_A_CH_BUS: out STD_LOGIC_VECTOR (7 downTo 0);
		PS_A_DATA_REG_BUS: out STD_LOGIC_VECTOR (7 downTo 0);
		PS_A_CH_NOT_BUS: out STD_LOGIC_VECTOR (7 downTo 0);
		PB_A_CH_BUS: out STD_LOGIC_VECTOR (6 downTo 0);
		PB_A_CH_NOT_BUS: out STD_LOGIC_VECTOR (6 downTo 0);
		LAMPS_A_CH: out STD_LOGIC_VECTOR (7 downTo 0));
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_SW_B_CH_TO_A_REG: STD_LOGIC := '0';
	signal PS_SW_AR_EXIT_CH_TO_A_REG: STD_LOGIC := '0';
	signal MS_RESET_A_DATA_REG: STD_LOGIC := '1';
	signal PS_GATE_A_DATA_REG_TO_A_CH: STD_LOGIC := '0';
	signal PS_GATE_OP_MOD_REG_TO_A_CH: STD_LOGIC := '0';
	signal PS_GATE_E2_DATA_REG_TO_A_CH: STD_LOGIC := '0';
	signal PS_GATE_F2_DATA_REG_TO_A_CH: STD_LOGIC := '0';
	signal PS_B_CH_WM_BIT_1: STD_LOGIC := '0';
	signal PS_OP_MOD_REG_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";
	signal PS_AR_EXIT_CH_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";
	signal PS_B_CH_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";
	signal PS_E2_REG_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";
	signal PS_F2_REG_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";
	signal PS_AR_CH_STAR_TRANSLATOR_STAR_BUS: STD_LOGIC_VECTOR (3 downTo 0) := "0000";
	signal PS_B_CH_NOT_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";

	-- Outputs

	signal PS_A_CH_BUS: STD_LOGIC_VECTOR (7 downTo 0);
	signal PS_A_DATA_REG_BUS: STD_LOGIC_VECTOR (7 downTo 0);
	signal PS_A_CH_NOT_BUS: STD_LOGIC_VECTOR (7 downTo 0);
	signal PB_A_CH_BUS: STD_LOGIC_VECTOR (6 downTo 0);
	signal PB_A_CH_NOT_BUS: STD_LOGIC_VECTOR (6 downTo 0);
	signal LAMPS_A_CH: STD_LOGIC_VECTOR (7 downTo 0);

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

   constant MX_X1A_POS: integer := 7;
   constant MX_X6A_POS: integer := 8;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ADataRegAndDrive port map(
		FPGA_CLK => FPGA_CLK,
		PS_SW_B_CH_TO_A_REG => PS_SW_B_CH_TO_A_REG,
		PS_SW_AR_EXIT_CH_TO_A_REG => PS_SW_AR_EXIT_CH_TO_A_REG,
		MS_RESET_A_DATA_REG => MS_RESET_A_DATA_REG,
		PS_GATE_A_DATA_REG_TO_A_CH => PS_GATE_A_DATA_REG_TO_A_CH,
		PS_GATE_OP_MOD_REG_TO_A_CH => PS_GATE_OP_MOD_REG_TO_A_CH,
		PS_GATE_E2_DATA_REG_TO_A_CH => PS_GATE_E2_DATA_REG_TO_A_CH,
		PS_GATE_F2_DATA_REG_TO_A_CH => PS_GATE_F2_DATA_REG_TO_A_CH,
		PS_B_CH_WM_BIT_1 => PS_B_CH_WM_BIT_1,
		PS_OP_MOD_REG_BUS => PS_OP_MOD_REG_BUS,
		PS_AR_EXIT_CH_BUS => PS_AR_EXIT_CH_BUS,
		PS_B_CH_BUS => PS_B_CH_BUS,
		PS_E2_REG_BUS => PS_E2_REG_BUS,
		PS_F2_REG_BUS => PS_F2_REG_BUS,
		PS_AR_CH_STAR_TRANSLATOR_STAR_BUS => PS_AR_CH_STAR_TRANSLATOR_STAR_BUS,
		PS_B_CH_NOT_BUS => PS_B_CH_NOT_BUS,
		PS_A_CH_BUS => PS_A_CH_BUS,
		PS_A_DATA_REG_BUS => PS_A_DATA_REG_BUS,
		PS_A_CH_NOT_BUS => PS_A_CH_NOT_BUS,
		PB_A_CH_BUS => PB_A_CH_BUS,
		PB_A_CH_NOT_BUS => PB_A_CH_NOT_BUS,
		LAMPS_A_CH => LAMPS_A_CH);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;
   variable tv: std_logic_vector(15 downto 0);
   variable a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p: std_logic;
   variable g1, g2, g3, g4, g5, g6: std_logic;

   begin

   -- Your test bench code

   assert false report "Simulation Ended NORMALLY" severity failure;

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 2 ms;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY (TIMEOUT)" severity failure;
   end process;

-- END USER TEST BENCH PROCESS

END;
