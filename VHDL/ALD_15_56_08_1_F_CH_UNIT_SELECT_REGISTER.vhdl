-- VHDL for IBM SMS ALD page 15.56.08.1
-- Title: F CH UNIT SELECT REGISTER
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 9/18/2020 7:56:35 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_15_56_08_1_F_CH_UNIT_SELECT_REGISTER is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_F_CH_RESET:	 in STD_LOGIC;
		MS_CONTROL_REG_DISABLE:	 in STD_LOGIC;
		PS_ASSEMBLY_CH_C_CHAR_BIT:	 in STD_LOGIC;
		PS_SET_F_CH_UNIT_SEL_REG:	 in STD_LOGIC;
		PS_ASSEMBLY_CH_B_BIT:	 in STD_LOGIC;
		PS_ASSEMBLY_CH_A_BIT:	 in STD_LOGIC;
		PS_ASSEMBLY_CH_8_BIT:	 in STD_LOGIC;
		PS_F_CH_U_SEL_REG_C_BIT:	 out STD_LOGIC;
		PS_F_CH_U_SEL_REG_NOT_C_BIT:	 out STD_LOGIC;
		PS_F_CH_U_SEL_REG_NOT_B_BIT:	 out STD_LOGIC;
		PS_F_CH_U_SEL_REG_B_BIT:	 out STD_LOGIC;
		PS_F_CH_U_SEL_REG_NOT_A_BIT:	 out STD_LOGIC;
		PS_F_CH_U_SEL_REG_A_BIT:	 out STD_LOGIC;
		PS_F_CH_U_SEL_REG_NOT_8_BIT:	 out STD_LOGIC;
		PS_F_CH_U_SEL_REG_8_BIT:	 out STD_LOGIC);
end ALD_15_56_08_1_F_CH_UNIT_SELECT_REGISTER;

architecture behavioral of ALD_15_56_08_1_F_CH_UNIT_SELECT_REGISTER is 

	signal OUT_4A_C: STD_LOGIC;
	signal OUT_4A_C_Latch: STD_LOGIC;
	signal OUT_3A_R: STD_LOGIC;
	signal OUT_3A_R_Latch: STD_LOGIC;
	signal OUT_2A_G: STD_LOGIC;
	signal OUT_1A_D: STD_LOGIC;
	signal OUT_5B_R: STD_LOGIC;
	signal OUT_2B_C: STD_LOGIC;
	signal OUT_1B_R: STD_LOGIC;
	signal OUT_4C_P: STD_LOGIC;
	signal OUT_4C_P_Latch: STD_LOGIC;
	signal OUT_3C_NoPin: STD_LOGIC;
	signal OUT_3C_NoPin_Latch: STD_LOGIC;
	signal OUT_1C_B: STD_LOGIC;
	signal OUT_5D_R: STD_LOGIC;
	signal OUT_1D_C: STD_LOGIC;
	signal OUT_4E_F: STD_LOGIC;
	signal OUT_4E_F_Latch: STD_LOGIC;
	signal OUT_3E_NoPin: STD_LOGIC;
	signal OUT_3E_NoPin_Latch: STD_LOGIC;
	signal OUT_1E_E: STD_LOGIC;
	signal OUT_5F_R: STD_LOGIC;
	signal OUT_1F_D: STD_LOGIC;
	signal OUT_4G_P: STD_LOGIC;
	signal OUT_4G_P_Latch: STD_LOGIC;
	signal OUT_3G_NoPin: STD_LOGIC;
	signal OUT_3G_NoPin_Latch: STD_LOGIC;
	signal OUT_1G_B: STD_LOGIC;
	signal OUT_5H_R: STD_LOGIC;
	signal OUT_1H_C: STD_LOGIC;

begin

	OUT_4A_C_Latch <= NOT(MS_F_CH_RESET AND OUT_3A_R );
	OUT_3A_R_Latch <= NOT(OUT_4A_C AND OUT_5B_R );
	OUT_2A_G <= NOT(OUT_3A_R AND MS_CONTROL_REG_DISABLE );
	OUT_1A_D <= NOT OUT_2A_G;
	OUT_5B_R <= NOT(PS_ASSEMBLY_CH_C_CHAR_BIT AND PS_SET_F_CH_UNIT_SEL_REG );
	OUT_2B_C <= NOT(OUT_4A_C AND MS_CONTROL_REG_DISABLE );
	OUT_1B_R <= NOT OUT_2B_C;
	OUT_4C_P_Latch <= NOT(MS_F_CH_RESET AND OUT_3C_NoPin );
	OUT_3C_NoPin_Latch <= NOT(OUT_4C_P AND OUT_5D_R );
	OUT_1C_B <= NOT OUT_3C_NoPin;
	OUT_5D_R <= NOT(PS_ASSEMBLY_CH_B_BIT AND PS_SET_F_CH_UNIT_SEL_REG );
	OUT_1D_C <= NOT OUT_4C_P;
	OUT_4E_F_Latch <= NOT(MS_F_CH_RESET AND OUT_3E_NoPin );
	OUT_3E_NoPin_Latch <= NOT(OUT_4E_F AND OUT_5F_R );
	OUT_1E_E <= NOT OUT_3E_NoPin;
	OUT_5F_R <= NOT(PS_ASSEMBLY_CH_A_BIT AND PS_SET_F_CH_UNIT_SEL_REG );
	OUT_1F_D <= NOT OUT_4E_F;
	OUT_4G_P_Latch <= NOT(MS_F_CH_RESET AND OUT_3G_NoPin );
	OUT_3G_NoPin_Latch <= NOT(OUT_4G_P AND OUT_5H_R );
	OUT_1G_B <= NOT OUT_3G_NoPin;
	OUT_5H_R <= NOT(PS_ASSEMBLY_CH_8_BIT AND PS_SET_F_CH_UNIT_SEL_REG );
	OUT_1H_C <= NOT OUT_4G_P;

	PS_F_CH_U_SEL_REG_C_BIT <= OUT_1A_D;
	PS_F_CH_U_SEL_REG_NOT_C_BIT <= OUT_1B_R;
	PS_F_CH_U_SEL_REG_NOT_B_BIT <= OUT_1C_B;
	PS_F_CH_U_SEL_REG_B_BIT <= OUT_1D_C;
	PS_F_CH_U_SEL_REG_NOT_A_BIT <= OUT_1E_E;
	PS_F_CH_U_SEL_REG_A_BIT <= OUT_1F_D;
	PS_F_CH_U_SEL_REG_NOT_8_BIT <= OUT_1G_B;
	PS_F_CH_U_SEL_REG_8_BIT <= OUT_1H_C;

	Latch_4A: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4A_C_Latch,
		Q => OUT_4A_C,
		QBar => OPEN );

	Latch_3A: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3A_R_Latch,
		Q => OUT_3A_R,
		QBar => OPEN );

	Latch_4C: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4C_P_Latch,
		Q => OUT_4C_P,
		QBar => OPEN );

	Latch_3C: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3C_NoPin_Latch,
		Q => OUT_3C_NoPin,
		QBar => OPEN );

	Latch_4E: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4E_F_Latch,
		Q => OUT_4E_F,
		QBar => OPEN );

	Latch_3E: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3E_NoPin_Latch,
		Q => OUT_3E_NoPin,
		QBar => OPEN );

	Latch_4G: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4G_P_Latch,
		Q => OUT_4G_P,
		QBar => OPEN );

	Latch_3G: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3G_NoPin_Latch,
		Q => OUT_3G_NoPin,
		QBar => OPEN );


end;
