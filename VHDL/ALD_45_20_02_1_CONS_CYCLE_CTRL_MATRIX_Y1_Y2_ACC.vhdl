-- VHDL for IBM SMS ALD page 45.20.02.1
-- Title: CONS CYCLE CTRL MATRIX Y1+Y2-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/27/2020 9:04:39 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_45_20_02_1_CONS_CYCLE_CTRL_MATRIX_Y1_Y2_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_ALTER_ROUTINE:	 in STD_LOGIC;
		PS_CONS_MX_X6_POS:	 in STD_LOGIC;
		PS_CONS_MX_X1A_POS:	 in STD_LOGIC;
		PS_CONS_MX_Y_DRIVE_1:	 in STD_LOGIC;
		MS_CONS_MX_Y_DC_RESET:	 in STD_LOGIC;
		PS_CONS_MX_ADDR_DRIVE:	 in STD_LOGIC;
		PS_CONS_MX_Y6_POS:	 in STD_LOGIC;
		MS_ADDRESS_SET_COMPLETE:	 in STD_LOGIC;
		MS_DISPLAY_ADDR_COMPLETE:	 in STD_LOGIC;
		PS_SET_CONS_MX_Y3_POS:	 in STD_LOGIC;
		MS_CONS_MX_Y2_POS:	 out STD_LOGIC;
		PS_CONS_MX_Y2_POS:	 out STD_LOGIC;
		PS_RESET_CONS_MX_Y2_POS:	 out STD_LOGIC;
		MS_CONS_MX_Y1_POS:	 out STD_LOGIC;
		PS_CONS_MX_Y1_POS:	 out STD_LOGIC);
end ALD_45_20_02_1_CONS_CYCLE_CTRL_MATRIX_Y1_Y2_ACC;

architecture behavioral of ALD_45_20_02_1_CONS_CYCLE_CTRL_MATRIX_Y1_Y2_ACC is 

	signal OUT_2A_P: STD_LOGIC;
	signal OUT_2A_B: STD_LOGIC;
	signal OUT_1A_D: STD_LOGIC;
	signal OUT_5B_NoPin: STD_LOGIC;
	signal OUT_5B_NoPin_Latch: STD_LOGIC;
	signal OUT_4B_C: STD_LOGIC;
	signal OUT_4B_C_Latch: STD_LOGIC;
	signal OUT_1B_D: STD_LOGIC;
	signal OUT_1B_D_Latch: STD_LOGIC;
	signal OUT_5C_NoPin: STD_LOGIC;
	signal OUT_5C_NoPin_Latch: STD_LOGIC;
	signal OUT_2D_P: STD_LOGIC;
	signal OUT_2D_B: STD_LOGIC;
	signal OUT_1D_C: STD_LOGIC;
	signal OUT_5E_NoPin: STD_LOGIC;
	signal OUT_4E_D: STD_LOGIC;
	signal OUT_1E_C: STD_LOGIC;
	signal OUT_1E_C_Latch: STD_LOGIC;

begin


	SMS_TAM_2A: entity SMS_TAM
	    port map (
		FPGA_CLK => FPGA_CLK,
		GATEON1 => OUT_1E_C,	-- Pin A
		ACSET2 => OUT_1E_C,	-- Pin E
		ACSET1 => PS_CONS_MX_Y_DRIVE_1,	-- Pin D
		GATEON2 => PS_CONS_MX_ADDR_DRIVE,	-- Pin F
		GATEOFF1 => OUT_4B_C,	-- Pin R
		GATEOFF2 => PS_SET_CONS_MX_Y3_POS,	-- Pin K
		ACRESET2 => PS_CONS_MX_Y_DRIVE_1,	-- Pin L
		ACRESET1 => PS_CONS_MX_ADDR_DRIVE,	-- Pin Q
		DCRESET => MS_CONS_MX_Y_DC_RESET,	-- Pin H
		OUTON => OUT_2A_P,
		OUTOFF => OUT_2A_B,
		DCSET => OPEN,
		DCRFORCE => OPEN,
		DCSFORCE => OPEN );

	OUT_1A_D <= NOT(OUT_2A_P );
	OUT_5B_NoPin_Latch <= NOT(OUT_1B_D AND PS_ALTER_ROUTINE AND PS_CONS_MX_X6_POS );
	OUT_4B_C_Latch <= NOT(OUT_5B_NoPin AND OUT_5C_NoPin );
	OUT_1B_D_Latch <= NOT OUT_2A_B;
	OUT_5C_NoPin_Latch <= NOT(OUT_1B_D AND PS_CONS_MX_X1A_POS );

	SMS_TAM_2D: entity SMS_TAM
	    port map (
		FPGA_CLK => FPGA_CLK,
		GATEON1 => OUT_4E_D,	-- Pin A
		ACSET1 => PS_CONS_MX_Y_DRIVE_1,	-- Pin D
		GATEOFF2 => OUT_1E_C,	-- Pin K
		GATEOFF1 => OUT_1E_C,	-- Pin R
		ACRESET2 => PS_CONS_MX_Y_DRIVE_1,	-- Pin L
		ACRESET1 => PS_CONS_MX_ADDR_DRIVE,	-- Pin Q
		DCRESET => MS_CONS_MX_Y_DC_RESET,	-- Pin H
		OUTON => OUT_2D_P,
		OUTOFF => OUT_2D_B,
		DCSET => OPEN,
		DCRFORCE => OPEN,
		DCSFORCE => OPEN,
		ACSET2 => OPEN,
		GATEON2 => OPEN );

	OUT_1D_C <= NOT(OUT_2D_P );
	OUT_5E_NoPin <= NOT(PS_CONS_MX_Y6_POS AND MS_ADDRESS_SET_COMPLETE AND MS_DISPLAY_ADDR_COMPLETE );
	OUT_4E_D <= NOT(OUT_5E_NoPin );
	OUT_1E_C_Latch <= NOT OUT_2D_B;

	MS_CONS_MX_Y2_POS <= OUT_1A_D;
	PS_RESET_CONS_MX_Y2_POS <= OUT_4B_C;
	PS_CONS_MX_Y2_POS <= OUT_1B_D;
	MS_CONS_MX_Y1_POS <= OUT_1D_C;
	PS_CONS_MX_Y1_POS <= OUT_1E_C;

	Latch_5B: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_5B_NoPin_Latch,
		Q => OUT_5B_NoPin,
		QBar => OPEN );

	Latch_4B: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4B_C_Latch,
		Q => OUT_4B_C,
		QBar => OPEN );

	Latch_1B: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_1B_D_Latch,
		Q => OUT_1B_D,
		QBar => OPEN );

	Latch_5C: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_5C_NoPin_Latch,
		Q => OUT_5C_NoPin,
		QBar => OPEN );

	Latch_1E: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_1E_C_Latch,
		Q => OUT_1E_C,
		QBar => OPEN );


end;
