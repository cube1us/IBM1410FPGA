-- VHDL for IBM SMS ALD page 14.71.40.1
-- Title: ADDRESS MODIFIER CONTROL-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 9/7/2020 11:11:07 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_14_71_40_1_ADDRESS_MODIFIER_CONTROL_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_LOGIC_GATE_B_1:	 in STD_LOGIC;
		PS_BORROW_LATCH_ON:	 in STD_LOGIC;
		PS_LOGIC_GATE_D_1:	 in STD_LOGIC;
		MS_PROGRAM_RESET_5:	 in STD_LOGIC;
		PS_ZERO_LATCH_ON:	 in STD_LOGIC;
		PS_2ND_CLOCK_PULSE_3:	 in STD_LOGIC;
		MV_2ND_CHECK_TEST_SWITCH:	 in STD_LOGIC;
		PS_LOGIC_GATE_A_OR_R:	 in STD_LOGIC;
		PS_LOGIC_GATE_Z:	 in STD_LOGIC;
		PS_EVEN_HUNDREDS_ADDR:	 out STD_LOGIC;
		PS_NOT_EVEN_HUNDREDS_ADDR:	 out STD_LOGIC;
		PS_RESET_ADDR_MOD_CTRL_LATCH:	 out STD_LOGIC);
end ALD_14_71_40_1_ADDRESS_MODIFIER_CONTROL_ACC;

architecture behavioral of ALD_14_71_40_1_ADDRESS_MODIFIER_CONTROL_ACC is 

	signal OUT_5A_B: STD_LOGIC;
	signal OUT_3A_NoPin: STD_LOGIC;
	signal OUT_3A_NoPin_Latch: STD_LOGIC;
	signal OUT_1A_D: STD_LOGIC;
	signal OUT_1A_D_Latch: STD_LOGIC;
	signal OUT_5B_C: STD_LOGIC;
	signal OUT_5C_B: STD_LOGIC;
	signal OUT_3C_E: STD_LOGIC;
	signal OUT_3C_E_Latch: STD_LOGIC;
	signal OUT_1C_K: STD_LOGIC;
	signal OUT_1C_K_Latch: STD_LOGIC;
	signal OUT_5D_D: STD_LOGIC;
	signal OUT_1E_F: STD_LOGIC;
	signal OUT_1E_F_Latch: STD_LOGIC;
	signal OUT_5F_NoPin: STD_LOGIC;
	signal OUT_3F_G: STD_LOGIC;
	signal OUT_3F_G_Latch: STD_LOGIC;
	signal OUT_1F_D: STD_LOGIC;
	signal OUT_5G_R: STD_LOGIC;
	signal OUT_DOT_5A: STD_LOGIC;
	signal OUT_DOT_5C: STD_LOGIC;
	signal OUT_DOT_1E: STD_LOGIC;

begin

	OUT_5A_B <= NOT PS_2ND_CLOCK_PULSE_3;
	OUT_3A_NoPin_Latch <= NOT(OUT_1A_D AND MS_PROGRAM_RESET_5 AND MS_LOGIC_GATE_B_1 );
	OUT_1A_D_Latch <= NOT(OUT_3A_NoPin AND OUT_DOT_5A );
	OUT_5B_C <= NOT(PS_BORROW_LATCH_ON AND PS_LOGIC_GATE_D_1 );
	OUT_5C_B <= NOT PS_2ND_CLOCK_PULSE_3;
	OUT_3C_E_Latch <= NOT(OUT_1C_K AND MS_LOGIC_GATE_B_1 AND MS_PROGRAM_RESET_5 );
	OUT_1C_K_Latch <= NOT(OUT_DOT_5C AND OUT_3C_E );
	OUT_5D_D <= NOT(PS_LOGIC_GATE_D_1 AND PS_ZERO_LATCH_ON );
	OUT_1E_F_Latch <= NOT OUT_3F_G;
	OUT_5F_NoPin <= NOT(PS_LOGIC_GATE_A_OR_R AND PS_2ND_CLOCK_PULSE_3 );
	OUT_3F_G_Latch <= NOT(OUT_5F_NoPin AND OUT_DOT_1E );
	OUT_1F_D <= NOT(MV_2ND_CHECK_TEST_SWITCH AND OUT_5G_R AND MS_PROGRAM_RESET_5 );
	OUT_5G_R <= NOT(PS_2ND_CLOCK_PULSE_3 AND PS_LOGIC_GATE_Z );
	OUT_DOT_5A <= OUT_5A_B OR OUT_5B_C;
	OUT_DOT_5C <= OUT_5C_B OR OUT_5D_D;
	OUT_DOT_1E <= OUT_1E_F OR OUT_1F_D;

	PS_EVEN_HUNDREDS_ADDR <= OUT_1A_D;
	PS_NOT_EVEN_HUNDREDS_ADDR <= OUT_1C_K;
	PS_RESET_ADDR_MOD_CTRL_LATCH <= OUT_DOT_1E;

	Latch_3A: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3A_NoPin_Latch,
		Q => OUT_3A_NoPin,
		QBar => OPEN );

	Latch_1A: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_1A_D_Latch,
		Q => OUT_1A_D,
		QBar => OPEN );

	Latch_3C: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3C_E_Latch,
		Q => OUT_3C_E,
		QBar => OPEN );

	Latch_1C: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_1C_K_Latch,
		Q => OUT_1C_K,
		QBar => OPEN );

	Latch_1E: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_1E_F_Latch,
		Q => OUT_1E_F,
		QBar => OPEN );

	Latch_3F: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3F_G_Latch,
		Q => OUT_3F_G,
		QBar => OPEN );


end;
