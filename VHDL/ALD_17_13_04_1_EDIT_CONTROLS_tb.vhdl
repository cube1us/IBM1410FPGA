-- Test Bench VHDL for IBM SMS ALD page 17.13.04.1
-- Title: EDIT CONTROLS
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/8/2020 4:54:03 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_17_13_04_1_EDIT_CONTROLS_tb is
end ALD_17_13_04_1_EDIT_CONTROLS_tb;

architecture behavioral of ALD_17_13_04_1_EDIT_CONTROLS_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_17_13_04_1_EDIT_CONTROLS
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_NOT_0_SUPPRESS:	 in STD_LOGIC;
		PS_E_OR_Z_DOT_3RD_SCAN_DOT_EXTENSION:	 in STD_LOGIC;
		PS_NOT_BLANK:	 in STD_LOGIC;
		MS_NOT_0_SUPPRESS:	 in STD_LOGIC;
		MS_DECIMAL_CONTROL:	 in STD_LOGIC;
		MS_EDIT_SKID_CYCLE:	 in STD_LOGIC;
		PS_E_OR_Z_DOT_2ND_SCAN_DOT_EXTENSION:	 in STD_LOGIC;
		PS_0_SUPPRESS:	 in STD_LOGIC;
		PS_NOT_DECIMAL_CONTROL:	 in STD_LOGIC;
		PS_BLANK_0_OR_COMMA:	 in STD_LOGIC;
		MS_FLOAT_DOLLAR_SIGN:	 in STD_LOGIC;
		MS_NOT_ASTERISK_FILL_OR_FL_DOL:	 in STD_LOGIC;
		PS_2ND_SCAN_SIG_CHAR:	 out STD_LOGIC;
		MS_BLANKED_0_OR_COMMA:	 out STD_LOGIC;
		PS_NOT_ASTERISK_FILL:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_NOT_0_SUPPRESS: STD_LOGIC := '0';
	signal PS_E_OR_Z_DOT_3RD_SCAN_DOT_EXTENSION: STD_LOGIC := '0';
	signal PS_NOT_BLANK: STD_LOGIC := '0';
	signal MS_NOT_0_SUPPRESS: STD_LOGIC := '1';
	signal MS_DECIMAL_CONTROL: STD_LOGIC := '1';
	signal MS_EDIT_SKID_CYCLE: STD_LOGIC := '1';
	signal PS_E_OR_Z_DOT_2ND_SCAN_DOT_EXTENSION: STD_LOGIC := '0';
	signal PS_0_SUPPRESS: STD_LOGIC := '0';
	signal PS_NOT_DECIMAL_CONTROL: STD_LOGIC := '0';
	signal PS_BLANK_0_OR_COMMA: STD_LOGIC := '0';
	signal MS_FLOAT_DOLLAR_SIGN: STD_LOGIC := '1';
	signal MS_NOT_ASTERISK_FILL_OR_FL_DOL: STD_LOGIC := '1';

	-- Outputs

	signal PS_2ND_SCAN_SIG_CHAR: STD_LOGIC;
	signal MS_BLANKED_0_OR_COMMA: STD_LOGIC;
	signal PS_NOT_ASTERISK_FILL: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

   constant MX_X1A_POS: integer := 7;
   constant MX_X6A_POS: integer := 8;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_17_13_04_1_EDIT_CONTROLS port map(
		FPGA_CLK => FPGA_CLK,
		PS_NOT_0_SUPPRESS => PS_NOT_0_SUPPRESS,
		PS_E_OR_Z_DOT_3RD_SCAN_DOT_EXTENSION => PS_E_OR_Z_DOT_3RD_SCAN_DOT_EXTENSION,
		PS_NOT_BLANK => PS_NOT_BLANK,
		MS_NOT_0_SUPPRESS => MS_NOT_0_SUPPRESS,
		MS_DECIMAL_CONTROL => MS_DECIMAL_CONTROL,
		MS_EDIT_SKID_CYCLE => MS_EDIT_SKID_CYCLE,
		PS_E_OR_Z_DOT_2ND_SCAN_DOT_EXTENSION => PS_E_OR_Z_DOT_2ND_SCAN_DOT_EXTENSION,
		PS_0_SUPPRESS => PS_0_SUPPRESS,
		PS_NOT_DECIMAL_CONTROL => PS_NOT_DECIMAL_CONTROL,
		PS_BLANK_0_OR_COMMA => PS_BLANK_0_OR_COMMA,
		MS_FLOAT_DOLLAR_SIGN => MS_FLOAT_DOLLAR_SIGN,
		MS_NOT_ASTERISK_FILL_OR_FL_DOL => MS_NOT_ASTERISK_FILL_OR_FL_DOL,
		PS_2ND_SCAN_SIG_CHAR => PS_2ND_SCAN_SIG_CHAR,
		MS_BLANKED_0_OR_COMMA => MS_BLANKED_0_OR_COMMA,
		PS_NOT_ASTERISK_FILL => PS_NOT_ASTERISK_FILL);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;
   variable tv: std_logic_vector(25 downto 0);
   variable a,b,c,d,e,f,g,h,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z: std_logic;
   variable g1, g2, g3, g4, g5, g6, g7, g8, g9, g10: std_logic;

   begin

   -- Your test bench code

   testName := "17.13.04.1        ";

   for tt in 0 to 2**12 loop
      tv := std_logic_vector(to_unsigned(tt,tv'Length));
      a := tv(0);
      b := tv(1);
      c := tv(2);
      d := tv(3);
      e := tv(4);
      f := tv(5);
      g := tv(6);
      h := tv(7);
      j := tv(8);
      k := tv(9);
      l := tv(10);
      m := tv(11);
      
      g1 := a and b and c;
      g2 := g and (d or e);

		PS_NOT_0_SUPPRESS <= a;
		PS_E_OR_Z_DOT_3RD_SCAN_DOT_EXTENSION <= b;
		PS_NOT_BLANK <= c;
		MS_NOT_0_SUPPRESS <= not d;
		MS_DECIMAL_CONTROL <= not e;
		MS_EDIT_SKID_CYCLE <= not f;
		PS_E_OR_Z_DOT_2ND_SCAN_DOT_EXTENSION <= g;
		PS_0_SUPPRESS <= h;
		PS_NOT_DECIMAL_CONTROL <= j;
		PS_BLANK_0_OR_COMMA <= k;
		MS_FLOAT_DOLLAR_SIGN <= not l;
		MS_NOT_ASTERISK_FILL_OR_FL_DOL <= not m;
      
      wait for 30 ns;
      
      check1(PS_2ND_SCAN_SIG_CHAR,g1 or f or g2,testName,"2ND Scan Sig Char");
      check1(PS_NOT_ASTERISK_FILL,l or m,testName,"Not Asterisk Fill");
      check1(MS_BLANKED_0_OR_COMMA,not(g and h and j and k and (l or m)),testName,"Blanked 0 or Comma");
      
   end loop;

   assert false report "Simulation Ended NORMALLY" severity failure;

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 2 ms;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY (TIMEOUT)" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

end;
