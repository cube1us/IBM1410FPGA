-- Test Bench VHDL for IBM SMS ALD page 13.70.04.1
-- Title: BUFFER CONTROLS
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 8/13/2020 3:50:28 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_13_70_04_1_BUFFER_CONTROLS_tb is
end ALD_13_70_04_1_BUFFER_CONTROLS_tb;

architecture behavioral of ALD_13_70_04_1_BUFFER_CONTROLS_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_13_70_04_1_BUFFER_CONTROLS
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_E_CH_CORRECT_LENGTH_RECORD:	 in STD_LOGIC;
		MS_E_CH_CHECK:	 in STD_LOGIC;
		PS_E_CH_SECOND_SAMPLE_B:	 in STD_LOGIC;
		PS_E_CH_CONDITION:	 in STD_LOGIC;
		PS_E_CH_STATUS_SAMPLE_A_DELAY:	 in STD_LOGIC;
		PS_E_CH_SELECT_ANY_BUFFER:	 in STD_LOGIC;
		MS_E_CH_INPUT_MODE:	 in STD_LOGIC;
		PS_E_CH_STATUS_SAMPLE_B:	 in STD_LOGIC;
		PS_1401_MODE:	 in STD_LOGIC;
		PS_E_CH_IN_PROCESS:	 in STD_LOGIC;
		MS_E_CYCLE_DOT_ANY_LAST_GATE:	 in STD_LOGIC;
		MS_1401_MODE:	 in STD_LOGIC;
		MS_MASTER_ERROR:	 in STD_LOGIC;
		MS_1401_I_O_CHECK_RESET:	 in STD_LOGIC;
		MS_RES_PUNCH_OR_PRINT_ERROR:	 in STD_LOGIC;
		MS_E_CH_WRONG_LENGTH_RECORD:	 in STD_LOGIC;
		MS_E_CH_STACKER_SEL_OP_CODE:	 in STD_LOGIC;
		MS_E_CH_FORMS_CTRL_OP_CODE:	 in STD_LOGIC;
		MS_1401_PUNCH:	 in STD_LOGIC;
		MS_1401_PRINT:	 in STD_LOGIC;
		PS_E_CH_NO_TRANSFER_LATCH:	 in STD_LOGIC;
		PS_LOGIC_GATE_E_1:	 in STD_LOGIC;
		PS_LAST_INSN_RO_CYCLE:	 in STD_LOGIC;
		PS_E_CH_2_CHAR_ONLY_OP_CODES:	 in STD_LOGIC;
		MS_E_CH_NOT_READY:	 in STD_LOGIC;
		MS_E_CH_BUSY:	 in STD_LOGIC;
		MS_E_CH_NO_TRANSFER_LATCH:	 in STD_LOGIC;
		PS_OP_MOD_REG_NOT_A_BIT:	 in STD_LOGIC;
		PS_OP_MOD_REG_NOT_B_BIT:	 in STD_LOGIC;
		PS_E_CH_STACKER_SEL_OP_CODE:	 in STD_LOGIC;
		MC_CORRECT_TRANS_TO_BUFFER:	 out STD_LOGIC;
		MC_RESET_SELECT_BUFFER_LATCHES:	 out STD_LOGIC;
		MC_READY_TO_BUFFER:	 out STD_LOGIC;
		MS_1401_CARD_PR_SAMPLE_B:	 out STD_LOGIC;
		MC_1401_MODE_TO_BUFFER:	 out STD_LOGIC;
		MC_STACK_SELECT_TO_BUFFER:	 out STD_LOGIC;
		MC_FORMS_CTRL_TO_BUFFER:	 out STD_LOGIC;
		MS_FORMS_STACKER_GO:	 out STD_LOGIC;
		MC_FORMS_STACKER_GO:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_E_CH_CORRECT_LENGTH_RECORD: STD_LOGIC := '0';
	signal MS_E_CH_CHECK: STD_LOGIC := '1';
	signal PS_E_CH_SECOND_SAMPLE_B: STD_LOGIC := '0';
	signal PS_E_CH_CONDITION: STD_LOGIC := '0';
	signal PS_E_CH_STATUS_SAMPLE_A_DELAY: STD_LOGIC := '0';
	signal PS_E_CH_SELECT_ANY_BUFFER: STD_LOGIC := '0';
	signal MS_E_CH_INPUT_MODE: STD_LOGIC := '1';
	signal PS_E_CH_STATUS_SAMPLE_B: STD_LOGIC := '0';
	signal PS_1401_MODE: STD_LOGIC := '0';
	signal PS_E_CH_IN_PROCESS: STD_LOGIC := '0';
	signal MS_E_CYCLE_DOT_ANY_LAST_GATE: STD_LOGIC := '1';
	signal MS_1401_MODE: STD_LOGIC := '1';
	signal MS_MASTER_ERROR: STD_LOGIC := '1';
	signal MS_1401_I_O_CHECK_RESET: STD_LOGIC := '1';
	signal MS_RES_PUNCH_OR_PRINT_ERROR: STD_LOGIC := '1';
	signal MS_E_CH_WRONG_LENGTH_RECORD: STD_LOGIC := '1';
	signal MS_E_CH_STACKER_SEL_OP_CODE: STD_LOGIC := '1';
	signal MS_E_CH_FORMS_CTRL_OP_CODE: STD_LOGIC := '1';
	signal MS_1401_PUNCH: STD_LOGIC := '1';
	signal MS_1401_PRINT: STD_LOGIC := '1';
	signal PS_E_CH_NO_TRANSFER_LATCH: STD_LOGIC := '0';
	signal PS_LOGIC_GATE_E_1: STD_LOGIC := '0';
	signal PS_LAST_INSN_RO_CYCLE: STD_LOGIC := '0';
	signal PS_E_CH_2_CHAR_ONLY_OP_CODES: STD_LOGIC := '0';
	signal MS_E_CH_NOT_READY: STD_LOGIC := '1';
	signal MS_E_CH_BUSY: STD_LOGIC := '1';
	signal MS_E_CH_NO_TRANSFER_LATCH: STD_LOGIC := '1';
	signal PS_OP_MOD_REG_NOT_A_BIT: STD_LOGIC := '0';
	signal PS_OP_MOD_REG_NOT_B_BIT: STD_LOGIC := '0';
	signal PS_E_CH_STACKER_SEL_OP_CODE: STD_LOGIC := '0';

	-- Outputs

	signal MC_CORRECT_TRANS_TO_BUFFER: STD_LOGIC;
	signal MC_RESET_SELECT_BUFFER_LATCHES: STD_LOGIC;
	signal MC_READY_TO_BUFFER: STD_LOGIC;
	signal MS_1401_CARD_PR_SAMPLE_B: STD_LOGIC;
	signal MC_1401_MODE_TO_BUFFER: STD_LOGIC;
	signal MC_STACK_SELECT_TO_BUFFER: STD_LOGIC;
	signal MC_FORMS_CTRL_TO_BUFFER: STD_LOGIC;
	signal MS_FORMS_STACKER_GO: STD_LOGIC;
	signal MC_FORMS_STACKER_GO: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_13_70_04_1_BUFFER_CONTROLS port map(
		FPGA_CLK => FPGA_CLK,
		PS_E_CH_CORRECT_LENGTH_RECORD => PS_E_CH_CORRECT_LENGTH_RECORD,
		MS_E_CH_CHECK => MS_E_CH_CHECK,
		PS_E_CH_SECOND_SAMPLE_B => PS_E_CH_SECOND_SAMPLE_B,
		PS_E_CH_CONDITION => PS_E_CH_CONDITION,
		PS_E_CH_STATUS_SAMPLE_A_DELAY => PS_E_CH_STATUS_SAMPLE_A_DELAY,
		PS_E_CH_SELECT_ANY_BUFFER => PS_E_CH_SELECT_ANY_BUFFER,
		MS_E_CH_INPUT_MODE => MS_E_CH_INPUT_MODE,
		PS_E_CH_STATUS_SAMPLE_B => PS_E_CH_STATUS_SAMPLE_B,
		PS_1401_MODE => PS_1401_MODE,
		PS_E_CH_IN_PROCESS => PS_E_CH_IN_PROCESS,
		MS_E_CYCLE_DOT_ANY_LAST_GATE => MS_E_CYCLE_DOT_ANY_LAST_GATE,
		MS_1401_MODE => MS_1401_MODE,
		MS_MASTER_ERROR => MS_MASTER_ERROR,
		MS_1401_I_O_CHECK_RESET => MS_1401_I_O_CHECK_RESET,
		MS_RES_PUNCH_OR_PRINT_ERROR => MS_RES_PUNCH_OR_PRINT_ERROR,
		MS_E_CH_WRONG_LENGTH_RECORD => MS_E_CH_WRONG_LENGTH_RECORD,
		MS_E_CH_STACKER_SEL_OP_CODE => MS_E_CH_STACKER_SEL_OP_CODE,
		MS_E_CH_FORMS_CTRL_OP_CODE => MS_E_CH_FORMS_CTRL_OP_CODE,
		MS_1401_PUNCH => MS_1401_PUNCH,
		MS_1401_PRINT => MS_1401_PRINT,
		PS_E_CH_NO_TRANSFER_LATCH => PS_E_CH_NO_TRANSFER_LATCH,
		PS_LOGIC_GATE_E_1 => PS_LOGIC_GATE_E_1,
		PS_LAST_INSN_RO_CYCLE => PS_LAST_INSN_RO_CYCLE,
		PS_E_CH_2_CHAR_ONLY_OP_CODES => PS_E_CH_2_CHAR_ONLY_OP_CODES,
		MS_E_CH_NOT_READY => MS_E_CH_NOT_READY,
		MS_E_CH_BUSY => MS_E_CH_BUSY,
		MS_E_CH_NO_TRANSFER_LATCH => MS_E_CH_NO_TRANSFER_LATCH,
		PS_OP_MOD_REG_NOT_A_BIT => PS_OP_MOD_REG_NOT_A_BIT,
		PS_OP_MOD_REG_NOT_B_BIT => PS_OP_MOD_REG_NOT_B_BIT,
		PS_E_CH_STACKER_SEL_OP_CODE => PS_E_CH_STACKER_SEL_OP_CODE,
		MC_CORRECT_TRANS_TO_BUFFER => MC_CORRECT_TRANS_TO_BUFFER,
		MC_RESET_SELECT_BUFFER_LATCHES => MC_RESET_SELECT_BUFFER_LATCHES,
		MC_READY_TO_BUFFER => MC_READY_TO_BUFFER,
		MS_1401_CARD_PR_SAMPLE_B => MS_1401_CARD_PR_SAMPLE_B,
		MC_1401_MODE_TO_BUFFER => MC_1401_MODE_TO_BUFFER,
		MC_STACK_SELECT_TO_BUFFER => MC_STACK_SELECT_TO_BUFFER,
		MC_FORMS_CTRL_TO_BUFFER => MC_FORMS_CTRL_TO_BUFFER,
		MS_FORMS_STACKER_GO => MS_FORMS_STACKER_GO,
		MC_FORMS_STACKER_GO => MC_FORMS_STACKER_GO);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

end;
