-- Test Bench VHDL for IBM SMS ALD page 13.74.01.1
-- Title: FILE CONTROLS-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 11/16/2020 4:36:52 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_13_74_01_1_FILE_CONTROLS_ACC_tb is
end ALD_13_74_01_1_FILE_CONTROLS_ACC_tb;

architecture behavioral of ALD_13_74_01_1_FILE_CONTROLS_ACC_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_13_74_01_1_FILE_CONTROLS_ACC
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_E_CH_SELECT_UNIT_F:	 in STD_LOGIC;
		PS_PERCENT_OR_COML_AT:	 in STD_LOGIC;
		PS_M_OR_L_OP_CODES:	 in STD_LOGIC;
		PS_F_CH_SELECT_UNIT_F:	 in STD_LOGIC;
		PS_LOZENGE_OR_ASTERISK:	 in STD_LOGIC;
		PS_NO_SCAN:	 in STD_LOGIC;
		PS_B_CH_NOT_GROUP_MARK_WM:	 in STD_LOGIC;
		PS_LAST_INSN_RO_CYCLE:	 in STD_LOGIC;
		MS_FILE_RING_7_LATCH:	 in STD_LOGIC;
		MS_B_CH_GROUP_MARK_DOT_WM:	 in STD_LOGIC;
		PS_UNITS_OR_BODY_LATCH:	 in STD_LOGIC;
		PS_D_CYCLE:	 in STD_LOGIC;
		PS_NO_OR_1ST_OR_2ND_SCAN:	 in STD_LOGIC;
		PS_2ND_SCAN:	 in STD_LOGIC;
		PS_EXTENSION_LATCH:	 in STD_LOGIC;
		MS_FILE_OP:	 out STD_LOGIC;
		MS_FILE_OP_STAR_1405:	 out STD_LOGIC;
		PS_FILE_OP:	 out STD_LOGIC;
		PS_FILE_OP_DOT_D_CY_DOT_NO_SCAN:	 out STD_LOGIC;
		MS_FILE_OP_DOT_LAST_INSN_RO_CYCLE:	 out STD_LOGIC;
		MS_FILE_OP_TAKE_2ND_SCAN_CYCLE:	 out STD_LOGIC;
		MS_FILE_OP_DOT_D_CY_DOT_U_OR_Y:	 out STD_LOGIC;
		MS_FILE_OP_TAKE_EXTENSION_CYCLE:	 out STD_LOGIC;
		MS_FILE_OP_DOT_D_CYCLE:	 out STD_LOGIC;
		MS_FILE_OP_DOT_D_CY_DOT_2ND_SCAN:	 out STD_LOGIC;
		PS_FILE_OP_DOT_D_CY_DOT_2ND_SCAN:	 out STD_LOGIC;
		PS_FILE_OP_DOT_D_CY_DOT_EXTENSION:	 out STD_LOGIC;
		MS_FILE_OP_DOT_D_CY_DOT_EXTENSION:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_E_CH_SELECT_UNIT_F: STD_LOGIC := '0';
	signal PS_PERCENT_OR_COML_AT: STD_LOGIC := '0';
	signal PS_M_OR_L_OP_CODES: STD_LOGIC := '0';
	signal PS_F_CH_SELECT_UNIT_F: STD_LOGIC := '0';
	signal PS_LOZENGE_OR_ASTERISK: STD_LOGIC := '0';
	signal PS_NO_SCAN: STD_LOGIC := '0';
	signal PS_B_CH_NOT_GROUP_MARK_WM: STD_LOGIC := '0';
	signal PS_LAST_INSN_RO_CYCLE: STD_LOGIC := '0';
	signal MS_FILE_RING_7_LATCH: STD_LOGIC := '1';
	signal MS_B_CH_GROUP_MARK_DOT_WM: STD_LOGIC := '1';
	signal PS_UNITS_OR_BODY_LATCH: STD_LOGIC := '0';
	signal PS_D_CYCLE: STD_LOGIC := '0';
	signal PS_NO_OR_1ST_OR_2ND_SCAN: STD_LOGIC := '0';
	signal PS_2ND_SCAN: STD_LOGIC := '0';
	signal PS_EXTENSION_LATCH: STD_LOGIC := '0';

	-- Outputs

	signal MS_FILE_OP: STD_LOGIC;
	signal MS_FILE_OP_STAR_1405: STD_LOGIC;
	signal PS_FILE_OP: STD_LOGIC;
	signal PS_FILE_OP_DOT_D_CY_DOT_NO_SCAN: STD_LOGIC;
	signal MS_FILE_OP_DOT_LAST_INSN_RO_CYCLE: STD_LOGIC;
	signal MS_FILE_OP_TAKE_2ND_SCAN_CYCLE: STD_LOGIC;
	signal MS_FILE_OP_DOT_D_CY_DOT_U_OR_Y: STD_LOGIC;
	signal MS_FILE_OP_TAKE_EXTENSION_CYCLE: STD_LOGIC;
	signal MS_FILE_OP_DOT_D_CYCLE: STD_LOGIC;
	signal MS_FILE_OP_DOT_D_CY_DOT_2ND_SCAN: STD_LOGIC;
	signal PS_FILE_OP_DOT_D_CY_DOT_2ND_SCAN: STD_LOGIC;
	signal PS_FILE_OP_DOT_D_CY_DOT_EXTENSION: STD_LOGIC;
	signal MS_FILE_OP_DOT_D_CY_DOT_EXTENSION: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_13_74_01_1_FILE_CONTROLS_ACC port map(
		FPGA_CLK => FPGA_CLK,
		PS_E_CH_SELECT_UNIT_F => PS_E_CH_SELECT_UNIT_F,
		PS_PERCENT_OR_COML_AT => PS_PERCENT_OR_COML_AT,
		PS_M_OR_L_OP_CODES => PS_M_OR_L_OP_CODES,
		PS_F_CH_SELECT_UNIT_F => PS_F_CH_SELECT_UNIT_F,
		PS_LOZENGE_OR_ASTERISK => PS_LOZENGE_OR_ASTERISK,
		PS_NO_SCAN => PS_NO_SCAN,
		PS_B_CH_NOT_GROUP_MARK_WM => PS_B_CH_NOT_GROUP_MARK_WM,
		PS_LAST_INSN_RO_CYCLE => PS_LAST_INSN_RO_CYCLE,
		MS_FILE_RING_7_LATCH => MS_FILE_RING_7_LATCH,
		MS_B_CH_GROUP_MARK_DOT_WM => MS_B_CH_GROUP_MARK_DOT_WM,
		PS_UNITS_OR_BODY_LATCH => PS_UNITS_OR_BODY_LATCH,
		PS_D_CYCLE => PS_D_CYCLE,
		PS_NO_OR_1ST_OR_2ND_SCAN => PS_NO_OR_1ST_OR_2ND_SCAN,
		PS_2ND_SCAN => PS_2ND_SCAN,
		PS_EXTENSION_LATCH => PS_EXTENSION_LATCH,
		MS_FILE_OP => MS_FILE_OP,
		MS_FILE_OP_STAR_1405 => MS_FILE_OP_STAR_1405,
		PS_FILE_OP => PS_FILE_OP,
		PS_FILE_OP_DOT_D_CY_DOT_NO_SCAN => PS_FILE_OP_DOT_D_CY_DOT_NO_SCAN,
		MS_FILE_OP_DOT_LAST_INSN_RO_CYCLE => MS_FILE_OP_DOT_LAST_INSN_RO_CYCLE,
		MS_FILE_OP_TAKE_2ND_SCAN_CYCLE => MS_FILE_OP_TAKE_2ND_SCAN_CYCLE,
		MS_FILE_OP_DOT_D_CY_DOT_U_OR_Y => MS_FILE_OP_DOT_D_CY_DOT_U_OR_Y,
		MS_FILE_OP_TAKE_EXTENSION_CYCLE => MS_FILE_OP_TAKE_EXTENSION_CYCLE,
		MS_FILE_OP_DOT_D_CYCLE => MS_FILE_OP_DOT_D_CYCLE,
		MS_FILE_OP_DOT_D_CY_DOT_2ND_SCAN => MS_FILE_OP_DOT_D_CY_DOT_2ND_SCAN,
		PS_FILE_OP_DOT_D_CY_DOT_2ND_SCAN => PS_FILE_OP_DOT_D_CY_DOT_2ND_SCAN,
		PS_FILE_OP_DOT_D_CY_DOT_EXTENSION => PS_FILE_OP_DOT_D_CY_DOT_EXTENSION,
		MS_FILE_OP_DOT_D_CY_DOT_EXTENSION => MS_FILE_OP_DOT_D_CY_DOT_EXTENSION);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code

   
   testName := "13.74.01.1        ";
   
   -- First test *without* file op set - nothing should go on
   
   wait for 30 ns;
   check1(PS_FILE_OP,'0',testName,"SAA");
   check1(MS_FILE_OP,'1',testName,"SAB");
   check1(MS_FILE_OP_STAR_1405,'1',testName,"SAC");
   
   PS_NO_SCAN <= '1';
   PS_D_CYCLE <= '1';
   wait for 30 ns;
   check1(PS_FILE_OP_DOT_D_CY_DOT_NO_SCAN,'0',testName,"SA");
   PS_NO_SCAN <= '0';
   PS_D_CYCLE <= '0';
   
   PS_B_CH_NOT_GROUP_MARK_WM <= '1';
   MS_FILE_RING_7_LATCH <= '1';
   wait for 30 ns;
   check1(MS_FILE_OP_TAKE_2ND_SCAN_CYCLE,'1',testName,"SB");   
   PS_B_CH_NOT_GROUP_MARK_WM <= '0';
   
   PS_LAST_INSN_RO_CYCLE <= '1';
   check1(MS_FILE_OP_DOT_LAST_INSN_RO_CYCLE,'1',testName,"SC");
   PS_LAST_INSN_RO_CYCLE <= '0';
   
   MS_FILE_RING_7_LATCH <= '0';
   MS_B_CH_GROUP_MARK_DOT_WM <= '0';
   PS_UNITS_OR_BODY_LATCH <= '1';
   wait for 30 ns;
   check1(MS_FILE_OP_TAKE_EXTENSION_CYCLE,'1',testName,"SD");
   MS_FILE_RING_7_LATCH <= '1';
   MS_B_CH_GROUP_MARK_DOT_WM <= '1';
   PS_UNITS_OR_BODY_LATCH <= '0';
   wait for 30 ns;
   
   PS_UNITS_OR_BODY_LATCH <= '1';
   PS_D_CYCLE <= '1';
   wait for 30 ns;
   check1(MS_FILE_OP_DOT_D_CY_DOT_U_OR_Y,'1',testName,"SE");
   PS_UNITS_OR_BODY_LATCH <= '0';
   PS_D_CYCLE <= '0';
   wait for 30 ns;
   
   PS_NO_OR_1ST_OR_2ND_SCAN <= '1';
   PS_D_CYCLE <= '1';
   wait for 30 ns;
   check1(MS_FILE_OP_DOT_D_CYCLE,'1',testName,"SF");
   PS_NO_OR_1ST_OR_2ND_SCAN <= '1';
   PS_D_CYCLE <= '1';
   wait for 30 ns;
   
   PS_D_CYCLE <= '1';
   PS_2ND_SCAN <= '1';
   wait for 30 ns;
   check1(PS_FILE_OP_DOT_D_CY_DOT_2ND_SCAN,'0',testName,"SG");
   check1(MS_FILE_OP_DOT_D_CY_DOT_2ND_SCAN,'1',testName,"SH");
   PS_D_CYCLE <= '0';
   PS_2ND_SCAN <= '0';
   wait for 30 ns;
   
   PS_D_CYCLE <= '1';
   PS_EXTENSION_LATCH <= '1';
   wait for 30 ns;
   check1(PS_FILE_OP_DOT_D_CY_DOT_EXTENSION,'0',testName,"SI");
   check1(MS_FILE_OP_DOT_D_CY_DOT_EXTENSION,'1',testName,"SJ");
   PS_D_CYCLE <= '1';
   PS_EXTENSION_LATCH <= '1';
   
   PS_E_CH_SELECT_UNIT_F <= '0';
   PS_PERCENT_OR_COML_AT <= '1';
   PS_M_OR_L_OP_CODES <= '1';
   wait for 30 ns;
   check1(PS_FILE_OP,'0',testName,"1A");
   PS_E_CH_SELECT_UNIT_F <= '1';
   PS_PERCENT_OR_COML_AT <= '0';
   wait for 30 ns;
   check1(PS_FILE_OP,'0',testName,"1B");
   PS_PERCENT_OR_COML_AT <= '1';
   PS_M_OR_L_OP_CODES <= '0';
   wait for 30 ns;
   check1(PS_FILE_OP,'0',testName,"1C");
   PS_M_OR_L_OP_CODES <= '1';
   wait for 30 ns;
   check1(PS_FILE_OP,'1',testName,"1D");
   check1(MS_FILE_OP,'0',testName,"1E");
   check1(MS_FILE_OP_STAR_1405,'0',testName,"1F");
   
   PS_E_CH_SELECT_UNIT_F <= '0';
   PS_PERCENT_OR_COML_AT <= '0';
   PS_F_CH_SELECT_UNIT_F <= '0';
   PS_LOZENGE_OR_ASTERISK <= '1';
   wait for 30 ns;
   check1(PS_FILE_OP,'0',testName,"1G");
   PS_F_CH_SELECT_UNIT_F <= '1';
   PS_LOZENGE_OR_ASTERISK <= '0';
   wait for 30 ns;
   check1(PS_FILE_OP,'0',testName,"1H");
   PS_LOZENGE_OR_ASTERISK <= '1';
   wait for 30 ns;
   check1(PS_FILE_OP,'1',testName,"1I");
   
   -- Leave this gate on for the remaining tests - we already
   -- tested with it false, above.
   
   PS_NO_SCAN <= '0';
   PS_D_CYCLE <= '1';
   wait for 30 ns;
   check1(PS_FILE_OP_DOT_D_CY_DOT_NO_SCAN,'0',testName,"2A");
   PS_NO_SCAN <= '1';
   PS_D_CYCLE <= '0';
   wait for 30 ns;
   check1(PS_FILE_OP_DOT_D_CY_DOT_NO_SCAN,'0',testName,"2B");
   PS_NO_SCAN <= '1';
   PS_D_CYCLE <= '1';
   wait for 30 ns;
   check1(PS_FILE_OP_DOT_D_CY_DOT_NO_SCAN,'1',testName,"2C");
   
   -- Also leave this gate on for the remaining tests, for the
   -- same reasons.
   
   PS_B_CH_NOT_GROUP_MARK_WM <= '0';
   MS_FILE_RING_7_LATCH <= '1';
   wait for 30 ns;
   check1(MS_FILE_OP_TAKE_2ND_SCAN_CYCLE,'1',testName,"3A");
   PS_B_CH_NOT_GROUP_MARK_WM <= '1';
   MS_FILE_RING_7_LATCH <= '0';
   wait for 30 ns;
   check1(MS_FILE_OP_TAKE_2ND_SCAN_CYCLE,'1',testName,"3B");
   PS_B_CH_NOT_GROUP_MARK_WM <= '1';
   MS_FILE_RING_7_LATCH <= '1';
   wait for 30 ns;
   check1(MS_FILE_OP_TAKE_2ND_SCAN_CYCLE,'0',testName,"3C");
   PS_B_CH_NOT_GROUP_MARK_WM <= '0';
   MS_FILE_RING_7_LATCH <= '1';
   
   PS_LAST_INSN_RO_CYCLE <= '0';
   wait for 30 ns;
   check1(MS_FILE_OP_DOT_LAST_INSN_RO_CYCLE,'1',testName,"4A");
   PS_LAST_INSN_RO_CYCLE <= '1';
   wait for 30 ns;
   check1(MS_FILE_OP_DOT_LAST_INSN_RO_CYCLE,'0',testName,"4B");
   PS_LAST_INSN_RO_CYCLE <= '0';
   
   MS_FILE_RING_7_LATCH <= '1';
   MS_B_CH_GROUP_MARK_DOT_WM <= '1';
   PS_UNITS_OR_BODY_LATCH <= '1';
   wait for 30 ns;
   check1(MS_FILE_OP_TAKE_EXTENSION_CYCLE,'1',testName,"5A");
   MS_FILE_RING_7_LATCH <= '0';
   MS_B_CH_GROUP_MARK_DOT_WM <= '0';
   PS_UNITS_OR_BODY_LATCH <= '0';
   wait for 30 ns;
   check1(MS_FILE_OP_TAKE_EXTENSION_CYCLE,'1',testName,"5B");
   MS_FILE_RING_7_LATCH <= '1';
   MS_B_CH_GROUP_MARK_DOT_WM <= '0';
   PS_UNITS_OR_BODY_LATCH <= '1';
   wait for 30 ns;
   check1(MS_FILE_OP_TAKE_EXTENSION_CYCLE,'0',testName,"5C");
   MS_FILE_RING_7_LATCH <= '1';
   MS_B_CH_GROUP_MARK_DOT_WM <= '0';
   wait for 30 ns;
   check1(MS_FILE_OP_TAKE_EXTENSION_CYCLE,'0',testName,"5D");
   MS_FILE_RING_7_LATCH <= '1';
   MS_B_CH_GROUP_MARK_DOT_WM <= '1';
   PS_UNITS_OR_BODY_LATCH <= '0';
   
   PS_UNITS_OR_BODY_LATCH <= '0';
   PS_D_CYCLE <= '1';
   wait for 30 ns;
   check1(MS_FILE_OP_DOT_D_CY_DOT_U_OR_Y,'1',testName,"6A");
   PS_UNITS_OR_BODY_LATCH <= '1';
   PS_D_CYCLE <= '0';
   wait for 30 ns;
   check1(MS_FILE_OP_DOT_D_CY_DOT_U_OR_Y,'1',testName,"6A");
   PS_UNITS_OR_BODY_LATCH <= '1';
   PS_D_CYCLE <= '1';
   wait for 30 ns;
   check1(MS_FILE_OP_DOT_D_CY_DOT_U_OR_Y,'0',testName,"6C");
   PS_UNITS_OR_BODY_LATCH <= '0';
   
   PS_NO_OR_1ST_OR_2ND_SCAN <= '0';
   PS_D_CYCLE <= '1';
   wait for 30 ns;
   check1(MS_FILE_OP_DOT_D_CYCLE,'1',testName,"7A");
   PS_NO_OR_1ST_OR_2ND_SCAN <= '1';
   PS_D_CYCLE <= '0';
   wait for 30 ns;
   check1(MS_FILE_OP_DOT_D_CYCLE,'1',testName,"7B");
   PS_NO_OR_1ST_OR_2ND_SCAN <= '1';
   PS_D_CYCLE <= '1';
   wait for 30 ns;
   check1(MS_FILE_OP_DOT_D_CYCLE,'0',testName,"7C");
   PS_NO_OR_1ST_OR_2ND_SCAN <= '0';
   
   PS_D_CYCLE <= '0';
   PS_2ND_SCAN <= '1';
   wait for 30 ns;
   check1(PS_FILE_OP_DOT_D_CY_DOT_2ND_SCAN,'0',testName,"8A");
   check1(MS_FILE_OP_DOT_D_CY_DOT_2ND_SCAN,'1',testName,"8B");   
   PS_D_CYCLE <= '1';
   PS_2ND_SCAN <= '0';
   wait for 30 ns;
   check1(PS_FILE_OP_DOT_D_CY_DOT_2ND_SCAN,'0',testName,"8C");
   check1(MS_FILE_OP_DOT_D_CY_DOT_2ND_SCAN,'1',testName,"8D");   
   PS_D_CYCLE <= '1';
   PS_2ND_SCAN <= '1';
   wait for 30 ns;
   check1(PS_FILE_OP_DOT_D_CY_DOT_2ND_SCAN,'1',testName,"8E");
   check1(MS_FILE_OP_DOT_D_CY_DOT_2ND_SCAN,'0',testName,"8F");
   
   PS_D_CYCLE <= '0';
   PS_EXTENSION_LATCH <= '1';
   wait for 30 ns;
   check1(PS_FILE_OP_DOT_D_CY_DOT_EXTENSION,'0',testName,"9A");      
   check1(MS_FILE_OP_DOT_D_CY_DOT_EXTENSION,'1',testName,"9B");      
   PS_D_CYCLE <= '1';
   PS_EXTENSION_LATCH <= '0';
   wait for 30 ns;
   check1(PS_FILE_OP_DOT_D_CY_DOT_EXTENSION,'0',testName,"9C");      
   check1(MS_FILE_OP_DOT_D_CY_DOT_EXTENSION,'1',testName,"9D");      
   PS_D_CYCLE <= '1';
   PS_EXTENSION_LATCH <= '1';
   wait for 30 ns;
   check1(PS_FILE_OP_DOT_D_CY_DOT_EXTENSION,'1',testName,"9E");      
   check1(MS_FILE_OP_DOT_D_CY_DOT_EXTENSION,'0',testName,"9F");         
   
   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS

end;
