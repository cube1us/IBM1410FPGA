-- VHDL for IBM SMS ALD page 16.60.01.1
-- Title: DIV CONTROLS-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/6/2020 1:31:45 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_16_60_01_1_DIV_CONTROLS_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_LAST_INSN_RO_CYCLE_2:	 in STD_LOGIC;
		PS_DIV_OP_CODE:	 in STD_LOGIC;
		PS_UNITS_OR_BODY_OR_EXT:	 in STD_LOGIC;
		PS_B_CYCLE:	 in STD_LOGIC;
		PS_UNITS_OR_BODY_LATCH:	 in STD_LOGIC;
		PS_A_CH_NOT_WM_BIT:	 in STD_LOGIC;
		PS_A_CH_WM_BIT:	 in STD_LOGIC;
		PS_MQ_LATCH:	 in STD_LOGIC;
		PB_ADDER_NO_CARRY:	 in STD_LOGIC;
		PB_ADDER_CARRY:	 in STD_LOGIC;
		PB_COMPLEMENT_LATCH:	 in STD_LOGIC;
		PS_MPLY_DIV_LAST_LATCH:	 in STD_LOGIC;
		PB_1401_MODE:	 in STD_LOGIC;
		PS_NOT_MPLY_DIV_LAST_LATCH:	 in STD_LOGIC;
		MS_DIV_DOT_LAST_INSN_RO_CYCLE:	 out STD_LOGIC;
		MS_DIV_DOT_U_OR_Y_DOT_B:	 out STD_LOGIC;
		MS_DIV_DOT_U_OR_Y_OR_X_DOT_B:	 out STD_LOGIC;
		MS_DIV_DOT_U_OR_Y_DOT_B_DOT_NOT_AW:	 out STD_LOGIC;
		MS_DIV_DOT_U_OR_Y_DOT_B_DOT_AW:	 out STD_LOGIC;
		MS_DIV_DOT_MQ_DOT_B:	 out STD_LOGIC;
		MB_DIV_DOT_MQ_DOT_B_DOT_S_DOT_NOT_RC:	 out STD_LOGIC;
		MB_DIV_DOT_MQ_DOT_B_DOT_S_DOT_RC:	 out STD_LOGIC;
		PS_DIV_DOT_MQ_DOT_B:	 out STD_LOGIC;
		MS_DIV_DOT_MQ_DOT_B_DOT_MDL:	 out STD_LOGIC;
		MS_1401_DIVIDE_OVERFLOW:	 out STD_LOGIC;
		MS_DIV_DOT_MQ_DOT_B_DOT_NOT_MDL:	 out STD_LOGIC);
end ALD_16_60_01_1_DIV_CONTROLS_ACC;

architecture behavioral of ALD_16_60_01_1_DIV_CONTROLS_ACC is 

	signal OUT_4A_G: STD_LOGIC;
	signal OUT_3A_A: STD_LOGIC;
	signal OUT_4B_E: STD_LOGIC;
	signal OUT_2B_B: STD_LOGIC;
	signal OUT_4C_D: STD_LOGIC;
	signal OUT_3C_D: STD_LOGIC;
	signal OUT_2C_K: STD_LOGIC;
	signal OUT_2D_P: STD_LOGIC;
	signal OUT_4E_E: STD_LOGIC;
	signal OUT_3E_M: STD_LOGIC;
	signal OUT_2E_A: STD_LOGIC;
	signal OUT_4F_G: STD_LOGIC;
	signal OUT_2F_K: STD_LOGIC;
	signal OUT_2G_K: STD_LOGIC;
	signal OUT_4H_F: STD_LOGIC;
	signal OUT_2H_C: STD_LOGIC;
	signal OUT_1H_B: STD_LOGIC;
	signal OUT_2I_P: STD_LOGIC;

begin

	OUT_4A_G <= NOT(PS_LAST_INSN_RO_CYCLE_2 AND PS_DIV_OP_CODE );
	OUT_3A_A <= OUT_4A_G;
	OUT_4B_E <= NOT(PS_DIV_OP_CODE AND PS_UNITS_OR_BODY_OR_EXT AND PS_B_CYCLE );
	OUT_2B_B <= OUT_4C_D;
	OUT_4C_D <= NOT(PS_DIV_OP_CODE AND PS_B_CYCLE AND PS_UNITS_OR_BODY_LATCH );
	OUT_3C_D <= NOT OUT_4C_D;
	OUT_2C_K <= NOT(OUT_3C_D AND PS_A_CH_NOT_WM_BIT );
	OUT_2D_P <= NOT(OUT_3C_D AND PS_A_CH_WM_BIT );
	OUT_4E_E <= NOT(PS_DIV_OP_CODE AND PS_B_CYCLE AND PS_MQ_LATCH );
	OUT_3E_M <= NOT OUT_4E_E;
	OUT_2E_A <= NOT(OUT_3E_M AND PB_COMPLEMENT_LATCH AND PB_ADDER_NO_CARRY );
	OUT_4F_G <= NOT(OUT_4E_E );
	OUT_2F_K <= NOT(OUT_3E_M AND PB_COMPLEMENT_LATCH AND PB_ADDER_CARRY );
	OUT_2G_K <= NOT(OUT_4F_G AND PS_MPLY_DIV_LAST_LATCH );
	OUT_4H_F <= NOT PB_1401_MODE;
	OUT_2H_C <= NOT(OUT_2F_K OR OUT_4H_F );
	OUT_1H_B <= NOT OUT_2H_C;
	OUT_2I_P <= NOT(OUT_4F_G AND PS_NOT_MPLY_DIV_LAST_LATCH );

	MS_DIV_DOT_LAST_INSN_RO_CYCLE <= OUT_3A_A;
	MS_DIV_DOT_U_OR_Y_OR_X_DOT_B <= OUT_4B_E;
	MS_DIV_DOT_U_OR_Y_DOT_B <= OUT_2B_B;
	MS_DIV_DOT_U_OR_Y_DOT_B_DOT_NOT_AW <= OUT_2C_K;
	MS_DIV_DOT_U_OR_Y_DOT_B_DOT_AW <= OUT_2D_P;
	MS_DIV_DOT_MQ_DOT_B <= OUT_4E_E;
	MB_DIV_DOT_MQ_DOT_B_DOT_S_DOT_NOT_RC <= OUT_2E_A;
	PS_DIV_DOT_MQ_DOT_B <= OUT_4F_G;
	MB_DIV_DOT_MQ_DOT_B_DOT_S_DOT_RC <= OUT_2F_K;
	MS_DIV_DOT_MQ_DOT_B_DOT_MDL <= OUT_2G_K;
	MS_1401_DIVIDE_OVERFLOW <= OUT_1H_B;
	MS_DIV_DOT_MQ_DOT_B_DOT_NOT_MDL <= OUT_2I_P;


end;
