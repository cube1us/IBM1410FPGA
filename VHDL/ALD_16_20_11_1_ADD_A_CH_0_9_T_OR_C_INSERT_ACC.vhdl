-- VHDL for IBM SMS ALD page 16.20.11.1
-- Title: ADD A CH 0-9 T OR C INSERT-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/3/2020 8:53:14 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_16_20_11_1_ADD_A_CH_0_9_T_OR_C_INSERT_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_RA_OR_RS_OR_A_OR_S_DOT_1_DOT_B_DOT_T_DOT_X:	 in STD_LOGIC;
		MS_A_OR_S_DOT_B_DOT_3:	 in STD_LOGIC;
		PS_EXTENSION_LATCH:	 in STD_LOGIC;
		PS_COMPLEMENT_LATCH:	 in STD_LOGIC;
		PS_TRUE_LATCH:	 in STD_LOGIC;
		PS_MPLY_OR_DIV_OP_CODES:	 in STD_LOGIC;
		PS_MQ_LATCH:	 in STD_LOGIC;
		MS_A_OR_S_DOT_B_DOT_1_DOT_S_DOT_X:	 in STD_LOGIC;
		MS_MPLY_DOT_U_OR_Y_DOT_B:	 in STD_LOGIC;
		MS_DIV_DOT_U_OR_Y_DOT_B:	 in STD_LOGIC;
		MS_RA_OR_RS_OR_A_OR_S_DOT_1_DOT_B_DOT_U_OR_Y:	 in STD_LOGIC;
		MS_A_CH_INSERT_PLUS_ZERO:	 out STD_LOGIC;
		MS_A_CH_INSERT_PLUS_NINE:	 out STD_LOGIC;
		PS_ADDER_A_CH_USE_T_OR_C:	 out STD_LOGIC);
end ALD_16_20_11_1_ADD_A_CH_0_9_T_OR_C_INSERT_ACC;

architecture behavioral of ALD_16_20_11_1_ADD_A_CH_0_9_T_OR_C_INSERT_ACC is 

	signal OUT_4A_E: STD_LOGIC;
	signal OUT_2A_G: STD_LOGIC;
	signal OUT_4B_C: STD_LOGIC;
	signal OUT_2B_G: STD_LOGIC;
	signal OUT_1C_B: STD_LOGIC;
	signal OUT_4D_B: STD_LOGIC;
	signal OUT_3D_NoPin: STD_LOGIC;
	signal OUT_2D_D: STD_LOGIC;
	signal OUT_4E_C: STD_LOGIC;
	signal OUT_3F_C: STD_LOGIC;
	signal OUT_2F_L: STD_LOGIC;
	signal OUT_DOT_2C: STD_LOGIC;

begin

	OUT_4A_E <= NOT(PS_TRUE_LATCH AND PS_EXTENSION_LATCH AND PS_MPLY_OR_DIV_OP_CODES );
	OUT_2A_G <= NOT(OUT_4A_E AND OUT_4B_C );
	OUT_4B_C <= NOT(PS_MPLY_OR_DIV_OP_CODES AND PS_COMPLEMENT_LATCH AND PS_MQ_LATCH );
	OUT_2B_G <= NOT(MS_RA_OR_RS_OR_A_OR_S_DOT_1_DOT_B_DOT_T_DOT_X AND MS_A_OR_S_DOT_B_DOT_3 );
	OUT_1C_B <= NOT OUT_DOT_2C;
	OUT_4D_B <= NOT(PS_MPLY_OR_DIV_OP_CODES AND PS_COMPLEMENT_LATCH AND PS_EXTENSION_LATCH );
	OUT_3D_NoPin <= NOT(OUT_4D_B AND MS_A_OR_S_DOT_B_DOT_1_DOT_S_DOT_X AND OUT_4E_C );
	OUT_2D_D <= NOT OUT_3D_NoPin;
	OUT_4E_C <= NOT(PS_MPLY_OR_DIV_OP_CODES AND PS_TRUE_LATCH AND PS_MQ_LATCH );
	OUT_3F_C <= NOT(MS_MPLY_DOT_U_OR_Y_DOT_B AND MS_DIV_DOT_U_OR_Y_DOT_B AND MS_RA_OR_RS_OR_A_OR_S_DOT_1_DOT_B_DOT_U_OR_Y );
	OUT_2F_L <= OUT_3F_C;
	OUT_DOT_2C <= OUT_2A_G OR OUT_2B_G;

	MS_A_CH_INSERT_PLUS_ZERO <= OUT_1C_B;
	MS_A_CH_INSERT_PLUS_NINE <= OUT_2D_D;
	PS_ADDER_A_CH_USE_T_OR_C <= OUT_2F_L;


end;
