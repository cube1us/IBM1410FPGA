-- VHDL for IBM SMS ALD page 45.50.09.1
-- Title: WORD MARK CONTROL LATCH
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 11/3/2020 7:44:44 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_45_50_09_1_WORD_MARK_CONTROL_LATCH is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_PROGRAM_RESET_4:	 in STD_LOGIC;
		PS_CONS_BACK_SPACE_CONTROL:	 in STD_LOGIC;
		PS_CONS_CYCLE_LATCH_RESET:	 in STD_LOGIC;
		MS_CONS_MOVE_READ_OP:	 in STD_LOGIC;
		MB_CONS_PRTR_WM_INPUT_STAR_WM_T_NO:	 in STD_LOGIC;
		PS_CONS_CYCLE_LATCH_SET:	 in STD_LOGIC;
		PS_CONS_OUTPUT_WM_BIT:	 in STD_LOGIC;
		PS_CONS_CLOCK_3_POS_1:	 in STD_LOGIC;
		PS_TAKE_CONSOLE_PRINTER_CYCLE:	 in STD_LOGIC;
		MS_CONSOLE_SPACE_FUNCTION:	 in STD_LOGIC;
		MS_CONSOLE_CARRIAGE_RETURN:	 in STD_LOGIC;
		MS_CONS_WM_CONTROL:	 out STD_LOGIC;
		PS_CONS_WM_CONTROL:	 out STD_LOGIC;
		MS_CONS_WM_INPUT_SET:	 out STD_LOGIC;
		MS_WM_INPUT:	 out STD_LOGIC;
		MS_CONS_WM_OUTPUT_SET:	 out STD_LOGIC;
		PS_SET_FIRST_CYCLE_LATCH:	 out STD_LOGIC);
end ALD_45_50_09_1_WORD_MARK_CONTROL_LATCH;

architecture behavioral of ALD_45_50_09_1_WORD_MARK_CONTROL_LATCH is 

	signal OUT_2B_C: STD_LOGIC;
	signal OUT_3C_D: STD_LOGIC;
	signal OUT_3C_D_Latch: STD_LOGIC;
	signal OUT_2C_E: STD_LOGIC;
	signal OUT_2C_E_Latch: STD_LOGIC;
	signal OUT_4D_E: STD_LOGIC;
	signal OUT_5E_X: STD_LOGIC;
	signal OUT_4E_C: STD_LOGIC;
	signal OUT_3E_D: STD_LOGIC;
	signal OUT_3F_K: STD_LOGIC;
	signal OUT_5G_P: STD_LOGIC;
	signal OUT_4G_K: STD_LOGIC;
	signal OUT_5H_K: STD_LOGIC;
	signal OUT_DOT_5G: STD_LOGIC;

begin

	OUT_2B_C <= OUT_3C_D;
	OUT_3C_D_Latch <= NOT(OUT_2C_E AND MS_PROGRAM_RESET_4 AND OUT_4D_E );
	OUT_2C_E_Latch <= NOT(OUT_3C_D AND OUT_3E_D AND OUT_3F_K );
	OUT_4D_E <= NOT(PS_CONS_BACK_SPACE_CONTROL AND PS_CONS_CYCLE_LATCH_RESET );
	OUT_5E_X <= MB_CONS_PRTR_WM_INPUT_STAR_WM_T_NO;
	OUT_4E_C <= NOT(OUT_5E_X );
	OUT_3E_D <= NOT(OUT_4E_C AND PS_CONS_CYCLE_LATCH_SET AND MS_CONS_MOVE_READ_OP );
	OUT_3F_K <= NOT(PS_CONS_OUTPUT_WM_BIT AND OUT_4G_K );
	OUT_5G_P <= NOT(PS_CONS_CLOCK_3_POS_1 AND PS_TAKE_CONSOLE_PRINTER_CYCLE );
	OUT_4G_K <= NOT(OUT_DOT_5G );
	OUT_5H_K <= NOT(MS_CONSOLE_SPACE_FUNCTION AND MS_CONSOLE_CARRIAGE_RETURN );
	OUT_DOT_5G <= OUT_5G_P OR OUT_5H_K;

	MS_CONS_WM_CONTROL <= OUT_2B_C;
	PS_CONS_WM_CONTROL <= OUT_2C_E;
	MS_WM_INPUT <= OUT_5E_X;
	MS_CONS_WM_INPUT_SET <= OUT_3E_D;
	MS_CONS_WM_OUTPUT_SET <= OUT_3F_K;
	PS_SET_FIRST_CYCLE_LATCH <= OUT_4G_K;

	Latch_3C: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3C_D_Latch,
		Q => OUT_3C_D,
		QBar => OPEN );

	Latch_2C: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2C_E_Latch,
		Q => OUT_2C_E,
		QBar => OPEN );


end;
