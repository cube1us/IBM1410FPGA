-- Test Bench VHDL for IBM SMS ALD page 12.60.20.1
-- Title: 1401 BRANCHES-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 7/15/2020 12:46:03 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_12_60_20_1_1401_BRANCHES_ACC_tb is
end ALD_12_60_20_1_1401_BRANCHES_ACC_tb;

architecture behavioral of ALD_12_60_20_1_1401_BRANCHES_ACC_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_12_60_20_1_1401_BRANCHES_ACC
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_A_SYMBOL_OP_MODIFIER:	 in STD_LOGIC;
		PS_1401_COND_TEST_OP_CODE:	 in STD_LOGIC;
		PS_EXCLAM_MK_OP_MODIFIER:	 in STD_LOGIC;
		PS_RECORD_MARK_OP_MODIFIER:	 in STD_LOGIC;
		MS_EXCLAM_MK_OP_MODIFIER:	 in STD_LOGIC;
		MS_RECORD_MARK_OP_MODIFIER:	 in STD_LOGIC;
		PS_E_CH_BUSY_BUS:	 in STD_LOGIC;
		MS_LOGIC_GATE_D_1:	 in STD_LOGIC;
		MS_9_SYMBOL_OP_MODIFIER:	 in STD_LOGIC;
		MS_COML_AT_SYM_OP_MODIFIER:	 in STD_LOGIC;
		MS_PRT_CARR_BUSY:	 in STD_LOGIC;
		MS_1403_PRINT_BUFFER_BUSY:	 in STD_LOGIC;
		MS_TEST_READ_E_OR_F:	 out STD_LOGIC;
		MS_TEST_PUNCH_ERROR:	 out STD_LOGIC;
		MS_TEST_PRINT_ERROR:	 out STD_LOGIC;
		PS_EXCLAM_MARK_OR_REC_MARK_OP_MOD:	 out STD_LOGIC;
		PS_1401_STOP_AND_WAIT:	 out STD_LOGIC;
		PS_COML_AT_OR_9_SYMBOL_OP_MOD:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_A_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_1401_COND_TEST_OP_CODE: STD_LOGIC := '0';
	signal PS_EXCLAM_MK_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_RECORD_MARK_OP_MODIFIER: STD_LOGIC := '0';
	signal MS_EXCLAM_MK_OP_MODIFIER: STD_LOGIC := '1';
	signal MS_RECORD_MARK_OP_MODIFIER: STD_LOGIC := '1';
	signal PS_E_CH_BUSY_BUS: STD_LOGIC := '0';
	signal MS_LOGIC_GATE_D_1: STD_LOGIC := '1';
	signal MS_9_SYMBOL_OP_MODIFIER: STD_LOGIC := '1';
	signal MS_COML_AT_SYM_OP_MODIFIER: STD_LOGIC := '1';
	signal MS_PRT_CARR_BUSY: STD_LOGIC := '1';
	signal MS_1403_PRINT_BUFFER_BUSY: STD_LOGIC := '1';

	-- Outputs

	signal MS_TEST_READ_E_OR_F: STD_LOGIC;
	signal MS_TEST_PUNCH_ERROR: STD_LOGIC;
	signal MS_TEST_PRINT_ERROR: STD_LOGIC;
	signal PS_EXCLAM_MARK_OR_REC_MARK_OP_MOD: STD_LOGIC;
	signal PS_1401_STOP_AND_WAIT: STD_LOGIC;
	signal PS_COML_AT_OR_9_SYMBOL_OP_MOD: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_12_60_20_1_1401_BRANCHES_ACC port map(
		FPGA_CLK => FPGA_CLK,
		PS_A_SYMBOL_OP_MODIFIER => PS_A_SYMBOL_OP_MODIFIER,
		PS_1401_COND_TEST_OP_CODE => PS_1401_COND_TEST_OP_CODE,
		PS_EXCLAM_MK_OP_MODIFIER => PS_EXCLAM_MK_OP_MODIFIER,
		PS_RECORD_MARK_OP_MODIFIER => PS_RECORD_MARK_OP_MODIFIER,
		MS_EXCLAM_MK_OP_MODIFIER => MS_EXCLAM_MK_OP_MODIFIER,
		MS_RECORD_MARK_OP_MODIFIER => MS_RECORD_MARK_OP_MODIFIER,
		PS_E_CH_BUSY_BUS => PS_E_CH_BUSY_BUS,
		MS_LOGIC_GATE_D_1 => MS_LOGIC_GATE_D_1,
		MS_9_SYMBOL_OP_MODIFIER => MS_9_SYMBOL_OP_MODIFIER,
		MS_COML_AT_SYM_OP_MODIFIER => MS_COML_AT_SYM_OP_MODIFIER,
		MS_PRT_CARR_BUSY => MS_PRT_CARR_BUSY,
		MS_1403_PRINT_BUFFER_BUSY => MS_1403_PRINT_BUFFER_BUSY,
		MS_TEST_READ_E_OR_F => MS_TEST_READ_E_OR_F,
		MS_TEST_PUNCH_ERROR => MS_TEST_PUNCH_ERROR,
		MS_TEST_PRINT_ERROR => MS_TEST_PRINT_ERROR,
		PS_EXCLAM_MARK_OR_REC_MARK_OP_MOD => PS_EXCLAM_MARK_OR_REC_MARK_OP_MOD,
		PS_1401_STOP_AND_WAIT => PS_1401_STOP_AND_WAIT,
		PS_COML_AT_OR_9_SYMBOL_OP_MOD => PS_COML_AT_OR_9_SYMBOL_OP_MOD);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code
   
   testName := "12.60.20.1        ";
   
   wait for 30 ns;
   
   check1(MS_TEST_READ_E_OR_F,'1',testName,"SA");
   check1(MS_TEST_PUNCH_ERROR,'1',testName,"SB");
   check1(MS_TEST_PRINT_ERROR,'1',testName,"SC");
   check1(PS_EXCLAM_MARK_OR_REC_MARK_OP_MOD,'0',testName,"SD");
   check1(PS_1401_STOP_AND_WAIT,'0',testname,"SE");
   check1(PS_COML_AT_OR_9_SYMBOL_OP_MOD,'0',testname,"SF");
   
   PS_A_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns;
   check1(MS_TEST_READ_E_OR_F,'1',testName,"1A");
   PS_1401_COND_TEST_OP_CODE <= '1';
   wait for 30 ns;
   check1(MS_TEST_READ_E_OR_F,'0',testName,"1B");
   PS_A_SYMBOL_OP_MODIFIER <= '0';
   wait for 30 ns;
   check1(MS_TEST_READ_E_OR_F,'1',testName,"1C");
   
   check1(MS_TEST_PUNCH_ERROR,'1',testName,"2A");
   PS_EXCLAM_MK_OP_MODIFIER <= '1';
   wait for 30 ns;
   check1(MS_TEST_PUNCH_ERROR,'0',testName,"2B");
   PS_1401_COND_TEST_OP_CODE <= '0';
   wait for 30 ns;
   check1(MS_TEST_PUNCH_ERROR,'1',testName,"2C");
   PS_EXCLAM_MK_OP_MODIFIER <= '0';
   
   wait for 30 ns;
   check1(MS_TEST_PRINT_ERROR,'1',testName,"3A");
   PS_1401_COND_TEST_OP_CODE <= '1';
   wait for 30 ns;
   check1(MS_TEST_PRINT_ERROR,'1',testName,"3B");
   PS_RECORD_MARK_OP_MODIFIER <= '1';
   wait for 30 ns;
   check1(MS_TEST_PRINT_ERROR,'0',testName,"3C");
   PS_1401_COND_TEST_OP_CODE <= '0';
   PS_RECORD_MARK_OP_MODIFIER <= '0';
   
   MS_EXCLAM_MK_OP_MODIFIER <= '0';
   wait for 30 ns;
   check1(PS_EXCLAM_MARK_OR_REC_MARK_OP_MOD,'1',testName,"4A");
   MS_EXCLAM_MK_OP_MODIFIER <= '1';
   wait for 30 ns;
   MS_RECORD_MARK_OP_MODIFIER <= '0';
   wait for 30 ns;
   check1(PS_EXCLAM_MARK_OR_REC_MARK_OP_MOD,'1',testName,"4B");
   check1(PS_1401_STOP_AND_WAIT,'0',testName,"4C");   
   PS_E_CH_BUSY_BUS <= '1';
   wait for 30 ns;
   check1(PS_1401_STOP_AND_WAIT,'1',testName,"4D");
   MS_RECORD_MARK_OP_MODIFIER <= '1';
   wait for 30 ns;
   check1(PS_1401_STOP_AND_WAIT,'0',testName,"4E");
   PS_E_CH_BUSY_BUS <= '0';
      
   MS_9_SYMBOL_OP_MODIFIER <= '0';
   wait for 30 ns;
   check1(PS_1401_STOP_AND_WAIT,'0',testName,"5A");
   check1(PS_COML_AT_OR_9_SYMBOL_OP_MOD,'1',testName,"5B");
   MS_PRT_CARR_BUSY <= '0';
   wait for 30 ns;
   check1(PS_1401_STOP_AND_WAIT,'1',testName,"5C");
   MS_9_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns;
   check1(PS_1401_STOP_AND_WAIT,'0',testName,"5D");
   MS_PRT_CARR_BUSY <= '1';
   
   MS_COML_AT_SYM_OP_MODIFIER <= '0';
   wait for 30 ns;
   check1(PS_1401_STOP_AND_WAIT,'0',testName,"5E");
   check1(PS_COML_AT_OR_9_SYMBOL_OP_MOD,'1',testName,"5F");
   MS_1403_PRINT_BUFFER_BUSY <= '0';
   wait for 30 ns;
   check1(PS_1401_STOP_AND_WAIT,'1',testName,"5G");
   MS_1403_PRINT_BUFFER_BUSY <= '1';
   MS_COML_AT_SYM_OP_MODIFIER <= '1';
   
   -- Now we get to test our first single shot!

   wait for 30 ns;
   check1(PS_1401_STOP_AND_WAIT,'0',testName,"6A");
   MS_LOGIC_GATE_D_1 <= '0';
   wait for 30 ns;
   check1(PS_1401_STOP_AND_WAIT,'1',testName,"6B");
   wait for 1 us;
   check1(PS_1401_STOP_AND_WAIT,'1',testName,"6C");
   wait for 1 us;
   -- Drop the input signal before SS times out   
   MS_LOGIC_GATE_D_1 <= '1';     
   check1(PS_1401_STOP_AND_WAIT,'1',testName,"6D");
   wait for 1 us;
   -- At +3us +30ns should be back to default state
   check1(PS_1401_STOP_AND_WAIT,'0',testName,"6E");

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS

end;
