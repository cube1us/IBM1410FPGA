-- Test Bench VHDL for IBM SMS ALD page 14.71.11.1
-- Title: B ADDRESS REG SET CONTROLS-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 9/5/2020 9:14:06 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_14_71_11_1_B_ADDRESS_REG_SET_CONTROLS_ACC_tb is
end ALD_14_71_11_1_B_ADDRESS_REG_SET_CONTROLS_ACC_tb;

architecture behavioral of ALD_14_71_11_1_B_ADDRESS_REG_SET_CONTROLS_ACC_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_14_71_11_1_B_ADDRESS_REG_SET_CONTROLS_ACC
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MV_CONS_ADDRESS_ENTRY_B_AR:	 in STD_LOGIC;
		MS_STOPPED_AT_CYCLE_END:	 in STD_LOGIC;
		PS_B_OR_E_OR_F_CYCLE_CTRL:	 in STD_LOGIC;
		PS_LOGIC_GATE_B_OR_C:	 in STD_LOGIC;
		PS_B_OR_E_OR_F_CYCLE:	 in STD_LOGIC;
		PS_LOGIC_GATE_D_OR_E_OR_F:	 in STD_LOGIC;
		PS_INDEX_B_AR:	 in STD_LOGIC;
		PS_INDEX_GATE:	 in STD_LOGIC;
		PS_ADDR_DOUBLE_OP_CODES:	 in STD_LOGIC;
		PS_1ST_ADDRESS:	 in STD_LOGIC;
		PS_INSN_RO_GATE:	 in STD_LOGIC;
		PS_2ND_ADDRESS:	 in STD_LOGIC;
		PS_RD_2ND_ADDR_TO_B_AND_D_AR:	 in STD_LOGIC;
		PS_SET_B_AR:	 out STD_LOGIC;
		MS_1ST_ADDR_SET_B_AND_D_AR:	 out STD_LOGIC;
		MS_2ND_ADDR_SET_B_AND_D_AR:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal MV_CONS_ADDRESS_ENTRY_B_AR: STD_LOGIC := '1';
	signal MS_STOPPED_AT_CYCLE_END: STD_LOGIC := '1';
	signal PS_B_OR_E_OR_F_CYCLE_CTRL: STD_LOGIC := '0';
	signal PS_LOGIC_GATE_B_OR_C: STD_LOGIC := '0';
	signal PS_B_OR_E_OR_F_CYCLE: STD_LOGIC := '0';
	signal PS_LOGIC_GATE_D_OR_E_OR_F: STD_LOGIC := '0';
	signal PS_INDEX_B_AR: STD_LOGIC := '0';
	signal PS_INDEX_GATE: STD_LOGIC := '0';
	signal PS_ADDR_DOUBLE_OP_CODES: STD_LOGIC := '0';
	signal PS_1ST_ADDRESS: STD_LOGIC := '0';
	signal PS_INSN_RO_GATE: STD_LOGIC := '0';
	signal PS_2ND_ADDRESS: STD_LOGIC := '0';
	signal PS_RD_2ND_ADDR_TO_B_AND_D_AR: STD_LOGIC := '0';

	-- Outputs

	signal PS_SET_B_AR: STD_LOGIC;
	signal MS_1ST_ADDR_SET_B_AND_D_AR: STD_LOGIC;
	signal MS_2ND_ADDR_SET_B_AND_D_AR: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_14_71_11_1_B_ADDRESS_REG_SET_CONTROLS_ACC port map(
		FPGA_CLK => FPGA_CLK,
		MV_CONS_ADDRESS_ENTRY_B_AR => MV_CONS_ADDRESS_ENTRY_B_AR,
		MS_STOPPED_AT_CYCLE_END => MS_STOPPED_AT_CYCLE_END,
		PS_B_OR_E_OR_F_CYCLE_CTRL => PS_B_OR_E_OR_F_CYCLE_CTRL,
		PS_LOGIC_GATE_B_OR_C => PS_LOGIC_GATE_B_OR_C,
		PS_B_OR_E_OR_F_CYCLE => PS_B_OR_E_OR_F_CYCLE,
		PS_LOGIC_GATE_D_OR_E_OR_F => PS_LOGIC_GATE_D_OR_E_OR_F,
		PS_INDEX_B_AR => PS_INDEX_B_AR,
		PS_INDEX_GATE => PS_INDEX_GATE,
		PS_ADDR_DOUBLE_OP_CODES => PS_ADDR_DOUBLE_OP_CODES,
		PS_1ST_ADDRESS => PS_1ST_ADDRESS,
		PS_INSN_RO_GATE => PS_INSN_RO_GATE,
		PS_2ND_ADDRESS => PS_2ND_ADDRESS,
		PS_RD_2ND_ADDR_TO_B_AND_D_AR => PS_RD_2ND_ADDR_TO_B_AND_D_AR,
		PS_SET_B_AR => PS_SET_B_AR,
		MS_1ST_ADDR_SET_B_AND_D_AR => MS_1ST_ADDR_SET_B_AND_D_AR,
		MS_2ND_ADDR_SET_B_AND_D_AR => MS_2ND_ADDR_SET_B_AND_D_AR);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;
   variable tv: std_logic_vector(12 downto 0);
   variable a,b,c,d,e,f,g,h,i,j,k,l,m: std_logic;
   variable g1, g2: std_logic;

   begin

   -- Your test bench code
   
   testName := "14.71.11.1        ";
   
   for t in 0 to 8191 loop
      tv := std_logic_vector(to_unsigned(t,tv'Length));
      a := tv(0); 
      b := tv(1);
      c := tv(2);
      d := tv(3);
      e := tv(4);
      f := tv(5);
      g := tv(6);
      h := tv(7);
      i := tv(8);
      j := tv(9);
      k := tv(10);
      l := tv(11);
      m := tv(12);
      
      MV_CONS_ADDRESS_ENTRY_B_AR <= not a;
      MS_STOPPED_AT_CYCLE_END <= not b;
		PS_B_OR_E_OR_F_CYCLE_CTRL <= c;
      PS_LOGIC_GATE_B_OR_C <= d;
      PS_B_OR_E_OR_F_CYCLE <= e;
      PS_LOGIC_GATE_D_OR_E_OR_F <= f;
      PS_INDEX_B_AR <= g;
      PS_INDEX_GATE <= h;
      PS_ADDR_DOUBLE_OP_CODES <= i;
      PS_1ST_ADDRESS <= j;
      PS_INSN_RO_GATE <= k;
      PS_2ND_ADDRESS <= l;
      PS_RD_2ND_ADDR_TO_B_AND_D_AR <= m;
      
      g1 := k and l and m;
      g2 := i and j and k;
      
      wait for 30 ns;
      check1(MS_2ND_ADDR_SET_B_AND_D_AR,not g1,testName, "2ND SET B and D AR");
      check1(MS_1ST_ADDR_SET_B_AND_D_AR,not g2,testname, "1ST SET B AND D AR");
      check1(PS_SET_B_AR,
         (a and b) or (c and d) or (e and f) or (g and h) or g2 or g1, testName, "SET B AR");      
      
      
   end loop;

   wait;
   end process;
   

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 1 ms;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

end;
