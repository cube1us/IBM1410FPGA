-- VHDL for IBM SMS ALD page 17.12.02.1
-- Title: EDIT LATCHES
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/7/2020 3:54:24 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_17_12_02_1_EDIT_LATCHES is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_LOGIC_GATE_D_1:	 in STD_LOGIC;
		MS_LAST_INSN_RO_AND_LOGIC_GATE:	 in STD_LOGIC;
		PS_LOGIC_GATE_C_1:	 in STD_LOGIC;
		MS_LOGIC_GATE_B_1:	 in STD_LOGIC;
		PS_E_OP_DOT_B_CYCLE_1:	 in STD_LOGIC;
		PS_BODY_LATCH:	 in STD_LOGIC;
		PS_NOT_ASTERISK:	 in STD_LOGIC;
		PS_NOT_DOLLAR_SIGN:	 in STD_LOGIC;
		MS_A_CYCLE:	 in STD_LOGIC;
		MS_UNITS_LATCH:	 in STD_LOGIC;
		MS_EXTENSION_LATCH:	 in STD_LOGIC;
		MS_2ND_SCAN:	 in STD_LOGIC;
		MS_3RD_SCAN:	 in STD_LOGIC;
		MS_Z_OP_DOT_B_CYCLE:	 in STD_LOGIC;
		MS_NOT_0_SUPPRESS:	 in STD_LOGIC;
		PS_LAST_LOGIC_GATE_1:	 in STD_LOGIC;
		MS_NOT_ASTERISK_FILL_OR_FL_DOL:	 out STD_LOGIC;
		PS_NOT_ASTERISK_FILL_OR_FL_DOL:	 out STD_LOGIC);
end ALD_17_12_02_1_EDIT_LATCHES;

architecture behavioral of ALD_17_12_02_1_EDIT_LATCHES is 

	signal OUT_3A_C: STD_LOGIC;
	signal OUT_3A_C_Latch: STD_LOGIC;
	signal OUT_2A_E: STD_LOGIC;
	signal OUT_2A_E_Latch: STD_LOGIC;
	signal OUT_1B_NoPin: STD_LOGIC;
	signal OUT_1B_NoPin_Latch: STD_LOGIC;
	signal OUT_5D_C: STD_LOGIC;
	signal OUT_2D_R: STD_LOGIC;
	signal OUT_2D_R_Latch: STD_LOGIC;
	signal OUT_1D_F: STD_LOGIC;
	signal OUT_1D_F_Latch: STD_LOGIC;
	signal OUT_5E_C: STD_LOGIC;
	signal OUT_4E_G: STD_LOGIC;
	signal OUT_4F_K: STD_LOGIC;
	signal OUT_2F_L: STD_LOGIC;
	signal OUT_2F_L_Latch: STD_LOGIC;
	signal OUT_4G_G: STD_LOGIC;
	signal OUT_3H_D: STD_LOGIC;
	signal OUT_3H_D_Latch: STD_LOGIC;
	signal OUT_DOT_5E: STD_LOGIC;
	signal OUT_DOT_4G: STD_LOGIC;

begin

	OUT_3A_C_Latch <= NOT(OUT_2A_E AND MS_LOGIC_GATE_D_1 );
	OUT_2A_E_Latch <= NOT(OUT_3A_C AND MS_LAST_INSN_RO_AND_LOGIC_GATE AND OUT_3H_D );
	OUT_1B_NoPin_Latch <= NOT(OUT_2A_E AND PS_LOGIC_GATE_C_1 );
	OUT_5D_C <= NOT(PS_E_OP_DOT_B_CYCLE_1 AND PS_BODY_LATCH );
	OUT_2D_R_Latch <= NOT(MS_LOGIC_GATE_B_1 AND OUT_1D_F );
	OUT_1D_F_Latch <= NOT(OUT_1B_NoPin AND OUT_2D_R );
	OUT_5E_C <= NOT(PS_NOT_ASTERISK AND PS_NOT_DOLLAR_SIGN );
	OUT_4E_G <= NOT(OUT_DOT_5E AND MS_A_CYCLE AND MS_UNITS_LATCH );
	OUT_4F_K <= NOT(MS_EXTENSION_LATCH AND MS_2ND_SCAN );
	OUT_2F_L_Latch <= OUT_1D_F;
	OUT_4G_G <= NOT(MS_3RD_SCAN AND MS_Z_OP_DOT_B_CYCLE AND MS_NOT_0_SUPPRESS );
	OUT_3H_D_Latch <= NOT(OUT_2F_L AND PS_LAST_LOGIC_GATE_1 AND OUT_DOT_4G );
	OUT_DOT_5E <= OUT_5D_C OR OUT_5E_C;
	OUT_DOT_4G <= OUT_4E_G OR OUT_4F_K OR OUT_4G_G;

	MS_NOT_ASTERISK_FILL_OR_FL_DOL <= OUT_2D_R;
	PS_NOT_ASTERISK_FILL_OR_FL_DOL <= OUT_2F_L;

	Latch_3A: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3A_C_Latch,
		Q => OUT_3A_C,
		QBar => OPEN );

	Latch_2A: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2A_E_Latch,
		Q => OUT_2A_E,
		QBar => OPEN );

	Latch_1B: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_1B_NoPin_Latch,
		Q => OUT_1B_NoPin,
		QBar => OPEN );

	Latch_2D: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2D_R_Latch,
		Q => OUT_2D_R,
		QBar => OPEN );

	Latch_1D: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_1D_F_Latch,
		Q => OUT_1D_F,
		QBar => OPEN );

	Latch_2F: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2F_L_Latch,
		Q => OUT_2F_L,
		QBar => OPEN );

	Latch_3H: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3H_D_Latch,
		Q => OUT_3H_D,
		QBar => OPEN );


end;
