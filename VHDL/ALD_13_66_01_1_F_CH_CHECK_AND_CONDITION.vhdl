-- VHDL for IBM SMS ALD page 13.66.01.1
-- Title: F CH CHECK AND CONDITION
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 8/7/2020 4:55:20 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_13_66_01_1_F_CH_CHECK_AND_CONDITION is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_F_CH_STATUS_SAMPLE_A:	 in STD_LOGIC;
		PS_FILE_OP:	 in STD_LOGIC;
		MS_F_CH_CON_LAT_SET_STAR_1414_STAR:	 in STD_LOGIC;
		MS_FILE_OP:	 in STD_LOGIC;
		PS_F_CH_READY_BUS:	 in STD_LOGIC;
		MC_1301_ERROR_F_CH:	 in STD_LOGIC;
		MC_1405_ERROR_F_CH:	 in STD_LOGIC;
		PS_I_O_CHECK:	 in STD_LOGIC;
		PS_F_CH_CHECK_STAR_SIF:	 in STD_LOGIC;
		MC_TAPE_ERROR:	 in STD_LOGIC;
		MS_F_CH_SELECT_TAPE:	 in STD_LOGIC;
		PS_ERROR_SAMPLE:	 in STD_LOGIC;
		PS_F_CYCLE:	 in STD_LOGIC;
		MS_F_CH_RESET:	 in STD_LOGIC;
		PS_F_CH_CHECK_BUS_STAR_1414_STAR:	 in STD_LOGIC;
		MS_F_CH_BUSY_BUS:	 in STD_LOGIC;
		MC_RBC_ERROR_1405_F_CH:	 in STD_LOGIC;
		PS_F_CH_CHECK_STAR_1412_19:	 in STD_LOGIC;
		MS_F_CH_SELECT_UNIT_F:	 in STD_LOGIC;
		PS_F_CH_STATUS_SAMPLE_B:	 in STD_LOGIC;
		MS_F_CH_COND_LATCH_STAR_SIF:	 in STD_LOGIC;
		TW_RBC_ERROR_1405_F_CH:	 in STD_LOGIC;
		MC_1301_F_CH_CONDITION:	 in STD_LOGIC;
		MC_1405_CONDITION_F_CH:	 in STD_LOGIC;
		MC_SEL_OR_TI_ON_CH_2:	 in STD_LOGIC;
		PS_F_CH_SELECT_TAPE:	 in STD_LOGIC;
		PS_F_CH_COND_BUS_STAR_1414_STAR:	 in STD_LOGIC;
		MS_SET_F_CH_CON_LATCH_STAR_1414_STAR:	 in STD_LOGIC;
		MS_F_CH_CHECK:	 out STD_LOGIC;
		MS_F_CH_FILE_SET_CHECK_AT_A:	 out STD_LOGIC;
		PS_F_CH_CHECK:	 out STD_LOGIC;
		MS_F_CH_CHECK_BUS:	 out STD_LOGIC;
		MS_F_CH_CONDITION:	 out STD_LOGIC;
		PS_F_CH_CONDITION:	 out STD_LOGIC;
		PS_F_CH_TAPE_INDICATOR:	 out STD_LOGIC;
		MS_F_CH_TAPE_INDICATOR:	 out STD_LOGIC;
		LAMP_15A1E17:	 out STD_LOGIC;
		LAMP_15A1F17:	 out STD_LOGIC);
end ALD_13_66_01_1_F_CH_CHECK_AND_CONDITION;

architecture behavioral of ALD_13_66_01_1_F_CH_CHECK_AND_CONDITION is 

	signal OUT_5A_G: STD_LOGIC;
	signal OUT_4A_C: STD_LOGIC;
	signal OUT_3A_NoPin: STD_LOGIC;
	signal OUT_3A_NoPin_Latch: STD_LOGIC;
	signal OUT_2A_P: STD_LOGIC;
	signal OUT_2A_P_Latch: STD_LOGIC;
	signal OUT_1A_C: STD_LOGIC;
	signal OUT_5B_G: STD_LOGIC;
	signal OUT_2B_P: STD_LOGIC;
	signal OUT_1B_K: STD_LOGIC;
	signal OUT_4C_C: STD_LOGIC;
	signal OUT_2C_B: STD_LOGIC;
	signal OUT_4D_B: STD_LOGIC;
	signal OUT_3D_E: STD_LOGIC;
	signal OUT_5E_D: STD_LOGIC;
	signal OUT_4E_R: STD_LOGIC;
	signal OUT_3E_C: STD_LOGIC;
	signal OUT_2E_C: STD_LOGIC;
	signal OUT_1E_C: STD_LOGIC;
	signal OUT_4F_L: STD_LOGIC;
	signal OUT_5G_L: STD_LOGIC;
	signal OUT_4G_G: STD_LOGIC;
	signal OUT_3G_P: STD_LOGIC;
	signal OUT_3G_P_Latch: STD_LOGIC;
	signal OUT_2G_NoPin: STD_LOGIC;
	signal OUT_2G_NoPin_Latch: STD_LOGIC;
	signal OUT_1G_B: STD_LOGIC;
	signal OUT_5H_A: STD_LOGIC;
	signal OUT_2H_C: STD_LOGIC;
	signal OUT_1H_E: STD_LOGIC;
	signal OUT_5I_C: STD_LOGIC;
	signal OUT_4I_G: STD_LOGIC;
	signal OUT_3I_C: STD_LOGIC;
	signal OUT_2I_P: STD_LOGIC;
	signal OUT_DOT_2A: STD_LOGIC;
	signal OUT_DOT_5B: STD_LOGIC;
	signal OUT_DOT_5C: STD_LOGIC;
	signal OUT_DOT_5D: STD_LOGIC;
	signal OUT_DOT_5I: STD_LOGIC;
	signal OUT_DOT_3I: STD_LOGIC;
	signal OUT_DOT_4B: STD_LOGIC;
	signal OUT_DOT_5G: STD_LOGIC;

begin

	OUT_5A_G <= NOT(PS_F_CH_STATUS_SAMPLE_A AND PS_FILE_OP AND PS_F_CH_READY_BUS );
	OUT_4A_C <= NOT(MS_FILE_OP AND PS_F_CH_STATUS_SAMPLE_A AND PS_F_CH_READY_BUS );
	OUT_3A_NoPin_Latch <= NOT(OUT_DOT_2A AND MS_F_CH_RESET );
	OUT_2A_P_Latch <= NOT(OUT_3A_NoPin AND OUT_3E_C AND OUT_3D_E );
	OUT_1A_C <= NOT OUT_DOT_2A;
	OUT_5B_G <= NOT(MS_F_CH_BUSY_BUS AND OUT_4E_R );
	OUT_2B_P <= NOT(OUT_DOT_5B );
	OUT_1B_K <= NOT OUT_1A_C;
	OUT_4C_C <= NOT(OUT_DOT_5C OR MS_F_CH_SELECT_UNIT_F );
	OUT_2C_B <= NOT OUT_3A_NoPin;
	LAMP_15A1E17 <= OUT_1B_K;
	OUT_4D_B <= NOT(MC_TAPE_ERROR OR MS_F_CH_SELECT_TAPE );
	OUT_3D_E <= NOT(PS_I_O_CHECK AND PS_F_CYCLE AND PS_ERROR_SAMPLE );
	OUT_5E_D <= NOT OUT_DOT_5D;
	OUT_4E_R <= NOT OUT_5E_D;
	OUT_3E_C <= NOT(OUT_4E_R AND PS_F_CH_STATUS_SAMPLE_B );
	OUT_2E_C <= NOT(MS_F_CH_COND_LATCH_STAR_SIF AND OUT_DOT_3I );
	OUT_1E_C <= NOT OUT_2E_C;
	OUT_4F_L <= NOT(MC_RBC_ERROR_1405_F_CH OR MS_F_CH_SELECT_UNIT_F );
	OUT_5G_L <= NOT(OUT_DOT_5G OR MS_F_CH_SELECT_UNIT_F );
	OUT_4G_G <= NOT(MS_F_CH_BUSY_BUS AND MS_F_CH_SELECT_TAPE AND OUT_DOT_5I );
	OUT_3G_P_Latch <= NOT(MS_F_CH_RESET AND OUT_2G_NoPin );
	OUT_2G_NoPin_Latch <= NOT(OUT_1E_C AND OUT_3G_P AND OUT_DOT_4B );
	OUT_1G_B <= NOT OUT_2G_NoPin;
	OUT_5H_A <= NOT(MC_SEL_OR_TI_ON_CH_2 );
	OUT_2H_C <= NOT OUT_3G_P;
	OUT_1H_E <= NOT OUT_1G_B;
	OUT_5I_C <= NOT(OUT_5H_A AND PS_F_CH_SELECT_TAPE );
	OUT_4I_G <= NOT(OUT_5H_A );
	OUT_3I_C <= NOT(OUT_DOT_5I AND PS_F_CH_STATUS_SAMPLE_B );
	OUT_2I_P <= NOT(OUT_5I_C );
	LAMP_15A1F17 <= OUT_1H_E;
	OUT_DOT_2A <= OUT_2A_P OR OUT_2B_P;
	OUT_DOT_5B <= OUT_5A_G OR OUT_5B_G;
	OUT_DOT_5C <= MC_1301_ERROR_F_CH AND MC_1405_ERROR_F_CH;
	OUT_DOT_5D <= OUT_4C_C OR PS_F_CH_CHECK_STAR_1412_19 OR PS_F_CH_CHECK_BUS_STAR_1414_STAR OR PS_F_CH_CHECK_STAR_SIF OR OUT_4D_B;
	OUT_DOT_5I <= OUT_4F_L OR OUT_5G_L OR PS_F_CH_COND_BUS_STAR_1414_STAR OR OUT_2I_P;
	OUT_DOT_3I <= OUT_3I_C OR MS_SET_F_CH_CON_LATCH_STAR_1414_STAR;
	OUT_DOT_4B <= OUT_4A_C OR OUT_4G_G OR MS_F_CH_CON_LAT_SET_STAR_1414_STAR;
	OUT_DOT_5G <= MC_1301_F_CH_CONDITION AND MC_1405_CONDITION_F_CH;

	MS_F_CH_CHECK <= OUT_1A_C;
	PS_F_CH_CHECK <= OUT_2C_B;
	MS_F_CH_CHECK_BUS <= OUT_5E_D;
	MS_F_CH_CONDITION <= OUT_1G_B;
	PS_F_CH_TAPE_INDICATOR <= OUT_5H_A;
	PS_F_CH_CONDITION <= OUT_2H_C;
	MS_F_CH_TAPE_INDICATOR <= OUT_4I_G;
	MS_F_CH_FILE_SET_CHECK_AT_A <= OUT_DOT_5B;

	Latch_3A: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3A_NoPin_Latch,
		Q => OUT_3A_NoPin,
		QBar => OPEN );

	Latch_2A: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2A_P_Latch,
		Q => OUT_2A_P,
		QBar => OPEN );

	Latch_3G: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3G_P_Latch,
		Q => OUT_3G_P,
		QBar => OPEN );

	Latch_2G: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2G_NoPin_Latch,
		Q => OUT_2G_NoPin,
		QBar => OPEN );


end;
