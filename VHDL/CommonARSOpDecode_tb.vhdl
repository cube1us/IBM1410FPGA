-- Test BenchVHDL for IBM SMS ALD group CommonARSOpDecode
-- Title: CommonARSOpDecode
-- IBM Machine Name 1411
-- Generated by GenerateHDL on 7/24/2020 10:58:28 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity CommonARSOpDecode_tb is
end CommonARSOpDecode_tb;

architecture behavioral of CommonARSOpDecode_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component CommonARSOpDecode
	    Port (
		FPGA_CLK: in STD_LOGIC;
		PS_OP_REG_COM_C_BIT: in STD_LOGIC;
		PS_OP_REG_COM_NOT_C_BIT: in STD_LOGIC;
		PS_OP_REG_ARS_C_BIT: in STD_LOGIC;
		PS_OP_REG_ARS_NOT_C_BIT: in STD_LOGIC;
		MS_1401_DATA_MOVE_OP: in STD_LOGIC;
		MS_1401_CHAR_TEST_OP_CODE: in STD_LOGIC;
		MS_1401_COND_TEST_OP_CODE: in STD_LOGIC;
		MS_1401_I_O_MOVE_OP: in STD_LOGIC;
		MS_1401_I_O_LOAD_OP: in STD_LOGIC;
		MS_1401_M_OP_CODE: in STD_LOGIC;
		MS_1401_L_OP_CODE: in STD_LOGIC;
		PS_OP_REG_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		PS_OP_REG_NOT_BUS: in STD_LOGIC_VECTOR (5 downTo 0);
		PS_OP_DCDR_NOT_B_DOT_NOT_A_DOT_8_B: out STD_LOGIC;
		PS_OP_DCDR_NOT_B_DOT_A_DOT_8_B: out STD_LOGIC;
		PS_OP_DCDR_NOT_B_DOT_NOT_A_DOT_NOT_8_B: out STD_LOGIC;
		PS_OP_DCDR_B_DOT_A_DOT_NOT_8_B: out STD_LOGIC;
		PS_OP_DCDR_B_DOT_A_DOT_8_B: out STD_LOGIC;
		PS_OP_DCDR_B_DOT_NOT_A_DOT_NOT_8_B: out STD_LOGIC;
		PS_OP_DCDR_B_DOT_NOT_A_DOT_8_B: out STD_LOGIC;
		PS_OP_DCDR_NOT_4_DOT_NOT_2_DOT_NOT_1_B: out STD_LOGIC;
		PS_OP_DCDR_NOT_4_DOT_NOT_2_DOT_1_B: out STD_LOGIC;
		PS_OP_DCDR_NOT_4_DOT_2_DOT_1_B: out STD_LOGIC;
		PS_OP_DCDR_NOT_4_DOT_2_DOT_NOT_1_B: out STD_LOGIC;
		PS_OP_DCDR_4_DOT_2_DOT_NOT_1_B: out STD_LOGIC;
		PS_OP_DCDR_4_DOT_NOT_2_DOT_1_B: out STD_LOGIC;
		PS_OP_DCDR_4_DOT_NOT_2_DOT_NOT_1_B: out STD_LOGIC;
		PS_OP_DCDR_4_DOT_2_DOT_1_B: out STD_LOGIC;
		PS_RESET_ADD_OP_CODE: out STD_LOGIC;
		MS_RESET_ADD_OP_CODE: out STD_LOGIC;
		PS_RESET_SUBT_OP_CODE: out STD_LOGIC;
		MS_RESET_SUBT_OP_CODE: out STD_LOGIC;
		PS_ADD_OP_CODE: out STD_LOGIC;
		MS_ADD_OP_CODE: out STD_LOGIC;
		PS_SUBT_OP_CODE: out STD_LOGIC;
		MS_SUBT_OP_CODE: out STD_LOGIC;
		MS_MPLY_OP_CODE: out STD_LOGIC;
		PS_EDIT_OP_CODE: out STD_LOGIC;
		PS_MPLY_OP_CODE: out STD_LOGIC;
		PS_DIV_OP_CODE: out STD_LOGIC;
		MS_DIV_OP_CODE: out STD_LOGIC;
		MS_EDIT_OP_CODE: out STD_LOGIC;
		PS_COMPARE_OP_CODE: out STD_LOGIC;
		PS_MOVE_ZERO_SUP_OP_CODE: out STD_LOGIC;
		PS_ZN_OR_WM_TST_BRANCH_OP_CODE: out STD_LOGIC;
		PS_BIT_TEST_BRANCH_OP_CODE: out STD_LOGIC;
		MS_COMPARE_OP_CODE: out STD_LOGIC;
		MS_MOVE_ZERO_SUP_OP_CODE: out STD_LOGIC;
		MS_BIT_TEST_BRANCH_OP_CODE: out STD_LOGIC;
		MS_ZN_OR_WM_TST_BRANCH_OP_CODE: out STD_LOGIC;
		MS_UNIT_CTRL_OP_CODE: out STD_LOGIC;
		PS_CLEAR_OP_CODE: out STD_LOGIC;
		PS_SET_WORD_MARK_OP_CODE: out STD_LOGIC;
		MS_STOP_DOT_BRANCH_OP_CODE: out STD_LOGIC;
		PS_STOP_DOT_BRANCH_OP_CODE: out STD_LOGIC;
		MS_SET_WORD_MARK_OP_CODE: out STD_LOGIC;
		PS_CLEAR_WORD_MARK_OP_CODE: out STD_LOGIC;
		MS_CLEAR_WORD_MARK_OP_CODE: out STD_LOGIC;
		MS_CLEAR_OP_CODE: out STD_LOGIC;
		PS_UNIT_CTRL_OP_CODE: out STD_LOGIC;
		PS_DATA_MOVE_OP_CODE: out STD_LOGIC;
		PS_COND_TEST_BRANCH_OP_CODE: out STD_LOGIC;
		PS_CHAR_TEST_BRANCH_OP_CODE: out STD_LOGIC;
		MS_COND_TEST_BRANCH_OP_CODE: out STD_LOGIC;
		MS_DATA_MOVE_OP_CODE: out STD_LOGIC;
		MS_CHAR_TEST_BRANCH_OP_CODE: out STD_LOGIC;
		PS_BRANCH_ON_STATUS_CH_1: out STD_LOGIC;
		MS_I_O_MOVE_OP_CODE: out STD_LOGIC;
		PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE: out STD_LOGIC;
		MS_I_O_LOAD_OP_CODE: out STD_LOGIC;
		PS_I_O_LOAD_OP_CODE: out STD_LOGIC;
		PS_ANY_M_OR_L_OR_U_OP: out STD_LOGIC;
		MS_BRANCH_ON_STATUS_CH_1: out STD_LOGIC;
		MS_STORE_ADDR_REGS_OP_CODE: out STD_LOGIC;
		PS_STORE_ADDR_REGS_OP_CODE: out STD_LOGIC;
		PS_TABLE_SEARCH_OP_CODE: out STD_LOGIC;
		PS_BRANCH_ON_STATUS_CH_2: out STD_LOGIC;
		MS_INTERRUPT_TEST_OP_CODE: out STD_LOGIC;
		MS_BRANCH_ON_STATUS_CH_2: out STD_LOGIC;
		MS_TABLE_SEARCH_OP_CODE: out STD_LOGIC;
		PS_E_CH_FORMS_CTRL_OP_CODE: out STD_LOGIC;
		PS_ARS_NO_OP: out STD_LOGIC;
		PS_E_CH_STACKER_SEL_OP_CODE: out STD_LOGIC;
		MS_E_CH_STACKER_SEL_OP_CODE: out STD_LOGIC;
		MS_E_CH_FORMS_CTRL_OP_CODE: out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_OP_REG_COM_C_BIT: STD_LOGIC := '0';
	signal PS_OP_REG_COM_NOT_C_BIT: STD_LOGIC := '0';
	signal PS_OP_REG_ARS_C_BIT: STD_LOGIC := '0';
	signal PS_OP_REG_ARS_NOT_C_BIT: STD_LOGIC := '0';
	signal MS_1401_DATA_MOVE_OP: STD_LOGIC := '1';
	signal MS_1401_CHAR_TEST_OP_CODE: STD_LOGIC := '1';
	signal MS_1401_COND_TEST_OP_CODE: STD_LOGIC := '1';
	signal MS_1401_I_O_MOVE_OP: STD_LOGIC := '1';
	signal MS_1401_I_O_LOAD_OP: STD_LOGIC := '1';
	signal MS_1401_M_OP_CODE: STD_LOGIC := '1';
	signal MS_1401_L_OP_CODE: STD_LOGIC := '1';
	signal PS_OP_REG_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";
	signal PS_OP_REG_NOT_BUS: STD_LOGIC_VECTOR (5 downTo 0) := "000000";

	-- Outputs

	signal PS_OP_DCDR_NOT_B_DOT_NOT_A_DOT_8_B: STD_LOGIC;
	signal PS_OP_DCDR_NOT_B_DOT_A_DOT_8_B: STD_LOGIC;
	signal PS_OP_DCDR_NOT_B_DOT_NOT_A_DOT_NOT_8_B: STD_LOGIC;
	signal PS_OP_DCDR_B_DOT_A_DOT_NOT_8_B: STD_LOGIC;
	signal PS_OP_DCDR_B_DOT_A_DOT_8_B: STD_LOGIC;
	signal PS_OP_DCDR_B_DOT_NOT_A_DOT_NOT_8_B: STD_LOGIC;
	signal PS_OP_DCDR_B_DOT_NOT_A_DOT_8_B: STD_LOGIC;
	signal PS_OP_DCDR_NOT_4_DOT_NOT_2_DOT_NOT_1_B: STD_LOGIC;
	signal PS_OP_DCDR_NOT_4_DOT_NOT_2_DOT_1_B: STD_LOGIC;
	signal PS_OP_DCDR_NOT_4_DOT_2_DOT_1_B: STD_LOGIC;
	signal PS_OP_DCDR_NOT_4_DOT_2_DOT_NOT_1_B: STD_LOGIC;
	signal PS_OP_DCDR_4_DOT_2_DOT_NOT_1_B: STD_LOGIC;
	signal PS_OP_DCDR_4_DOT_NOT_2_DOT_1_B: STD_LOGIC;
	signal PS_OP_DCDR_4_DOT_NOT_2_DOT_NOT_1_B: STD_LOGIC;
	signal PS_OP_DCDR_4_DOT_2_DOT_1_B: STD_LOGIC;
	signal PS_RESET_ADD_OP_CODE: STD_LOGIC;
	signal MS_RESET_ADD_OP_CODE: STD_LOGIC;
	signal PS_RESET_SUBT_OP_CODE: STD_LOGIC;
	signal MS_RESET_SUBT_OP_CODE: STD_LOGIC;
	signal PS_ADD_OP_CODE: STD_LOGIC;
	signal MS_ADD_OP_CODE: STD_LOGIC;
	signal PS_SUBT_OP_CODE: STD_LOGIC;
	signal MS_SUBT_OP_CODE: STD_LOGIC;
	signal MS_MPLY_OP_CODE: STD_LOGIC;
	signal PS_EDIT_OP_CODE: STD_LOGIC;
	signal PS_MPLY_OP_CODE: STD_LOGIC;
	signal PS_DIV_OP_CODE: STD_LOGIC;
	signal MS_DIV_OP_CODE: STD_LOGIC;
	signal MS_EDIT_OP_CODE: STD_LOGIC;
	signal PS_COMPARE_OP_CODE: STD_LOGIC;
	signal PS_MOVE_ZERO_SUP_OP_CODE: STD_LOGIC;
	signal PS_ZN_OR_WM_TST_BRANCH_OP_CODE: STD_LOGIC;
	signal PS_BIT_TEST_BRANCH_OP_CODE: STD_LOGIC;
	signal MS_COMPARE_OP_CODE: STD_LOGIC;
	signal MS_MOVE_ZERO_SUP_OP_CODE: STD_LOGIC;
	signal MS_BIT_TEST_BRANCH_OP_CODE: STD_LOGIC;
	signal MS_ZN_OR_WM_TST_BRANCH_OP_CODE: STD_LOGIC;
	signal MS_UNIT_CTRL_OP_CODE: STD_LOGIC;
	signal PS_CLEAR_OP_CODE: STD_LOGIC;
	signal PS_SET_WORD_MARK_OP_CODE: STD_LOGIC;
	signal MS_STOP_DOT_BRANCH_OP_CODE: STD_LOGIC;
	signal PS_STOP_DOT_BRANCH_OP_CODE: STD_LOGIC;
	signal MS_SET_WORD_MARK_OP_CODE: STD_LOGIC;
	signal PS_CLEAR_WORD_MARK_OP_CODE: STD_LOGIC;
	signal MS_CLEAR_WORD_MARK_OP_CODE: STD_LOGIC;
	signal MS_CLEAR_OP_CODE: STD_LOGIC;
	signal PS_UNIT_CTRL_OP_CODE: STD_LOGIC;
	signal PS_DATA_MOVE_OP_CODE: STD_LOGIC;
	signal PS_COND_TEST_BRANCH_OP_CODE: STD_LOGIC;
	signal PS_CHAR_TEST_BRANCH_OP_CODE: STD_LOGIC;
	signal MS_COND_TEST_BRANCH_OP_CODE: STD_LOGIC;
	signal MS_DATA_MOVE_OP_CODE: STD_LOGIC;
	signal MS_CHAR_TEST_BRANCH_OP_CODE: STD_LOGIC;
	signal PS_BRANCH_ON_STATUS_CH_1: STD_LOGIC;
	signal MS_I_O_MOVE_OP_CODE: STD_LOGIC;
	signal PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE: STD_LOGIC;
	signal MS_I_O_LOAD_OP_CODE: STD_LOGIC;
	signal PS_I_O_LOAD_OP_CODE: STD_LOGIC;
	signal PS_ANY_M_OR_L_OR_U_OP: STD_LOGIC;
	signal MS_BRANCH_ON_STATUS_CH_1: STD_LOGIC;
	signal MS_STORE_ADDR_REGS_OP_CODE: STD_LOGIC;
	signal PS_STORE_ADDR_REGS_OP_CODE: STD_LOGIC;
	signal PS_TABLE_SEARCH_OP_CODE: STD_LOGIC;
	signal PS_BRANCH_ON_STATUS_CH_2: STD_LOGIC;
	signal MS_INTERRUPT_TEST_OP_CODE: STD_LOGIC;
	signal MS_BRANCH_ON_STATUS_CH_2: STD_LOGIC;
	signal MS_TABLE_SEARCH_OP_CODE: STD_LOGIC;
	signal PS_E_CH_FORMS_CTRL_OP_CODE: STD_LOGIC;
	signal PS_ARS_NO_OP: STD_LOGIC;
	signal PS_E_CH_STACKER_SEL_OP_CODE: STD_LOGIC;
	signal MS_E_CH_STACKER_SEL_OP_CODE: STD_LOGIC;
	signal MS_E_CH_FORMS_CTRL_OP_CODE: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: CommonARSOpDecode port map(
		FPGA_CLK => FPGA_CLK,
		PS_OP_REG_COM_C_BIT => PS_OP_REG_COM_C_BIT,
		PS_OP_REG_COM_NOT_C_BIT => PS_OP_REG_COM_NOT_C_BIT,
		PS_OP_REG_ARS_C_BIT => PS_OP_REG_ARS_C_BIT,
		PS_OP_REG_ARS_NOT_C_BIT => PS_OP_REG_ARS_NOT_C_BIT,
		MS_1401_DATA_MOVE_OP => MS_1401_DATA_MOVE_OP,
		MS_1401_CHAR_TEST_OP_CODE => MS_1401_CHAR_TEST_OP_CODE,
		MS_1401_COND_TEST_OP_CODE => MS_1401_COND_TEST_OP_CODE,
		MS_1401_I_O_MOVE_OP => MS_1401_I_O_MOVE_OP,
		MS_1401_I_O_LOAD_OP => MS_1401_I_O_LOAD_OP,
		MS_1401_M_OP_CODE => MS_1401_M_OP_CODE,
		MS_1401_L_OP_CODE => MS_1401_L_OP_CODE,
		PS_OP_REG_BUS => PS_OP_REG_BUS,
		PS_OP_REG_NOT_BUS => PS_OP_REG_NOT_BUS,
		PS_OP_DCDR_NOT_B_DOT_NOT_A_DOT_8_B => PS_OP_DCDR_NOT_B_DOT_NOT_A_DOT_8_B,
		PS_OP_DCDR_NOT_B_DOT_A_DOT_8_B => PS_OP_DCDR_NOT_B_DOT_A_DOT_8_B,
		PS_OP_DCDR_NOT_B_DOT_NOT_A_DOT_NOT_8_B => PS_OP_DCDR_NOT_B_DOT_NOT_A_DOT_NOT_8_B,
		PS_OP_DCDR_B_DOT_A_DOT_NOT_8_B => PS_OP_DCDR_B_DOT_A_DOT_NOT_8_B,
		PS_OP_DCDR_B_DOT_A_DOT_8_B => PS_OP_DCDR_B_DOT_A_DOT_8_B,
		PS_OP_DCDR_B_DOT_NOT_A_DOT_NOT_8_B => PS_OP_DCDR_B_DOT_NOT_A_DOT_NOT_8_B,
		PS_OP_DCDR_B_DOT_NOT_A_DOT_8_B => PS_OP_DCDR_B_DOT_NOT_A_DOT_8_B,
		PS_OP_DCDR_NOT_4_DOT_NOT_2_DOT_NOT_1_B => PS_OP_DCDR_NOT_4_DOT_NOT_2_DOT_NOT_1_B,
		PS_OP_DCDR_NOT_4_DOT_NOT_2_DOT_1_B => PS_OP_DCDR_NOT_4_DOT_NOT_2_DOT_1_B,
		PS_OP_DCDR_NOT_4_DOT_2_DOT_1_B => PS_OP_DCDR_NOT_4_DOT_2_DOT_1_B,
		PS_OP_DCDR_NOT_4_DOT_2_DOT_NOT_1_B => PS_OP_DCDR_NOT_4_DOT_2_DOT_NOT_1_B,
		PS_OP_DCDR_4_DOT_2_DOT_NOT_1_B => PS_OP_DCDR_4_DOT_2_DOT_NOT_1_B,
		PS_OP_DCDR_4_DOT_NOT_2_DOT_1_B => PS_OP_DCDR_4_DOT_NOT_2_DOT_1_B,
		PS_OP_DCDR_4_DOT_NOT_2_DOT_NOT_1_B => PS_OP_DCDR_4_DOT_NOT_2_DOT_NOT_1_B,
		PS_OP_DCDR_4_DOT_2_DOT_1_B => PS_OP_DCDR_4_DOT_2_DOT_1_B,
		PS_RESET_ADD_OP_CODE => PS_RESET_ADD_OP_CODE,
		MS_RESET_ADD_OP_CODE => MS_RESET_ADD_OP_CODE,
		PS_RESET_SUBT_OP_CODE => PS_RESET_SUBT_OP_CODE,
		MS_RESET_SUBT_OP_CODE => MS_RESET_SUBT_OP_CODE,
		PS_ADD_OP_CODE => PS_ADD_OP_CODE,
		MS_ADD_OP_CODE => MS_ADD_OP_CODE,
		PS_SUBT_OP_CODE => PS_SUBT_OP_CODE,
		MS_SUBT_OP_CODE => MS_SUBT_OP_CODE,
		MS_MPLY_OP_CODE => MS_MPLY_OP_CODE,
		PS_EDIT_OP_CODE => PS_EDIT_OP_CODE,
		PS_MPLY_OP_CODE => PS_MPLY_OP_CODE,
		PS_DIV_OP_CODE => PS_DIV_OP_CODE,
		MS_DIV_OP_CODE => MS_DIV_OP_CODE,
		MS_EDIT_OP_CODE => MS_EDIT_OP_CODE,
		PS_COMPARE_OP_CODE => PS_COMPARE_OP_CODE,
		PS_MOVE_ZERO_SUP_OP_CODE => PS_MOVE_ZERO_SUP_OP_CODE,
		PS_ZN_OR_WM_TST_BRANCH_OP_CODE => PS_ZN_OR_WM_TST_BRANCH_OP_CODE,
		PS_BIT_TEST_BRANCH_OP_CODE => PS_BIT_TEST_BRANCH_OP_CODE,
		MS_COMPARE_OP_CODE => MS_COMPARE_OP_CODE,
		MS_MOVE_ZERO_SUP_OP_CODE => MS_MOVE_ZERO_SUP_OP_CODE,
		MS_BIT_TEST_BRANCH_OP_CODE => MS_BIT_TEST_BRANCH_OP_CODE,
		MS_ZN_OR_WM_TST_BRANCH_OP_CODE => MS_ZN_OR_WM_TST_BRANCH_OP_CODE,
		MS_UNIT_CTRL_OP_CODE => MS_UNIT_CTRL_OP_CODE,
		PS_CLEAR_OP_CODE => PS_CLEAR_OP_CODE,
		PS_SET_WORD_MARK_OP_CODE => PS_SET_WORD_MARK_OP_CODE,
		MS_STOP_DOT_BRANCH_OP_CODE => MS_STOP_DOT_BRANCH_OP_CODE,
		PS_STOP_DOT_BRANCH_OP_CODE => PS_STOP_DOT_BRANCH_OP_CODE,
		MS_SET_WORD_MARK_OP_CODE => MS_SET_WORD_MARK_OP_CODE,
		PS_CLEAR_WORD_MARK_OP_CODE => PS_CLEAR_WORD_MARK_OP_CODE,
		MS_CLEAR_WORD_MARK_OP_CODE => MS_CLEAR_WORD_MARK_OP_CODE,
		MS_CLEAR_OP_CODE => MS_CLEAR_OP_CODE,
		PS_UNIT_CTRL_OP_CODE => PS_UNIT_CTRL_OP_CODE,
		PS_DATA_MOVE_OP_CODE => PS_DATA_MOVE_OP_CODE,
		PS_COND_TEST_BRANCH_OP_CODE => PS_COND_TEST_BRANCH_OP_CODE,
		PS_CHAR_TEST_BRANCH_OP_CODE => PS_CHAR_TEST_BRANCH_OP_CODE,
		MS_COND_TEST_BRANCH_OP_CODE => MS_COND_TEST_BRANCH_OP_CODE,
		MS_DATA_MOVE_OP_CODE => MS_DATA_MOVE_OP_CODE,
		MS_CHAR_TEST_BRANCH_OP_CODE => MS_CHAR_TEST_BRANCH_OP_CODE,
		PS_BRANCH_ON_STATUS_CH_1 => PS_BRANCH_ON_STATUS_CH_1,
		MS_I_O_MOVE_OP_CODE => MS_I_O_MOVE_OP_CODE,
		PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE => PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,
		MS_I_O_LOAD_OP_CODE => MS_I_O_LOAD_OP_CODE,
		PS_I_O_LOAD_OP_CODE => PS_I_O_LOAD_OP_CODE,
		PS_ANY_M_OR_L_OR_U_OP => PS_ANY_M_OR_L_OR_U_OP,
		MS_BRANCH_ON_STATUS_CH_1 => MS_BRANCH_ON_STATUS_CH_1,
		MS_STORE_ADDR_REGS_OP_CODE => MS_STORE_ADDR_REGS_OP_CODE,
		PS_STORE_ADDR_REGS_OP_CODE => PS_STORE_ADDR_REGS_OP_CODE,
		PS_TABLE_SEARCH_OP_CODE => PS_TABLE_SEARCH_OP_CODE,
		PS_BRANCH_ON_STATUS_CH_2 => PS_BRANCH_ON_STATUS_CH_2,
		MS_INTERRUPT_TEST_OP_CODE => MS_INTERRUPT_TEST_OP_CODE,
		MS_BRANCH_ON_STATUS_CH_2 => MS_BRANCH_ON_STATUS_CH_2,
		MS_TABLE_SEARCH_OP_CODE => MS_TABLE_SEARCH_OP_CODE,
		PS_E_CH_FORMS_CTRL_OP_CODE => PS_E_CH_FORMS_CTRL_OP_CODE,
		PS_ARS_NO_OP => PS_ARS_NO_OP,
		PS_E_CH_STACKER_SEL_OP_CODE => PS_E_CH_STACKER_SEL_OP_CODE,
		MS_E_CH_STACKER_SEL_OP_CODE => MS_E_CH_STACKER_SEL_OP_CODE,
		MS_E_CH_FORMS_CTRL_OP_CODE => MS_E_CH_FORMS_CTRL_OP_CODE);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Persistent assignments

PS_OP_REG_NOT_BUS <= NOT PS_OP_REG_BUS(5 downto 0);

-- For this test, mirror the Op register C bit into the other C bits

PS_OP_REG_COM_C_BIT <= PS_OP_REG_BUS(7);
PS_OP_REG_COM_NOT_C_BIT <= NOT PS_OP_REG_COM_C_BIT;

PS_OP_REG_ARS_C_BIT <= PS_OP_REG_BUS(7);
PS_OP_REG_ARS_NOT_C_BIT <= NOT PS_OP_REG_COM_C_BIT;

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;
   
   variable OpCodeBCD: BCD.BCD;
   variable testChar: string(1 to 6);

   begin

   -- Your test bench code
   
   testName := "13.13.01.1 - 08.1 ";
   
   for BCD_CHAR in BCD.BCD loop
      PS_OP_REG_BUS <= BCD.bcd_to_slv8_odd_parity(BCD_CHAR);
      wait for 30 ns;
      report "Character is " & BCD.BCD'image(BCD_CHAR);
            
      case BCD_CHAR is
      
         when BCD.BCD_QUESTION_MARK =>
            testChar := "????? ";
            check1(PS_RESET_ADD_OP_CODE,'1',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'0',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            
      
         when BCD.BCD_EXCLAMATION =>
            testChar := "!!!!! ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'1',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'0',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");                       
      
         when BCD.BCD_A =>
            testChar := "AAAAA ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'1',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'0',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");                       
                                     
         when BCD.BCD_S =>
            testChar := "SSSSS ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'1',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'0',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            
            
         when BCD.BCD_AT =>
            testChar := "@@@@@ ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'1',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'0',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            

         when BCD.BCD_PERCENT =>
            testChar := "%%%%% ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'1',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'0',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            

         when BCD.BCD_E =>
            testChar := "EEEEE ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'1',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");            
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'0',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            

         when BCD.BCD_C =>
            testChar := "CCCCC ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'1',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'0',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            

         when BCD.BCD_Z =>
            testChar := "ZZZZZ ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            

         when BCD.BCD_W =>
            testChar := "WWWWW ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            

         when BCD.BCD_V =>
            testChar := "VVVVV ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            

         when BCD.BCD_COMMA =>
            testChar := ",,,,, ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            

         when BCD.BCD_LOZENGE =>
            testChar := "Lozng ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            

         when BCD.BCD_PERIOD =>
            testChar := "..... ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            

         when BCD.BCD_SLASH =>
            testChar := "///// ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'1',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'0',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            

         when BCD.BCD_U =>
            testChar := "UUUUU ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'1',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            

         when BCD.BCD_D =>
            testChar := "DDDDD ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'1',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'0',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            
            
         when BCD.BCD_B =>
               testChar := "BBBBB ";
               check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
               check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
               check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
               check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
               check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
               check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
               check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
               check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
               check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
               check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
               check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
               check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
               check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
               check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
               check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
               check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
               check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
               check1(PS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "B");            
               check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
               check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
               check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
               check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
               check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
               check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
               check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
               check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
               check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
               check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
               check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
               
               check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
               check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
               check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
               check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
               check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
               check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
               check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
               check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
               check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
               check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
               check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
               check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
               check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
               check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
               check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
               check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
               check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
               check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
               check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
               check1(MS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "-B");            
               check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
               check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
               check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
               check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
               check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
               check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
               check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
               check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            
               
         when BCD.BCD_J =>
            testChar := "JJJJJ ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            
            

         when BCD.BCD_M =>
            testChar := "MMMMM ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'1',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'1',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'0',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            
            
         when BCD.BCD_L =>
            testChar := "LLLLL ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'1',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'1',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'1',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'0',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            

         when BCD.BCD_R =>
            testChar := "RRRRR ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            

         when BCD.BCD_X =>
            testChar := "XXXXX ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            

         when BCD.BCD_G =>
            testChar := "GGGGG ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");                        

         when BCD.BCD_Y =>
            testChar := "OTHER ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'0',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            
            

         when BCD.BCD_T =>
            testChar := "TTTTT ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            

                                      
         when BCD.BCD_N =>
            testChar := "NNNNN ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'1',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            
                                                 
         when BCD.BCD_K =>
            testChar := "KKKKK ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            
                                                  
         when BCD.BCD_F =>
            testChar := "FFFFF ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "-F");            
                                                 
         when others =>
            testChar := "OTHER ";
            check1(PS_RESET_ADD_OP_CODE,'0',testName,testChar & "?");            
            check1(PS_RESET_SUBT_OP_CODE,'0',testName,testChar & "!");
            check1(PS_ADD_OP_CODE,'0',testName,testChar & "A");
            check1(PS_SUBT_OP_CODE,'0',testName,testChar & "S");
            check1(PS_MPLY_OP_CODE,'0',testname,testChar & "@");
            check1(PS_DIV_OP_CODE,'0',testname,testChar & "%");
            check1(PS_EDIT_OP_CODE,'0',testname,testChar & "E");
            check1(PS_COMPARE_OP_CODE,'0',testname,testChar & "C");            
            check1(PS_MOVE_ZERO_SUP_OP_CODE,'0',testname,testChar & "Z");            
            check1(PS_BIT_TEST_BRANCH_OP_CODE,'0',testname,testChar & "W");            
            check1(PS_ZN_OR_WM_TST_BRANCH_OP_CODE,'0',testname,testChar & "V");            
            check1(PS_SET_WORD_MARK_OP_CODE,'0',testname,testChar & ",");            
            check1(PS_CLEAR_WORD_MARK_OP_CODE,'0',testname,testChar & "Lozenge");            
            check1(PS_STOP_DOT_BRANCH_OP_CODE,'0',testname,testChar & ".");            
            check1(PS_CLEAR_OP_CODE,'0',testname,testChar & "/");            
            check1(PS_UNIT_CTRL_OP_CODE,'0',testname,testChar & "U");            
            check1(PS_DATA_MOVE_OP_CODE,'0',testname,testChar & "D");            
            check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testname,testChar & "B");            
            check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testname,testChar & "J");            
            check1(PS_I_O_MOVE_OR_I_O_LOAD_OP_CODE,'0',testname,testChar & "M+L");            
            check1(PS_I_O_LOAD_OP_CODE,'0',testname,testChar & "L");            
            check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,testChar & "M+L+U");            
            check1(PS_BRANCH_ON_STATUS_CH_1,'0',testname,testChar & "R");            
            check1(PS_BRANCH_ON_STATUS_CH_2,'0',testname,testChar & "X");            
            check1(PS_STORE_ADDR_REGS_OP_CODE,'0',testname,testChar & "G");            
            check1(PS_TABLE_SEARCH_OP_CODE,'0',testname,testChar & "T");            
            check1(PS_ARS_NO_OP,'0',testname,testChar & "N");            
            check1(PS_E_CH_STACKER_SEL_OP_CODE,'0',testname,testChar & "K");      
            check1(PS_E_CH_FORMS_CTRL_OP_CODE,'0',testname,testChar & "F");            
            
            check1(MS_RESET_ADD_OP_CODE,'1',testname,testChar & "-?");
            check1(MS_RESET_SUBT_OP_CODE,'1',testName,testChar & "-!");
            check1(MS_ADD_OP_CODE,'1',testName,testChar & "-A");
            check1(MS_SUBT_OP_CODE,'1',testName,testChar & "-S");
            check1(MS_MPLY_OP_CODE,'1',testname,testChar & "-@");
            check1(MS_DIV_OP_CODE,'1',testname,testChar & "-%");
            check1(MS_EDIT_OP_CODE,'1',testname,testChar & "-E");
            check1(MS_COMPARE_OP_CODE,'1',testname,testChar & "-C");            
            check1(MS_MOVE_ZERO_SUP_OP_CODE,'1',testname,testChar & "-Z");            
            check1(MS_BIT_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-W");            
            check1(MS_ZN_OR_WM_TST_BRANCH_OP_CODE,'1',testname,testChar & "-V");            
            check1(MS_I_O_MOVE_OP_CODE,'1',testname,testChar & "-M");            
            check1(MS_INTERRUPT_TEST_OP_CODE,'1',testname,testChar & "-Y");            
            check1(MS_SET_WORD_MARK_OP_CODE,'1',testname,testChar & ",");            
            check1(MS_CLEAR_WORD_MARK_OP_CODE,'1',testname,testChar & "-Lozenge");            
            check1(MS_STOP_DOT_BRANCH_OP_CODE,'1',testname,testChar & "-.");            
            check1(MS_CLEAR_OP_CODE,'1',testname,testChar & "-/");            
            check1(MS_UNIT_CTRL_OP_CODE,'1',testname,testChar & "-U");            
            check1(MS_DATA_MOVE_OP_CODE,'1',testname,testChar & "-D");            
            check1(MS_CHAR_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-B");            
            check1(MS_COND_TEST_BRANCH_OP_CODE,'1',testname,testChar & "-J");            
            check1(MS_I_O_LOAD_OP_CODE,'1',testname,testChar & "-L");            
            check1(MS_BRANCH_ON_STATUS_CH_1,'1',testname,testChar & "-R");            
            check1(MS_BRANCH_ON_STATUS_CH_2,'1',testname,testChar & "-X");            
            check1(MS_STORE_ADDR_REGS_OP_CODE,'1',testname,testChar & "-G");            
            check1(MS_TABLE_SEARCH_OP_CODE,'1',testname,testChar & "-T");            
            check1(MS_E_CH_STACKER_SEL_OP_CODE,'1',testname,testChar & "-K");            
            check1(MS_E_CH_FORMS_CTRL_OP_CODE,'1',testname,testChar & "-F");            
            
      
      end case;
   end loop;
   
   check1(PS_CHAR_TEST_BRANCH_OP_CODE,'0',testName,"1A");
   MS_1401_CHAR_TEST_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_CHAR_TEST_BRANCH_OP_CODE,'1',testName,"1B");
   MS_1401_CHAR_TEST_OP_CODE <= '1';
   
   check1(PS_COND_TEST_BRANCH_OP_CODE,'0',testName,"2A");
   MS_1401_COND_TEST_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_COND_TEST_BRANCH_OP_CODE,'1',testName,"1B");
   MS_1401_COND_TEST_OP_CODE <= '1';
   
   check1(MS_I_O_MOVE_OP_CODE,'1',testName,"3A");
   MS_1401_I_O_MOVE_OP <= '0';
   wait for 30 ns;
   check1(MS_I_O_MOVE_OP_CODE,'0',testName,"3B");
   MS_1401_I_O_MOVE_OP <= '1';
   
   wait for 30 ns;
   check1(PS_I_O_LOAD_OP_CODE,'0',testName,"4A");
   check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,"4B");
   MS_1401_I_O_LOAD_OP <= '0';
   wait for 30 ns;
   check1(PS_I_O_LOAD_OP_CODE,'1',testName,"4C");
   check1(PS_ANY_M_OR_L_OR_U_OP,'1',testname,"4D");
   MS_1401_I_O_LOAD_OP <= '1';

   wait for 30 ns;
   check1(PS_ANY_M_OR_L_OR_U_OP,'0',testname,"5A");
   MS_1401_M_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_ANY_M_OR_L_OR_U_OP,'1',testname,"5B");
   MS_1401_M_OP_CODE <= '0';
   MS_1401_L_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_ANY_M_OR_L_OR_U_OP,'1',testname,"5C");
   MS_1401_L_OP_CODE <= '1';

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS

END;
