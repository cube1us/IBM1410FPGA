-- VHDL for IBM SMS ALD page 44.10.01.1
-- Title: CONSOLE STOP CONDITION LATCH
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/26/2020 2:32:41 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_44_10_01_1_CONSOLE_STOP_CONDITION_LATCH is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_CONSOLE_HOME_POSITION:	 in STD_LOGIC;
		MS_CONS_START_STOP_PRINT_OUT:	 in STD_LOGIC;
		PS_CLOCK_STOPPED:	 in STD_LOGIC;
		MS_PROGRAM_RESET_4:	 in STD_LOGIC;
		CONS_36V:	 in STD_LOGIC;
		PS_2ND_CLOCK_PULSE_2:	 in STD_LOGIC;
		MS_DISPLAY_ROUTINE:	 in STD_LOGIC;
		MV_CONS_MODE_SW_ALTER_MODE:	 in STD_LOGIC;
		MS_CONS_STOP_PRINT_LATCH:	 in STD_LOGIC;
		GROUND:	 in STD_LOGIC;
		SWITCH_TOG_INHIBIT_PO_PL2:	 in STD_LOGIC;
		SWITCH_MOM_STARTPRINT:	 in STD_LOGIC;
		SWITCH_ROT_CYCLE_CTRL_DK2:	 in STD_LOGIC_VECTOR(5 downTo 0);
		MS_CONSOLE_STOPPED:	 out STD_LOGIC;
		MS_CONS_STOP_PRINT_OUT_COND:	 out STD_LOGIC;
		PS_CONSOLE_STOP_CONDITION_LATCH:	 out STD_LOGIC;
		PS_CONS_STOP_PRINT_COMP_COND:	 out STD_LOGIC;
		MV_START_PRINT_SWITCH:	 out STD_LOGIC;
		MV_CONS_CYCLE_CTRL_LOGIC_STEP:	 out STD_LOGIC;
		MV_CONS_CYCLE_CTRL_STOR_SCAN:	 out STD_LOGIC);
end ALD_44_10_01_1_CONSOLE_STOP_CONDITION_LATCH;

architecture behavioral of ALD_44_10_01_1_CONSOLE_STOP_CONDITION_LATCH is 

	signal OUT_2A_1: STD_LOGIC;
	signal OUT_3B_D: STD_LOGIC;
	signal OUT_3B_D_Latch: STD_LOGIC;
	signal OUT_2B_E: STD_LOGIC;
	signal OUT_2B_E_Latch: STD_LOGIC;
	signal OUT_1B_D: STD_LOGIC;
	signal OUT_5C_X: STD_LOGIC;
	signal OUT_3C_P: STD_LOGIC;
	signal OUT_5D_T: STD_LOGIC;
	signal OUT_3D_K: STD_LOGIC;
	signal OUT_5E_C: STD_LOGIC;
	signal OUT_5G_X: STD_LOGIC;
	signal OUT_4G_C: STD_LOGIC;
	signal OUT_3G_P: STD_LOGIC;
	signal OUT_5H_N: STD_LOGIC;
	signal OUT_4H_X: STD_LOGIC;
	signal OUT_5I_A: STD_LOGIC;
	signal OUT_5I_K: STD_LOGIC;
	signal OUT_4I_X: STD_LOGIC;
	signal OUT_DOT_3B: STD_LOGIC;
	signal OUT_DOT_3D: STD_LOGIC;

begin

	OUT_2A_1 <= NOT(PS_CONSOLE_HOME_POSITION AND OUT_DOT_3B );
	OUT_3B_D_Latch <= NOT(OUT_2B_E AND MS_CONS_START_STOP_PRINT_OUT );
	OUT_2B_E_Latch <= NOT(OUT_DOT_3B AND OUT_3G_P AND OUT_DOT_3D );
	OUT_1B_D <= NOT(OUT_2B_E AND PS_CONSOLE_HOME_POSITION AND PS_CLOCK_STOPPED );
	OUT_5C_X <= OUT_5D_T;
	OUT_3C_P <= NOT(OUT_5C_X AND MS_PROGRAM_RESET_4 );
	OUT_5D_T <=  NOT SWITCH_TOG_INHIBIT_PO_PL2;
	OUT_3D_K <= NOT(OUT_5C_X AND PS_2ND_CLOCK_PULSE_2 );
	OUT_5E_C <= NOT(MS_DISPLAY_ROUTINE AND MV_CONS_MODE_SW_ALTER_MODE AND MS_CONS_STOP_PRINT_LATCH );
	OUT_5G_X <= OUT_5H_N;
	OUT_4G_C <= NOT(OUT_5G_X );
	OUT_3G_P <= NOT(OUT_4G_C AND MS_CONS_STOP_PRINT_LATCH );
	OUT_5H_N <= SWITCH_MOM_STARTPRINT;
	OUT_4H_X <= OUT_5I_A;
	OUT_5I_A <= NOT SWITCH_ROT_CYCLE_CTRL_DK2(1);
	OUT_5I_K <= NOT SWITCH_ROT_CYCLE_CTRL_DK2(3);
	OUT_4I_X <= OUT_5I_K;
	OUT_DOT_3B <= OUT_3B_D OR OUT_3C_P;
	OUT_DOT_3D <= OUT_3D_K OR OUT_5E_C;

	MS_CONSOLE_STOPPED <= OUT_2A_1;
	PS_CONSOLE_STOP_CONDITION_LATCH <= OUT_2B_E;
	MS_CONS_STOP_PRINT_OUT_COND <= OUT_1B_D;
	MV_START_PRINT_SWITCH <= OUT_5G_X;
	MV_CONS_CYCLE_CTRL_LOGIC_STEP <= OUT_4H_X;
	MV_CONS_CYCLE_CTRL_STOR_SCAN <= OUT_4I_X;
	PS_CONS_STOP_PRINT_COMP_COND <= OUT_DOT_3B;

	Latch_3B: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3B_D_Latch,
		Q => OUT_3B_D,
		QBar => OPEN );

	Latch_2B: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2B_E_Latch,
		Q => OUT_2B_E,
		QBar => OPEN );


end;
