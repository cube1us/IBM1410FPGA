-- VHDL for IBM SMS ALD page 13.66.04.1
-- Title: F CH DATA FLOW CONTROL
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 8/9/2020 9:52:48 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_13_66_04_1_F_CH_DATA_FLOW_CONTROL is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_F2_REG_WORD_SEPARATOR:	 in STD_LOGIC;
		PS_SET_F2_REG:	 in STD_LOGIC;
		PS_F1_REG_WORD_SEPARATOR:	 in STD_LOGIC;
		PS_F_CH_INPUT_MODE:	 in STD_LOGIC;
		MS_F1_REG_WORD_SEPARATOR:	 in STD_LOGIC;
		PS_F2_REG_WORD_SEPARATOR:	 in STD_LOGIC;
		PS_F1_REG_WM_BIT:	 in STD_LOGIC;
		PS_F1_REG_NOT_WM_BIT:	 in STD_LOGIC;
		PS_F_CH_OUTPUT_MODE:	 in STD_LOGIC;
		PS_COPY_F1_BCD_TO_F2_REG:	 out STD_LOGIC;
		MS_SET_F2_WORD_SEPARATOR:	 out STD_LOGIC;
		PS_COPY_INV_F1_WM_DOT_C_BIT:	 out STD_LOGIC;
		PS_COPY_F1_WM_DOT_C_BIT:	 out STD_LOGIC);
end ALD_13_66_04_1_F_CH_DATA_FLOW_CONTROL;

architecture behavioral of ALD_13_66_04_1_F_CH_DATA_FLOW_CONTROL is 

	signal OUT_4A_H: STD_LOGIC;
	signal OUT_4B_F: STD_LOGIC;
	signal OUT_4C_D: STD_LOGIC;
	signal OUT_2C_B: STD_LOGIC;
	signal OUT_4D_E: STD_LOGIC;
	signal OUT_2D_C: STD_LOGIC;
	signal OUT_4E_P: STD_LOGIC;
	signal OUT_2E_R: STD_LOGIC;
	signal OUT_4F_K: STD_LOGIC;
	signal OUT_4G_G: STD_LOGIC;
	signal OUT_2G_C: STD_LOGIC;
	signal OUT_4H_C: STD_LOGIC;
	signal OUT_2H_B: STD_LOGIC;
	signal OUT_4I_G: STD_LOGIC;
	signal OUT_2I_F: STD_LOGIC;
	signal OUT_DOT_1D: STD_LOGIC;
	signal OUT_DOT_4E: STD_LOGIC;
	signal OUT_DOT_1G: STD_LOGIC;

begin


	SMS_AEK_4A: entity SMS_AEK
	    port map (
		IN1 => PS_F1_REG_WORD_SEPARATOR,	-- Pin P
		IN2 => OUT_4B_F,	-- Pin B
		OUT1 => OUT_4A_H );

	OUT_4B_F <= NOT MS_F2_REG_WORD_SEPARATOR;
	OUT_4C_D <= NOT(PS_SET_F2_REG AND PS_F1_REG_WORD_SEPARATOR AND MS_F2_REG_WORD_SEPARATOR );
	OUT_2C_B <= OUT_4C_D;
	OUT_4D_E <= NOT(PS_F_CH_INPUT_MODE AND MS_F1_REG_WORD_SEPARATOR AND PS_F2_REG_WORD_SEPARATOR );
	OUT_2D_C <= NOT OUT_4D_E;
	OUT_4E_P <= NOT(PS_F1_REG_WORD_SEPARATOR AND PS_F2_REG_WORD_SEPARATOR );
	OUT_2E_R <= NOT OUT_DOT_4E;
	OUT_4F_K <= NOT(PS_F1_REG_WM_BIT AND PS_F_CH_OUTPUT_MODE );
	OUT_4G_G <= NOT(PS_F1_REG_WORD_SEPARATOR AND PS_F2_REG_WORD_SEPARATOR AND PS_F1_REG_NOT_WM_BIT );
	OUT_2G_C <= NOT OUT_4G_G;
	OUT_4H_C <= NOT(MS_F2_REG_WORD_SEPARATOR AND PS_F_CH_INPUT_MODE );
	OUT_2H_B <= NOT OUT_4H_C;
	OUT_4I_G <= NOT(MS_F1_REG_WORD_SEPARATOR AND PS_F_CH_OUTPUT_MODE );
	OUT_2I_F <= NOT OUT_4I_G;
	OUT_DOT_1D <= OUT_2D_C OR OUT_2E_R;
	OUT_DOT_4E <= OUT_4E_P OR OUT_4F_K;
	OUT_DOT_1G <= OUT_2G_C OR OUT_2H_B OR OUT_2I_F;

	PS_COPY_F1_BCD_TO_F2_REG <= OUT_4A_H;
	MS_SET_F2_WORD_SEPARATOR <= OUT_2C_B;
	PS_COPY_INV_F1_WM_DOT_C_BIT <= OUT_DOT_1D;
	PS_COPY_F1_WM_DOT_C_BIT <= OUT_DOT_1G;


end;
