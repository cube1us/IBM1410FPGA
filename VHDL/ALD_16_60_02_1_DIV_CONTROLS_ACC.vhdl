-- VHDL for IBM SMS ALD page 16.60.02.1
-- Title: DIV CONTROLS-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/6/2020 2:43:47 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_16_60_02_1_DIV_CONTROLS_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_EXTENSION_LATCH:	 in STD_LOGIC;
		PB_ADDER_CARRY:	 in STD_LOGIC;
		PB_ADDER_NO_CARRY:	 in STD_LOGIC;
		PB_COMPLEMENT_LATCH:	 in STD_LOGIC;
		PS_B_CYCLE:	 in STD_LOGIC;
		PS_NOT_MPLY_DIV_LAST_LATCH:	 in STD_LOGIC;
		PS_MPLY_DIV_LAST_LATCH:	 in STD_LOGIC;
		PS_TRUE_LATCH_1:	 in STD_LOGIC;
		PS_DIV_OP_CODE:	 in STD_LOGIC;
		PS_2ND_SCAN:	 in STD_LOGIC;
		PS_D_CYCLE:	 in STD_LOGIC;
		PS_DIV_DOT_MQ_DOT_B:	 in STD_LOGIC;
		MB_DIV_DOT_X_DOT_B:	 out STD_LOGIC;
		MB_DIV_DOT_X_DOT_B_DOT_S_DOT_NOT_RC:	 out STD_LOGIC;
		MB_DIV_DOT_X_DOT_B_DOT_S_DOT_RC:	 out STD_LOGIC;
		MS_DIV_DOT_X_DOT_B_DOT_T_DOT_NOT_MDL:	 out STD_LOGIC;
		MS_DIV_DOT_X_DOT_B_DOT_T_DOT_MDL:	 out STD_LOGIC;
		MS_DIV_DOT_2_DOT_D:	 out STD_LOGIC;
		MS_DIV_DOT_B:	 out STD_LOGIC;
		MS_DIV_DOT_MQ_DOT_B_DOT_T:	 out STD_LOGIC);
end ALD_16_60_02_1_DIV_CONTROLS_ACC;

architecture behavioral of ALD_16_60_02_1_DIV_CONTROLS_ACC is 

	signal OUT_5A_G: STD_LOGIC;
	signal OUT_4A_F: STD_LOGIC;
	signal OUT_4B_P: STD_LOGIC;
	signal OUT_3B_A: STD_LOGIC;
	signal OUT_4C_K: STD_LOGIC;
	signal OUT_4D_B: STD_LOGIC;
	signal OUT_4E_G: STD_LOGIC;
	signal OUT_4F_G: STD_LOGIC;
	signal OUT_5H_G: STD_LOGIC;
	signal OUT_4H_L: STD_LOGIC;
	signal OUT_5I_G: STD_LOGIC;
	signal OUT_4I_C: STD_LOGIC;

begin

	OUT_5A_G <= NOT(PS_B_CYCLE AND PS_DIV_OP_CODE AND PS_EXTENSION_LATCH );
	OUT_4A_F <= NOT(OUT_5A_G );
	OUT_4B_P <= NOT OUT_5A_G;
	OUT_3B_A <= NOT OUT_4B_P;
	OUT_4C_K <= NOT(OUT_4B_P AND PB_ADDER_NO_CARRY AND PB_COMPLEMENT_LATCH );
	OUT_4D_B <= NOT(OUT_4B_P AND PB_ADDER_CARRY AND PB_COMPLEMENT_LATCH );
	OUT_4E_G <= NOT(OUT_4A_F AND PS_NOT_MPLY_DIV_LAST_LATCH AND PS_TRUE_LATCH_1 );
	OUT_4F_G <= NOT(OUT_4A_F AND PS_MPLY_DIV_LAST_LATCH AND PS_TRUE_LATCH_1 );
	OUT_5H_G <= NOT(PS_DIV_OP_CODE AND PS_2ND_SCAN AND PS_D_CYCLE );
	OUT_4H_L <= OUT_5H_G;
	OUT_5I_G <= NOT(PS_DIV_OP_CODE AND PS_B_CYCLE );
	OUT_4I_C <= NOT(PS_TRUE_LATCH_1 AND PS_DIV_DOT_MQ_DOT_B );

	MB_DIV_DOT_X_DOT_B <= OUT_3B_A;
	MB_DIV_DOT_X_DOT_B_DOT_S_DOT_NOT_RC <= OUT_4C_K;
	MB_DIV_DOT_X_DOT_B_DOT_S_DOT_RC <= OUT_4D_B;
	MS_DIV_DOT_X_DOT_B_DOT_T_DOT_NOT_MDL <= OUT_4E_G;
	MS_DIV_DOT_X_DOT_B_DOT_T_DOT_MDL <= OUT_4F_G;
	MS_DIV_DOT_2_DOT_D <= OUT_4H_L;
	MS_DIV_DOT_B <= OUT_5I_G;
	MS_DIV_DOT_MQ_DOT_B_DOT_T <= OUT_4I_C;


end;
