-- Test BenchVHDL for IBM SMS ALD group LogicGateRing
-- Title: LogicGateRing
-- IBM Machine Name 1411
-- Generated by GenerateHDL on 5/30/2020 7:42:27 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity LogicGateRing_tb is
end LogicGateRing_tb;

architecture behavioral of LogicGateRing_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component LogicGateRing
	    Port (
		FPGA_CLK: in STD_LOGIC;
		PS_LOGIC_RING_ON_ADVANCE_1: in STD_LOGIC;
		PS_LOGIC_RING_OFF_ADVANCE_1: in STD_LOGIC;
		PS_LOGIC_GATE_Z: in STD_LOGIC;
		MS_LOGIC_GATE_Z: in STD_LOGIC;
		MS_PROGRAM_RESET_3: in STD_LOGIC;
		PS_E_CYCLE_REQUIRED: in STD_LOGIC;
		PS_E_CH_UNOVLP_IN_PROCESS: in STD_LOGIC;
		PS_F_CYCLE_REQUIRED: in STD_LOGIC;
		PS_F_CH_UNOVLP_IN_PROCESS: in STD_LOGIC;
		PS_COMP_DISABLE_CYCLE: in STD_LOGIC;
		PS_LAST_LOGIC_GATE_1: in STD_LOGIC;
		PS_LOGIC_GATE_A_1: out STD_LOGIC;
		PS_LOGIC_GATE_A_CONTROL: out STD_LOGIC;
		MS_LOGIC_GATE_A_1: out STD_LOGIC;
		PS_LOGIC_GATE_B_1: out STD_LOGIC;
		MS_LOGIC_GATE_B_1: out STD_LOGIC;
		MS_LOGIC_GATE_C_1: out STD_LOGIC;
		PS_LOGIC_GATE_C_1: out STD_LOGIC;
		MS_LOGIC_GATE_D_1: out STD_LOGIC;
		PS_LOGIC_GATE_C_OR_D: out STD_LOGIC;
		PS_LOGIC_GATE_D_1: out STD_LOGIC;
		PS_LOGIC_GATE_E_1: out STD_LOGIC;
		PS_LOGIC_GATE_E_2: out STD_LOGIC;
		MS_LOGIC_GATE_E_1: out STD_LOGIC;
		MY_LOGIC_GATE_E: out STD_LOGIC;
		PS_LOGIC_GATE_F_1: out STD_LOGIC;
		MY_LOGIC_GATE_F_1: out STD_LOGIC;
		MS_LOGIC_GATE_F_1: out STD_LOGIC;
		MS_LOGIC_GATE_G: out STD_LOGIC;
		PS_LOGIC_GATE_G: out STD_LOGIC;
		MS_LOGIC_GATE_H: out STD_LOGIC;
		PS_LOGIC_GATE_H: out STD_LOGIC;
		MS_LOGIC_GATE_J: out STD_LOGIC;
		PS_LOGIC_GATE_J: out STD_LOGIC;
		MS_LOGIC_GATE_K: out STD_LOGIC;
		PS_LOGIC_GATE_K: out STD_LOGIC;
		LAMP_15A1A06: out STD_LOGIC;
		LAMP_15A1B06: out STD_LOGIC;
		LAMP_15A1C06: out STD_LOGIC;
		LAMP_15A1D06: out STD_LOGIC;
		LAMP_15A1E06: out STD_LOGIC;
		LAMP_15A1F06: out STD_LOGIC;
		LAMP_15A1G06: out STD_LOGIC;
		LAMP_15A1H06: out STD_LOGIC;
		LAMP_15A1J06: out STD_LOGIC;
		LAMP_15A1K06: out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_LOGIC_RING_ON_ADVANCE_1: STD_LOGIC := '0';
	signal PS_LOGIC_RING_OFF_ADVANCE_1: STD_LOGIC := '0';
	signal PS_LOGIC_GATE_Z: STD_LOGIC := '0';
	signal MS_LOGIC_GATE_Z: STD_LOGIC := '1';
	signal MS_PROGRAM_RESET_3: STD_LOGIC := '1';
	signal PS_E_CYCLE_REQUIRED: STD_LOGIC := '0';
	signal PS_E_CH_UNOVLP_IN_PROCESS: STD_LOGIC := '0';
	signal PS_F_CYCLE_REQUIRED: STD_LOGIC := '0';
	signal PS_F_CH_UNOVLP_IN_PROCESS: STD_LOGIC := '0';
	signal PS_COMP_DISABLE_CYCLE: STD_LOGIC := '0';
	signal PS_LAST_LOGIC_GATE_1: STD_LOGIC := '0';

	-- Outputs

	signal PS_LOGIC_GATE_A_1: STD_LOGIC;
	signal PS_LOGIC_GATE_A_CONTROL: STD_LOGIC;
	signal MS_LOGIC_GATE_A_1: STD_LOGIC;
	signal PS_LOGIC_GATE_B_1: STD_LOGIC;
	signal MS_LOGIC_GATE_B_1: STD_LOGIC;
	signal MS_LOGIC_GATE_C_1: STD_LOGIC;
	signal PS_LOGIC_GATE_C_1: STD_LOGIC;
	signal MS_LOGIC_GATE_D_1: STD_LOGIC;
	signal PS_LOGIC_GATE_C_OR_D: STD_LOGIC;
	signal PS_LOGIC_GATE_D_1: STD_LOGIC;
	signal PS_LOGIC_GATE_E_1: STD_LOGIC;
	signal PS_LOGIC_GATE_E_2: STD_LOGIC;
	signal MS_LOGIC_GATE_E_1: STD_LOGIC;
	signal MY_LOGIC_GATE_E: STD_LOGIC;
	signal PS_LOGIC_GATE_F_1: STD_LOGIC;
	signal MY_LOGIC_GATE_F_1: STD_LOGIC;
	signal MS_LOGIC_GATE_F_1: STD_LOGIC;
	signal MS_LOGIC_GATE_G: STD_LOGIC;
	signal PS_LOGIC_GATE_G: STD_LOGIC;
	signal MS_LOGIC_GATE_H: STD_LOGIC;
	signal PS_LOGIC_GATE_H: STD_LOGIC;
	signal MS_LOGIC_GATE_J: STD_LOGIC;
	signal PS_LOGIC_GATE_J: STD_LOGIC;
	signal MS_LOGIC_GATE_K: STD_LOGIC;
	signal PS_LOGIC_GATE_K: STD_LOGIC;
	signal LAMP_15A1A06: STD_LOGIC;
	signal LAMP_15A1B06: STD_LOGIC;
	signal LAMP_15A1C06: STD_LOGIC;
	signal LAMP_15A1D06: STD_LOGIC;
	signal LAMP_15A1E06: STD_LOGIC;
	signal LAMP_15A1F06: STD_LOGIC;
	signal LAMP_15A1G06: STD_LOGIC;
	signal LAMP_15A1H06: STD_LOGIC;
	signal LAMP_15A1J06: STD_LOGIC;
	signal LAMP_15A1K06: STD_LOGIC;

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: LogicGateRing port map(
		FPGA_CLK => FPGA_CLK,
		PS_LOGIC_RING_ON_ADVANCE_1 => PS_LOGIC_RING_ON_ADVANCE_1,
		PS_LOGIC_RING_OFF_ADVANCE_1 => PS_LOGIC_RING_OFF_ADVANCE_1,
		PS_LOGIC_GATE_Z => PS_LOGIC_GATE_Z,
		MS_LOGIC_GATE_Z => MS_LOGIC_GATE_Z,
		MS_PROGRAM_RESET_3 => MS_PROGRAM_RESET_3,
		PS_E_CYCLE_REQUIRED => PS_E_CYCLE_REQUIRED,
		PS_E_CH_UNOVLP_IN_PROCESS => PS_E_CH_UNOVLP_IN_PROCESS,
		PS_F_CYCLE_REQUIRED => PS_F_CYCLE_REQUIRED,
		PS_F_CH_UNOVLP_IN_PROCESS => PS_F_CH_UNOVLP_IN_PROCESS,
		PS_COMP_DISABLE_CYCLE => PS_COMP_DISABLE_CYCLE,
		PS_LAST_LOGIC_GATE_1 => PS_LAST_LOGIC_GATE_1,
		PS_LOGIC_GATE_A_1 => PS_LOGIC_GATE_A_1,
		PS_LOGIC_GATE_A_CONTROL => PS_LOGIC_GATE_A_CONTROL,
		MS_LOGIC_GATE_A_1 => MS_LOGIC_GATE_A_1,
		PS_LOGIC_GATE_B_1 => PS_LOGIC_GATE_B_1,
		MS_LOGIC_GATE_B_1 => MS_LOGIC_GATE_B_1,
		MS_LOGIC_GATE_C_1 => MS_LOGIC_GATE_C_1,
		PS_LOGIC_GATE_C_1 => PS_LOGIC_GATE_C_1,
		MS_LOGIC_GATE_D_1 => MS_LOGIC_GATE_D_1,
		PS_LOGIC_GATE_C_OR_D => PS_LOGIC_GATE_C_OR_D,
		PS_LOGIC_GATE_D_1 => PS_LOGIC_GATE_D_1,
		PS_LOGIC_GATE_E_1 => PS_LOGIC_GATE_E_1,
		PS_LOGIC_GATE_E_2 => PS_LOGIC_GATE_E_2,
		MS_LOGIC_GATE_E_1 => MS_LOGIC_GATE_E_1,
		MY_LOGIC_GATE_E => MY_LOGIC_GATE_E,
		PS_LOGIC_GATE_F_1 => PS_LOGIC_GATE_F_1,
		MY_LOGIC_GATE_F_1 => MY_LOGIC_GATE_F_1,
		MS_LOGIC_GATE_F_1 => MS_LOGIC_GATE_F_1,
		MS_LOGIC_GATE_G => MS_LOGIC_GATE_G,
		PS_LOGIC_GATE_G => PS_LOGIC_GATE_G,
		MS_LOGIC_GATE_H => MS_LOGIC_GATE_H,
		PS_LOGIC_GATE_H => PS_LOGIC_GATE_H,
		MS_LOGIC_GATE_J => MS_LOGIC_GATE_J,
		PS_LOGIC_GATE_J => PS_LOGIC_GATE_J,
		MS_LOGIC_GATE_K => MS_LOGIC_GATE_K,
		PS_LOGIC_GATE_K => PS_LOGIC_GATE_K,
		LAMP_15A1A06 => LAMP_15A1A06,
		LAMP_15A1B06 => LAMP_15A1B06,
		LAMP_15A1C06 => LAMP_15A1C06,
		LAMP_15A1D06 => LAMP_15A1D06,
		LAMP_15A1E06 => LAMP_15A1E06,
		LAMP_15A1F06 => LAMP_15A1F06,
		LAMP_15A1G06 => LAMP_15A1G06,
		LAMP_15A1H06 => LAMP_15A1H06,
		LAMP_15A1J06 => LAMP_15A1J06,
		LAMP_15A1K06 => LAMP_15A1K06);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START" and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 20 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

--
-- Stand in for the oscillator and assocaited logic
--

secondClockPulse: process
   constant oscillator_period: time := 666 ns;
   begin
      PS_LOGIC_RING_ON_ADVANCE_1 <= '1';
      PS_LOGIC_RING_OFF_ADVANCE_1 <= '1';
      wait for oscillator_period / 2;
      PS_LOGIC_RING_ON_ADVANCE_1 <= '0';
      PS_LOGIC_RING_OFF_ADVANCE_1 <= '0';
      wait for oscillator_period / 2;
   end process;

uut_process: process
   begin

   -- Your test bench code

   wait for 1 us;
   MS_PROGRAM_RESET_3 <= '0';
   wait for 1 us;
   MS_PROGRAM_RESET_3 <= '1';

   wait until PS_LOGIC_GATE_F_1 = '1';
   PS_LAST_LOGIC_GATE_1 <= '1';
   PS_LOGIC_GATE_Z <= '1';  
   MS_LOGIC_GATE_Z <= '0';
   wait until PS_LOGIC_RING_ON_ADVANCE_1 = '0';
   wait until PS_LOGIC_RING_ON_ADVANCE_1 = '1';
   wait until PS_LOGIC_RING_ON_ADVANCE_1 = '0';
   PS_LAST_LOGIC_GATE_1 <= '0';
   PS_LOGIC_GATE_Z <= '0';  
   MS_LOGIC_GATE_Z <= '1';

   wait until PS_LOGIC_GATE_H = '1';
   PS_LAST_LOGIC_GATE_1 <= '1';
   PS_LOGIC_GATE_Z <= '1';  
   MS_LOGIC_GATE_Z <= '0';
   wait until PS_LOGIC_RING_ON_ADVANCE_1 = '0';
   wait until PS_LOGIC_RING_ON_ADVANCE_1 = '1';
   wait until PS_LOGIC_RING_ON_ADVANCE_1 = '0';
   PS_LAST_LOGIC_GATE_1 <= '0';
   PS_LOGIC_GATE_Z <= '0';  
   MS_LOGIC_GATE_Z <= '1';

   wait until PS_LOGIC_GATE_J = '1';
   PS_LAST_LOGIC_GATE_1 <= '1';
   PS_LOGIC_GATE_Z <= '1';  
   MS_LOGIC_GATE_Z <= '0';
   wait until PS_LOGIC_RING_ON_ADVANCE_1 = '0';
   wait until PS_LOGIC_RING_ON_ADVANCE_1 = '1';
   wait until PS_LOGIC_RING_ON_ADVANCE_1 = '0';
   PS_LAST_LOGIC_GATE_1 <= '0';
   PS_LOGIC_GATE_Z <= '0';  
   MS_LOGIC_GATE_Z <= '1';

   wait until PS_LOGIC_GATE_K = '1';
   PS_LAST_LOGIC_GATE_1 <= '1';
   PS_LOGIC_GATE_Z <= '1';  
   MS_LOGIC_GATE_Z <= '0';
   wait until PS_LOGIC_RING_ON_ADVANCE_1 = '0';
   wait until PS_LOGIC_RING_ON_ADVANCE_1 = '1';
   wait until PS_LOGIC_RING_ON_ADVANCE_1 = '0';
   PS_LAST_LOGIC_GATE_1 <= '0';
   PS_LOGIC_GATE_Z <= '0';  
   MS_LOGIC_GATE_Z <= '1';

   wait;

   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended Normally" severity failure;
   end process;

-- END USER TEST BENCH PROCESS

END;
