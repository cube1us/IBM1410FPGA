-- Test Bench VHDL for IBM SMS ALD page 14.15.22.1
-- Title: ADDRESS EXIT CONTROLS
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 8/20/2020 4:28:39 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_14_15_22_1_ADDRESS_EXIT_CONTROLS_tb is
end ALD_14_15_22_1_ADDRESS_EXIT_CONTROLS_tb;

architecture behavioral of ALD_14_15_22_1_ADDRESS_EXIT_CONTROLS_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_14_15_22_1_ADDRESS_EXIT_CONTROLS
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY:	 in STD_LOGIC;
		PS_CONS_ADDR_REG_EXIT_GATE:	 in STD_LOGIC;
		PS_CONS_MX_Y1_POS:	 in STD_LOGIC;
		MS_REAL_TIME_CLOCK_0_DIGIT:	 in STD_LOGIC;
		PS_A_RING_6_TIME:	 in STD_LOGIC;
		PS_A_RING_OFF_TIME:	 in STD_LOGIC;
		MS_RTC_BUSY:	 in STD_LOGIC;
		MS_STORE_AR_SET_A_CYCLE_CTRL_A:	 in STD_LOGIC;
		MS_STORE_AR_SET_C_CYCLE_CTRL_B:	 in STD_LOGIC;
		MS_CONS_ADDR_REG_EXIT_GATE:	 in STD_LOGIC;
		PS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY:	 in STD_LOGIC;
		PS_RTC_BUSY:	 in STD_LOGIC;
		MS_ADDR_EXIT_0_INSERT:	 out STD_LOGIC;
		MS_RTC_BUSY_9_INSERT:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal MS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY: STD_LOGIC := '1';
	signal PS_CONS_ADDR_REG_EXIT_GATE: STD_LOGIC := '0';
	signal PS_CONS_MX_Y1_POS: STD_LOGIC := '0';
	signal MS_REAL_TIME_CLOCK_0_DIGIT: STD_LOGIC := '1';
	signal PS_A_RING_6_TIME: STD_LOGIC := '0';
	signal PS_A_RING_OFF_TIME: STD_LOGIC := '0';
	signal MS_RTC_BUSY: STD_LOGIC := '1';
	signal MS_STORE_AR_SET_A_CYCLE_CTRL_A: STD_LOGIC := '1';
	signal MS_STORE_AR_SET_C_CYCLE_CTRL_B: STD_LOGIC := '1';
	signal MS_CONS_ADDR_REG_EXIT_GATE: STD_LOGIC := '1';
	signal PS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY: STD_LOGIC := '0';
	signal PS_RTC_BUSY: STD_LOGIC := '0';

	-- Outputs

	signal MS_ADDR_EXIT_0_INSERT: STD_LOGIC;
	signal MS_RTC_BUSY_9_INSERT: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_14_15_22_1_ADDRESS_EXIT_CONTROLS port map(
		FPGA_CLK => FPGA_CLK,
		MS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY => MS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY,
		PS_CONS_ADDR_REG_EXIT_GATE => PS_CONS_ADDR_REG_EXIT_GATE,
		PS_CONS_MX_Y1_POS => PS_CONS_MX_Y1_POS,
		MS_REAL_TIME_CLOCK_0_DIGIT => MS_REAL_TIME_CLOCK_0_DIGIT,
		PS_A_RING_6_TIME => PS_A_RING_6_TIME,
		PS_A_RING_OFF_TIME => PS_A_RING_OFF_TIME,
		MS_RTC_BUSY => MS_RTC_BUSY,
		MS_STORE_AR_SET_A_CYCLE_CTRL_A => MS_STORE_AR_SET_A_CYCLE_CTRL_A,
		MS_STORE_AR_SET_C_CYCLE_CTRL_B => MS_STORE_AR_SET_C_CYCLE_CTRL_B,
		MS_CONS_ADDR_REG_EXIT_GATE => MS_CONS_ADDR_REG_EXIT_GATE,
		PS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY => PS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY,
		PS_RTC_BUSY => PS_RTC_BUSY,
		MS_ADDR_EXIT_0_INSERT => MS_ADDR_EXIT_0_INSERT,
		MS_RTC_BUSY_9_INSERT => MS_RTC_BUSY_9_INSERT);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code
   
   testName := "14.15.22.1        ";
   
   -- 1E
   
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'1',testName,"1A");
   MS_STORE_AR_SET_C_CYCLE_CTRL_B <= '0';
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'0',testName,"1B");
   MS_STORE_AR_SET_C_CYCLE_CTRL_B <= '1';
   
   -- 1C H input
   
   MS_CONS_ADDR_REG_EXIT_GATE <= '0';
   PS_A_RING_OFF_TIME <= '1';
   MS_STORE_AR_SET_C_CYCLE_CTRL_B <= '1';
   MS_STORE_AR_SET_A_CYCLE_CTRL_A <= '1';
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'1',testName,"2A");
   MS_CONS_ADDR_REG_EXIT_GATE <= '1';
   PS_A_RING_OFF_TIME <= '0';
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'1',testName,"2B");
   PS_A_RING_OFF_TIME <= '1';
   MS_STORE_AR_SET_C_CYCLE_CTRL_B <= '1'; -- Has to stay at 1 in this test
   MS_STORE_AR_SET_A_CYCLE_CTRL_A <= '0';
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'1',testName,"2C");
   MS_STORE_AR_SET_A_CYCLE_CTRL_A <= '1';
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'0',testName,"2D");
   MS_CONS_ADDR_REG_EXIT_GATE <= '1';
   PS_A_RING_OFF_TIME <= '0';
   MS_STORE_AR_SET_C_CYCLE_CTRL_B <= '1';
   MS_STORE_AR_SET_A_CYCLE_CTRL_A <= '1';
   
   -- 1C G Input
   
   MS_RTC_BUSY <= '0';
   MS_CONS_ADDR_REG_EXIT_GATE <= '1';
   PS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY <= '1';
   MS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY <= '0'; -- Needed for this test
   PS_A_RING_6_TIME <= '1';
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'1',testName,"3A");
   MS_RTC_BUSY <= '1';
   MS_CONS_ADDR_REG_EXIT_GATE <= '0';
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'1',testName,"3B");
   MS_CONS_ADDR_REG_EXIT_GATE <= '1';
   PS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY <= '0';
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'1',testName,"3C");
   PS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY <= '1';
   PS_A_RING_6_TIME <= '0';
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'1',testName,"3D");
   PS_A_RING_6_TIME <= '1';
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'0',testName,"3E");
   PS_A_RING_6_TIME <= '0';
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'1',testName,"3E");

   -- 1C E input

   MS_RTC_BUSY <= '1';
   MS_CONS_ADDR_REG_EXIT_GATE <= '1';
   PS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY <= '0';
   MS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY <= '1';
   PS_A_RING_6_TIME <= '0';
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'1',testName,"4A");
   MS_REAL_TIME_CLOCK_0_DIGIT <= '0';
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'0',testName,"4B");
   MS_REAL_TIME_CLOCK_0_DIGIT <= '1';
   
   -- 1B H input
   
   PS_CONS_ADDR_REG_EXIT_GATE <= '0';
   PS_CONS_MX_Y1_POS <= '1';
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'1',testName,"5A");
   PS_CONS_ADDR_REG_EXIT_GATE <= '1';
   PS_CONS_MX_Y1_POS <= '0';
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'1',testName,"5B");
   PS_CONS_MX_Y1_POS <= '1';
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'0',testName,"5C");
   PS_CONS_MX_Y1_POS <= '0';

   -- 1B A Input
   
   PS_A_RING_6_TIME <= '0';
   MS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY <= '1';
   MS_CONS_ADDR_REG_EXIT_GATE <= '1';
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'1',testName,"6A");
   PS_A_RING_6_TIME <= '1';
   MS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY <= '0';
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'1',testName,"6B");
   MS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY <= '1';
   MS_CONS_ADDR_REG_EXIT_GATE <= '0';
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'1',testName,"6C");
   MS_CONS_ADDR_REG_EXIT_GATE <= '1';
   wait for 30 ns;
   check1(MS_ADDR_EXIT_0_INSERT,'0',testName,"6D");
   PS_A_RING_6_TIME <= '0';
   MS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY <= '1';
   MS_CONS_ADDR_REG_EXIT_GATE <= '1';
   
   PS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY <= '0';
   PS_RTC_BUSY <= '1';
   MS_CONS_ADDR_REG_EXIT_GATE <= '1';
   wait for 30 ns;
   check1(MS_RTC_BUSY_9_INSERT,'1',testName,"7A");
   PS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY <= '1';
   PS_RTC_BUSY <= '0';
   wait for 30 ns;
   check1(MS_RTC_BUSY_9_INSERT,'1',testName,"7B");
   PS_RTC_BUSY <= '1';
   MS_CONS_ADDR_REG_EXIT_GATE <= '0';
   wait for 30 ns;
   check1(MS_RTC_BUSY_9_INSERT,'1',testName,"7C");
   MS_CONS_ADDR_REG_EXIT_GATE <= '1';
   wait for 30 ns;
   check1(MS_RTC_BUSY_9_INSERT,'0',testName,"7D");
   PS_STORE_ADDR_REGS_OP_DOT_T_DOT_C_CY <= '0';
   PS_RTC_BUSY <= '1';
   MS_CONS_ADDR_REG_EXIT_GATE <= '1';
   wait for 30 ns;
   

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

end;
