-- VHDL for IBM SMS ALD page 13.13.04.1
-- Title: COMMON OP DECODE
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 7/24/2020 10:57:33 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_13_13_04_1_COMMON_OP_DECODE is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_OP_DCDR_NOT_B_DOT_A_DOT_8_B:	 in STD_LOGIC;
		PS_OP_DCDR_NOT_4_DOT_2_DOT_1_B:	 in STD_LOGIC;
		PS_OP_DCDR_B_DOT_A_DOT_8_B:	 in STD_LOGIC;
		PS_OP_REG_COM_NOT_C_BIT:	 in STD_LOGIC;
		PS_OP_DCDR_4_DOT_NOT_2_DOT_NOT_1_B:	 in STD_LOGIC;
		PS_OP_DCDR_NOT_4_DOT_NOT_2_DOT_1_B:	 in STD_LOGIC;
		PS_OP_DCDR_NOT_B_DOT_A_DOT_NOT_8_B:	 in STD_LOGIC;
		PS_OP_REG_COM_C_BIT:	 in STD_LOGIC;
		PS_SET_WORD_MARK_OP_CODE:	 out STD_LOGIC;
		MS_SET_WORD_MARK_OP_CODE:	 out STD_LOGIC;
		PS_CLEAR_WORD_MARK_OP_CODE:	 out STD_LOGIC;
		MS_CLEAR_WORD_MARK_OP_CODE:	 out STD_LOGIC;
		PS_STOP_DOT_BRANCH_OP_CODE:	 out STD_LOGIC;
		MS_STOP_DOT_BRANCH_OP_CODE:	 out STD_LOGIC;
		PS_CLEAR_OP_CODE:	 out STD_LOGIC;
		MS_CLEAR_OP_CODE:	 out STD_LOGIC;
		PS_UNIT_CTRL_OP_CODE:	 out STD_LOGIC;
		MS_UNIT_CTRL_OP_CODE:	 out STD_LOGIC);
end ALD_13_13_04_1_COMMON_OP_DECODE;

architecture behavioral of ALD_13_13_04_1_COMMON_OP_DECODE is 

	signal OUT_4A_E: STD_LOGIC;
	signal OUT_2A_G: STD_LOGIC;
	signal OUT_4B_D: STD_LOGIC;
	signal OUT_2B_C: STD_LOGIC;
	signal OUT_4C_NoPin: STD_LOGIC;
	signal OUT_2C_R: STD_LOGIC;
	signal OUT_1D_K: STD_LOGIC;
	signal OUT_4E_E: STD_LOGIC;
	signal OUT_2E_A: STD_LOGIC;
	signal OUT_1F_K: STD_LOGIC;
	signal OUT_4G_E: STD_LOGIC;
	signal OUT_2G_A: STD_LOGIC;
	signal OUT_1I_K: STD_LOGIC;

begin

	OUT_4A_E <= NOT(PS_OP_REG_COM_C_BIT AND PS_OP_DCDR_NOT_B_DOT_A_DOT_8_B AND PS_OP_DCDR_NOT_4_DOT_2_DOT_1_B );
	OUT_2A_G <= NOT(OUT_4A_E );
	OUT_4B_D <= NOT(PS_OP_REG_COM_C_BIT AND PS_OP_DCDR_4_DOT_NOT_2_DOT_NOT_1_B AND PS_OP_DCDR_B_DOT_A_DOT_8_B );
	OUT_2B_C <= NOT(OUT_4B_D );
	OUT_4C_NoPin <= NOT(PS_OP_DCDR_B_DOT_A_DOT_8_B AND PS_OP_DCDR_NOT_4_DOT_2_DOT_1_B AND PS_OP_REG_COM_NOT_C_BIT );
	OUT_2C_R <= NOT OUT_4C_NoPin;
	OUT_1D_K <= NOT OUT_2C_R;
	OUT_4E_E <= NOT(PS_OP_DCDR_NOT_4_DOT_NOT_2_DOT_1_B AND PS_OP_REG_COM_C_BIT AND PS_OP_DCDR_NOT_B_DOT_A_DOT_NOT_8_B );

	SMS_AEK_2E: entity SMS_AEK
	    port map (
		IN1 => OUT_4E_E,	-- Pin F
		OUT1 => OUT_2E_A,
		IN2 => OPEN );

	OUT_1F_K <= NOT OUT_2E_A;
	OUT_4G_E <= NOT(PS_OP_DCDR_NOT_B_DOT_A_DOT_NOT_8_B AND PS_OP_DCDR_4_DOT_NOT_2_DOT_NOT_1_B AND PS_OP_REG_COM_C_BIT );

	SMS_AEK_2G: entity SMS_AEK
	    port map (
		IN1 => OUT_4G_E,	-- Pin F
		OUT1 => OUT_2G_A,
		IN2 => OPEN );

	OUT_1I_K <= NOT OUT_2G_A;

	MS_SET_WORD_MARK_OP_CODE <= OUT_4A_E;
	PS_SET_WORD_MARK_OP_CODE <= OUT_2A_G;
	MS_CLEAR_WORD_MARK_OP_CODE <= OUT_4B_D;
	PS_CLEAR_WORD_MARK_OP_CODE <= OUT_2B_C;
	PS_STOP_DOT_BRANCH_OP_CODE <= OUT_2C_R;
	MS_STOP_DOT_BRANCH_OP_CODE <= OUT_1D_K;
	PS_CLEAR_OP_CODE <= OUT_2E_A;
	MS_CLEAR_OP_CODE <= OUT_1F_K;
	PS_UNIT_CTRL_OP_CODE <= OUT_2G_A;
	MS_UNIT_CTRL_OP_CODE <= OUT_1I_K;


end;
