-- VHDL for IBM SMS ALD page 16.17.01.1
-- Title: ADD ZONES GROUPING A BITS-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/2/2020 7:57:37 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_16_17_01_1_ADD_ZONES_GROUPING_A_BITS_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_ZONE_ADDER_A_DOT_NOT_B_DOT_NOT_C_1:	 in STD_LOGIC;
		MS_ZONE_ADDER_A_DOT_NOT_B_DOT_NOT_C_2:	 in STD_LOGIC;
		MS_ZONE_ADDER_A_DOT_B_DOT_C_2:	 in STD_LOGIC;
		MS_ZONE_ADDER_A_DOT_B_DOT_C_1:	 in STD_LOGIC;
		MS_A_CH_PLUS_SIGN_GATED:	 in STD_LOGIC;
		MS_ZONE_ADDER_NOT_A_DOT_B_DOT_NOT_C_1:	 in STD_LOGIC;
		MS_ZONE_ADDER_NOT_A_DOT_NOT_B_DOT_C_1:	 in STD_LOGIC;
		MS_ZONE_ADDER_NOT_A_DOT_B_DOT_NOT_C_2:	 in STD_LOGIC;
		MS_ZONE_ADDER_NOT_A_DOT_NOT_B_DOT_C_2:	 in STD_LOGIC;
		MS_MINUS_SIGN_GATED:	 in STD_LOGIC;
		MS_A_CH_INV_PLUS_SIGN_GATED:	 in STD_LOGIC;
		MS_A_CH_MINUS_SIGN_GATED:	 in STD_LOGIC;
		PS_ASM_CH_A_BIT_STAR_ADDER_ZONES:	 out STD_LOGIC;
		PS_ASM_CH_NOT_A_BIT_STAR_ADDER_ZONES:	 out STD_LOGIC);
end ALD_16_17_01_1_ADD_ZONES_GROUPING_A_BITS_ACC;

architecture behavioral of ALD_16_17_01_1_ADD_ZONES_GROUPING_A_BITS_ACC is 

	signal OUT_3B_D: STD_LOGIC;
	signal OUT_3C_P: STD_LOGIC;
	signal OUT_3D_C: STD_LOGIC;
	signal OUT_3E_C: STD_LOGIC;
	signal OUT_3F_C: STD_LOGIC;
	signal OUT_3G_B: STD_LOGIC;
	signal OUT_DOT_1B: STD_LOGIC;
	signal OUT_DOT_1E: STD_LOGIC;

begin

	OUT_3B_D <= NOT(MS_ZONE_ADDER_A_DOT_NOT_B_DOT_NOT_C_1 AND MS_ZONE_ADDER_A_DOT_NOT_B_DOT_NOT_C_2 );
	OUT_3C_P <= NOT(MS_ZONE_ADDER_A_DOT_B_DOT_C_2 AND MS_ZONE_ADDER_A_DOT_B_DOT_C_1 );
	OUT_3D_C <= NOT(MS_A_CH_PLUS_SIGN_GATED );
	OUT_3E_C <= NOT(MS_ZONE_ADDER_NOT_A_DOT_B_DOT_NOT_C_1 AND MS_ZONE_ADDER_NOT_A_DOT_NOT_B_DOT_C_1 AND MS_ZONE_ADDER_NOT_A_DOT_B_DOT_NOT_C_2 );
	OUT_3F_C <= NOT(MS_ZONE_ADDER_NOT_A_DOT_NOT_B_DOT_C_2 AND MS_MINUS_SIGN_GATED AND MS_A_CH_INV_PLUS_SIGN_GATED );
	OUT_3G_B <= NOT(MS_A_CH_MINUS_SIGN_GATED );
	OUT_DOT_1B <= OUT_3B_D OR OUT_3C_P OR OUT_3D_C;
	OUT_DOT_1E <= OUT_3E_C OR OUT_3F_C OR OUT_3G_B;

	PS_ASM_CH_A_BIT_STAR_ADDER_ZONES <= OUT_DOT_1B;
	PS_ASM_CH_NOT_A_BIT_STAR_ADDER_ZONES <= OUT_DOT_1E;


end;
