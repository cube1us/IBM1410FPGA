-- VHDL for IBM SMS ALD page 13.65.02.1
-- Title: 1401 ERROR LATCHES ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 8/5/2020 12:59:12 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_13_65_02_1_1401_ERROR_LATCHES_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_E_CH_WLR_STAR_1311_1401:	 in STD_LOGIC;
		PS_FILE_OP:	 in STD_LOGIC;
		PS_I_RING_9_TIME:	 in STD_LOGIC;
		PS_FILE_OP_DOT_D_CY_DOT_EXTENSION:	 in STD_LOGIC;
		PS_E_CH_CHECK_BUS:	 in STD_LOGIC;
		PS_E_CH_SELECT_UNIT_F:	 in STD_LOGIC;
		MS_PROGRAM_RESET_2:	 in STD_LOGIC;
		PS_FILE_WRONG_LENGTH_ADDR_CON:	 in STD_LOGIC;
		PS_LOGIC_GATE_E_1:	 in STD_LOGIC;
		PS_E_CH_WRONG_LENGTH_REC_COND:	 in STD_LOGIC;
		PS_E_CH_STATUS_SAMPLE_B:	 in STD_LOGIC;
		MS_E_CH_READY_BUS:	 in STD_LOGIC;
		PS_E_CH_CONDITION_BUS:	 in STD_LOGIC;
		MC_FILE_INVALID_ADDRESS_1405:	 in STD_LOGIC;
		PS_E_CH_BUSY_BUS:	 in STD_LOGIC;
		PS_1401_MODE:	 in STD_LOGIC;
		PS_1401_FILE_VALIDITY_CK:	 out STD_LOGIC;
		PS_1401_FILE_WRONG_LENG_REC:	 out STD_LOGIC;
		PS_1401_FILE_ADDR_COMPARE:	 out STD_LOGIC;
		PS_FILE_INVALID_ADDRESS:	 out STD_LOGIC;
		PS_1401_ANY_FILE_CHECK:	 out STD_LOGIC;
		PS_FILE_BUSY_LATCH:	 out STD_LOGIC);
end ALD_13_65_02_1_1401_ERROR_LATCHES_ACC;

architecture behavioral of ALD_13_65_02_1_1401_ERROR_LATCHES_ACC is 

	signal OUT_5B_G: STD_LOGIC;
	signal OUT_3B_E: STD_LOGIC;
	signal OUT_3B_E_Latch: STD_LOGIC;
	signal OUT_1B_C: STD_LOGIC;
	signal OUT_1B_C_Latch: STD_LOGIC;
	signal OUT_5C_D: STD_LOGIC;
	signal OUT_3C_D: STD_LOGIC;
	signal OUT_1C_C: STD_LOGIC;
	signal OUT_3D_F: STD_LOGIC;
	signal OUT_3D_F_Latch: STD_LOGIC;
	signal OUT_1D_C: STD_LOGIC;
	signal OUT_1D_C_Latch: STD_LOGIC;
	signal OUT_5E_D: STD_LOGIC;
	signal OUT_5F_D: STD_LOGIC;
	signal OUT_3F_E: STD_LOGIC;
	signal OUT_3F_E_Latch: STD_LOGIC;
	signal OUT_1F_E: STD_LOGIC;
	signal OUT_1F_E_Latch: STD_LOGIC;
	signal OUT_5G_E: STD_LOGIC;
	signal OUT_3G_E: STD_LOGIC;
	signal OUT_3G_E_Latch: STD_LOGIC;
	signal OUT_2G_C: STD_LOGIC;
	signal OUT_2G_C_Latch: STD_LOGIC;
	signal OUT_5H_C: STD_LOGIC;
	signal OUT_4H_D: STD_LOGIC;
	signal OUT_3H_P: STD_LOGIC;
	signal OUT_2H_D: STD_LOGIC;
	signal OUT_2H_D_Latch: STD_LOGIC;
	signal OUT_1H_C: STD_LOGIC;
	signal OUT_5I_E: STD_LOGIC;
	signal OUT_4I_P: STD_LOGIC;
	signal OUT_3I_D: STD_LOGIC;
	signal OUT_3I_D_Latch: STD_LOGIC;
	signal OUT_DOT_1C: STD_LOGIC;
	signal OUT_DOT_1H: STD_LOGIC;
	signal OUT_DOT_2G: STD_LOGIC;
	signal OUT_DOT_4I: STD_LOGIC;

begin

	OUT_5B_G <= NOT(PS_FILE_OP AND PS_I_RING_9_TIME );
	OUT_3B_E_Latch <= NOT(OUT_5B_G AND MS_PROGRAM_RESET_2 AND OUT_1B_C );
	OUT_1B_C_Latch <= NOT(OUT_3B_E AND OUT_5C_D );
	OUT_5C_D <= NOT(PS_E_CH_CHECK_BUS AND PS_E_CH_SELECT_UNIT_F AND PS_E_CH_STATUS_SAMPLE_B );
	OUT_3C_D <= NOT(PS_FILE_OP_DOT_D_CY_DOT_EXTENSION AND PS_FILE_WRONG_LENGTH_ADDR_CON AND PS_LOGIC_GATE_E_1 );
	OUT_1C_C <= NOT(OUT_3C_D );
	OUT_3D_F_Latch <= NOT(OUT_5B_G AND OUT_DOT_1C AND MS_PROGRAM_RESET_2 );
	OUT_1D_C_Latch <= NOT(OUT_3D_F AND OUT_5E_D );
	OUT_5E_D <= NOT(PS_E_CH_WRONG_LENGTH_REC_COND AND PS_E_CH_SELECT_UNIT_F AND PS_E_CH_STATUS_SAMPLE_B );
	OUT_5F_D <= NOT(MS_E_CH_READY_BUS AND PS_E_CH_STATUS_SAMPLE_B AND PS_E_CH_SELECT_UNIT_F );
	OUT_3F_E_Latch <= NOT(OUT_5B_G AND MS_PROGRAM_RESET_2 AND OUT_1F_E );
	OUT_1F_E_Latch <= NOT(OUT_3F_E AND OUT_5G_E );
	OUT_5G_E <= NOT(PS_E_CH_STATUS_SAMPLE_B AND PS_E_CH_CONDITION_BUS AND PS_E_CH_SELECT_UNIT_F );
	OUT_3G_E_Latch <= NOT(OUT_5B_G AND MS_PROGRAM_RESET_2 AND OUT_DOT_2G );
	OUT_2G_C_Latch <= NOT(OUT_5F_D AND OUT_3G_E );
	OUT_5H_C <= NOT(MC_FILE_INVALID_ADDRESS_1405 );
	OUT_4H_D <= NOT OUT_DOT_2G;
	OUT_3H_P <= NOT(OUT_4H_D AND OUT_3I_D );
	OUT_2H_D_Latch <= NOT(OUT_3I_D AND OUT_DOT_4I );
	OUT_1H_C <= NOT(OUT_3B_E AND OUT_3D_F AND OUT_3F_E );
	OUT_5I_E <= NOT(PS_1401_MODE AND PS_E_CH_STATUS_SAMPLE_B );
	OUT_4I_P <= NOT(PS_E_CH_SELECT_UNIT_F AND PS_E_CH_BUSY_BUS );
	OUT_3I_D_Latch <= NOT(OUT_5B_G AND OUT_2H_D AND MS_PROGRAM_RESET_2 );
	OUT_DOT_1C <= OUT_1C_C OR OUT_1D_C;
	OUT_DOT_1H <= OUT_3H_P OR OUT_1H_C;
	OUT_DOT_2G <= OUT_2G_C OR OUT_5H_C;
	OUT_DOT_4I <= OUT_5I_E OR OUT_4I_P;

	PS_1401_FILE_VALIDITY_CK <= OUT_1B_C;
	PS_1401_FILE_ADDR_COMPARE <= OUT_1F_E;
	PS_FILE_BUSY_LATCH <= OUT_2H_D;
	PS_1401_FILE_WRONG_LENG_REC <= OUT_DOT_1C;
	PS_1401_ANY_FILE_CHECK <= OUT_DOT_1H;
	PS_FILE_INVALID_ADDRESS <= OUT_DOT_2G;

	Latch_3B: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3B_E_Latch,
		Q => OUT_3B_E,
		QBar => OPEN );

	Latch_1B: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_1B_C_Latch,
		Q => OUT_1B_C,
		QBar => OPEN );

	Latch_3D: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3D_F_Latch,
		Q => OUT_3D_F,
		QBar => OPEN );

	Latch_1D: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_1D_C_Latch,
		Q => OUT_1D_C,
		QBar => OPEN );

	Latch_3F: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3F_E_Latch,
		Q => OUT_3F_E,
		QBar => OPEN );

	Latch_1F: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_1F_E_Latch,
		Q => OUT_1F_E,
		QBar => OPEN );

	Latch_3G: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3G_E_Latch,
		Q => OUT_3G_E,
		QBar => OPEN );

	Latch_2G: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2G_C_Latch,
		Q => OUT_2G_C,
		QBar => OPEN );

	Latch_2H: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2H_D_Latch,
		Q => OUT_2H_D,
		QBar => OPEN );

	Latch_3I: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3I_D_Latch,
		Q => OUT_3I_D,
		QBar => OPEN );


end;
