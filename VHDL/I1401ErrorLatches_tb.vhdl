-- Test BenchVHDL for IBM SMS ALD group I1401ErrorLatches
-- Title: I1401ErrorLatches
-- IBM Machine Name 1411
-- Generated by GenerateHDL on 8/6/2020 12:38:07 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity I1401ErrorLatches_tb is
end I1401ErrorLatches_tb;

architecture behavioral of I1401ErrorLatches_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component I1401ErrorLatches
	    Port (
		FPGA_CLK: in STD_LOGIC;
		MS_RESET_READER_ERROR_LATCH: in STD_LOGIC;
		PS_E_CH_CHECK_BUS: in STD_LOGIC;
		MS_PROGRAM_RESET_2: in STD_LOGIC;
		MV_1401_MODE: in STD_LOGIC;
		PS_1401_READ_TRIGGER: in STD_LOGIC;
		PS_E_CH_STATUS_SAMPLE_B: in STD_LOGIC;
		PS_LOGIC_GATE_E_1: in STD_LOGIC;
		MS_E_CH_READY_BUS: in STD_LOGIC;
		PS_E_CH_BUSY_BUS: in STD_LOGIC;
		PS_E_CH_CONDITION_BUS: in STD_LOGIC;
		PS_1401_MODE: in STD_LOGIC;
		PS_E_CH_SELECT_UNIT_F: in STD_LOGIC;
		PS_E_CH_WRONG_LENGTH_REC_COND: in STD_LOGIC;
		PS_FILE_WRONG_LENGTH_ADDR_CON: in STD_LOGIC;
		PS_E_CH_WLR_STAR_1311_1401: in STD_LOGIC;
		PS_FILE_OP: in STD_LOGIC;
		PS_FILE_OP_DOT_D_CY_DOT_EXTENSION: in STD_LOGIC;
		MC_FILE_INVALID_ADDRESS_1405: in STD_LOGIC;
		MS_RESET_PROCESS_CK_LAT: in STD_LOGIC;
		MS_MASTER_ERROR: in STD_LOGIC;
		PS_I_RING_HDL_BUS: in STD_LOGIC_VECTOR (12 downTo 0);
		SWITCH_MOM_IO_CHK_RST: in STD_LOGIC;
		PS_1401_READ_ERROR: out STD_LOGIC;
		MS_1401_I_O_CHECK_RESET: out STD_LOGIC;
		PS_FILE_INVALID_ADDRESS: out STD_LOGIC;
		PS_1401_FILE_VALIDITY_CK: out STD_LOGIC;
		PS_1401_FILE_WRONG_LENG_REC: out STD_LOGIC;
		PS_1401_FILE_ADDR_COMPARE: out STD_LOGIC;
		PS_1401_ANY_FILE_CHECK: out STD_LOGIC;
		PS_FILE_BUSY_LATCH: out STD_LOGIC;
		PS_1401_PROCESS_CHECK: out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal MS_RESET_READER_ERROR_LATCH: STD_LOGIC := '1';
	signal PS_E_CH_CHECK_BUS: STD_LOGIC := '0';
	signal MS_PROGRAM_RESET_2: STD_LOGIC := '1';
	signal MV_1401_MODE: STD_LOGIC := '1';
	signal PS_1401_READ_TRIGGER: STD_LOGIC := '0';
	signal PS_E_CH_STATUS_SAMPLE_B: STD_LOGIC := '0';
	signal PS_LOGIC_GATE_E_1: STD_LOGIC := '0';
	signal MS_E_CH_READY_BUS: STD_LOGIC := '1';
	signal PS_E_CH_BUSY_BUS: STD_LOGIC := '0';
	signal PS_E_CH_CONDITION_BUS: STD_LOGIC := '0';
	signal PS_1401_MODE: STD_LOGIC := '0';
	signal PS_E_CH_SELECT_UNIT_F: STD_LOGIC := '0';
	signal PS_E_CH_WRONG_LENGTH_REC_COND: STD_LOGIC := '0';
	signal PS_FILE_WRONG_LENGTH_ADDR_CON: STD_LOGIC := '0';
	signal PS_E_CH_WLR_STAR_1311_1401: STD_LOGIC := '0';
	signal PS_FILE_OP: STD_LOGIC := '0';
	signal PS_FILE_OP_DOT_D_CY_DOT_EXTENSION: STD_LOGIC := '0';
	signal MC_FILE_INVALID_ADDRESS_1405: STD_LOGIC := '1';
	signal MS_RESET_PROCESS_CK_LAT: STD_LOGIC := '1';
	signal MS_MASTER_ERROR: STD_LOGIC := '1';
	signal PS_I_RING_HDL_BUS: STD_LOGIC_VECTOR (12 downTo 0) := "0000000000000";
	signal SWITCH_MOM_IO_CHK_RST: STD_LOGIC := '0';

	-- Outputs

	signal PS_1401_READ_ERROR: STD_LOGIC;
	signal MS_1401_I_O_CHECK_RESET: STD_LOGIC;
	signal PS_FILE_INVALID_ADDRESS: STD_LOGIC;
	signal PS_1401_FILE_VALIDITY_CK: STD_LOGIC;
	signal PS_1401_FILE_WRONG_LENG_REC: STD_LOGIC;
	signal PS_1401_FILE_ADDR_COMPARE: STD_LOGIC;
	signal PS_1401_ANY_FILE_CHECK: STD_LOGIC;
	signal PS_FILE_BUSY_LATCH: STD_LOGIC;
	signal PS_1401_PROCESS_CHECK: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: I1401ErrorLatches port map(
		FPGA_CLK => FPGA_CLK,
		MS_RESET_READER_ERROR_LATCH => MS_RESET_READER_ERROR_LATCH,
		PS_E_CH_CHECK_BUS => PS_E_CH_CHECK_BUS,
		MS_PROGRAM_RESET_2 => MS_PROGRAM_RESET_2,
		MV_1401_MODE => MV_1401_MODE,
		PS_1401_READ_TRIGGER => PS_1401_READ_TRIGGER,
		PS_E_CH_STATUS_SAMPLE_B => PS_E_CH_STATUS_SAMPLE_B,
		PS_LOGIC_GATE_E_1 => PS_LOGIC_GATE_E_1,
		MS_E_CH_READY_BUS => MS_E_CH_READY_BUS,
		PS_E_CH_BUSY_BUS => PS_E_CH_BUSY_BUS,
		PS_E_CH_CONDITION_BUS => PS_E_CH_CONDITION_BUS,
		PS_1401_MODE => PS_1401_MODE,
		PS_E_CH_SELECT_UNIT_F => PS_E_CH_SELECT_UNIT_F,
		PS_E_CH_WRONG_LENGTH_REC_COND => PS_E_CH_WRONG_LENGTH_REC_COND,
		PS_FILE_WRONG_LENGTH_ADDR_CON => PS_FILE_WRONG_LENGTH_ADDR_CON,
		PS_E_CH_WLR_STAR_1311_1401 => PS_E_CH_WLR_STAR_1311_1401,
		PS_FILE_OP => PS_FILE_OP,
		PS_FILE_OP_DOT_D_CY_DOT_EXTENSION => PS_FILE_OP_DOT_D_CY_DOT_EXTENSION,
		MC_FILE_INVALID_ADDRESS_1405 => MC_FILE_INVALID_ADDRESS_1405,
		MS_RESET_PROCESS_CK_LAT => MS_RESET_PROCESS_CK_LAT,
		MS_MASTER_ERROR => MS_MASTER_ERROR,
		PS_I_RING_HDL_BUS => PS_I_RING_HDL_BUS,
		SWITCH_MOM_IO_CHK_RST => SWITCH_MOM_IO_CHK_RST,
		PS_1401_READ_ERROR => PS_1401_READ_ERROR,
		MS_1401_I_O_CHECK_RESET => MS_1401_I_O_CHECK_RESET,
		PS_FILE_INVALID_ADDRESS => PS_FILE_INVALID_ADDRESS,
		PS_1401_FILE_VALIDITY_CK => PS_1401_FILE_VALIDITY_CK,
		PS_1401_FILE_WRONG_LENG_REC => PS_1401_FILE_WRONG_LENG_REC,
		PS_1401_FILE_ADDR_COMPARE => PS_1401_FILE_ADDR_COMPARE,
		PS_1401_ANY_FILE_CHECK => PS_1401_ANY_FILE_CHECK,
		PS_FILE_BUSY_LATCH => PS_FILE_BUSY_LATCH,
		PS_1401_PROCESS_CHECK => PS_1401_PROCESS_CHECK);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS

END;
