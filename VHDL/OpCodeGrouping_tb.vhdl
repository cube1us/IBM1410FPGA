-- Test BenchVHDL for IBM SMS ALD group OpCodeGrouping
-- Title: OpCodeGrouping
-- IBM Machine Name 1411
-- Generated by GenerateHDL on 7/25/2020 11:25:16 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity OpCodeGrouping_tb is
end OpCodeGrouping_tb;

architecture behavioral of OpCodeGrouping_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component OpCodeGrouping
	    Port (
		FPGA_CLK: in STD_LOGIC;
		MS_RESET_ADD_OP_CODE: in STD_LOGIC;
		MS_RESET_SUBT_OP_CODE: in STD_LOGIC;
		MS_ADD_OP_CODE: in STD_LOGIC;
		MS_SUBT_OP_CODE: in STD_LOGIC;
		MS_MPLY_OP_CODE: in STD_LOGIC;
		MS_DIV_OP_CODE: in STD_LOGIC;
		MS_1401_POUND_SIGN_OP_CODE: in STD_LOGIC;
		MS_EDIT_OP_CODE: in STD_LOGIC;
		MS_COMPARE_OP_CODE: in STD_LOGIC;
		MS_MOVE_ZERO_SUP_OP_CODE: in STD_LOGIC;
		MS_CLEAR_OP_CODE: in STD_LOGIC;
		MS_CHAR_TEST_BRANCH_OP_CODE: in STD_LOGIC;
		MS_TABLE_SEARCH_OP_CODE: in STD_LOGIC;
		MS_UNIT_CTRL_OP_CODE: in STD_LOGIC;
		MS_DATA_MOVE_OP_CODE: in STD_LOGIC;
		MS_I_O_MOVE_OP_CODE: in STD_LOGIC;
		MS_I_O_LOAD_OP_CODE: in STD_LOGIC;
		MS_STORE_ADDR_REGS_OP_CODE: in STD_LOGIC;
		MS_SET_WORD_MARK_OP_CODE: in STD_LOGIC;
		MS_CLEAR_WORD_MARK_OP_CODE: in STD_LOGIC;
		MS_1401_STORE_A_AR_OP_CODE: in STD_LOGIC;
		MS_1401_STORE_B_AR_OP_CODE: in STD_LOGIC;
		PS_A_CYCLE: in STD_LOGIC;
		MS_STOP_DOT_BRANCH_OP_CODE: in STD_LOGIC;
		MS_INTERRUPT_TEST_OP_CODE: in STD_LOGIC;
		MS_1401_CARD_OR_PRINT_OP_CODE: in STD_LOGIC;
		MS_COND_TEST_BRANCH_OP_CODE: in STD_LOGIC;
		MS_BRANCH_ON_STATUS_CH_1: in STD_LOGIC;
		MS_BRANCH_ON_STATUS_CH_2: in STD_LOGIC;
		MS_I_OR_O_OP_CODES_STAR_12_19: in STD_LOGIC;
		MS_BIT_TEST_BRANCH_OP_CODE: in STD_LOGIC;
		MS_ZN_OR_WM_TST_BRANCH_OP_CODE: in STD_LOGIC;
		MS_E_CH_STACKER_SEL_OP_CODE: in STD_LOGIC;
		MS_E_CH_FORMS_CTRL_OP_CODE: in STD_LOGIC;
		MS_E_CH_2_CHAR_OP_CODES_STAR_1414_STAR: in STD_LOGIC;
		PS_P_OR_Q_2_CHAR_OP_1412_19: in STD_LOGIC;
		PS_1401_MODE: in STD_LOGIC;
		MS_1401_MODE: in STD_LOGIC;
		MS_1401_M_OP_CODE: in STD_LOGIC;
		MS_1401_L_OP_CODE: in STD_LOGIC;
		PS_MPLY_OR_DIV_OP_CODES: out STD_LOGIC;
		PS_RESET_TYPE_OP_CODES: out STD_LOGIC;
		PS_ADD_OR_SUBT_OP_CODES: out STD_LOGIC;
		PS_ARITH_TYPE_OP_CODES: out STD_LOGIC;
		PS_ADD_TYPE_OP_CODES: out STD_LOGIC;
		PS_E_OR_Z_OP_CODES: out STD_LOGIC;
		PS_COMPARE_TYPE_OP_CODES: out STD_LOGIC;
		PS_NO_BRANCH_OP_CODES: out STD_LOGIC;
		PS_1401_STORE_AR_OP_CODES: out STD_LOGIC;
		PS_WORD_MARK_OP_CODES: out STD_LOGIC;
		PS_M_OR_L_OP_CODES: out STD_LOGIC;
		MS_1401_STORE_AR_OP_CODES: out STD_LOGIC;
		MS_STD_A_CYCLE_OPS_DOT_A_CYCLE: out STD_LOGIC;
		PS_A_CY_FIRST_OP_CODES: out STD_LOGIC;
		PS_1ST_SCAN_FIRST_OP_CODES: out STD_LOGIC;
		PS_B_CY_FIRST_OP_CODES: out STD_LOGIC;
		PS_A_REG_TO_A_CH_ON_B_CY_OPS: out STD_LOGIC;
		PS_OP_MOD_TO_A_CH_ON_B_CY_OPS: out STD_LOGIC;
		PS_STOP_AT_F_ON_B_CY_OPS: out STD_LOGIC;
		PS_STOP_AT_H_ON_B_CYCLE_OPS: out STD_LOGIC;
		PS_LOAD_MEM_ON_B_CY_OP_CODES: out STD_LOGIC;
		PS_REGEN_MEM_ON_B_CY_OP_CODES: out STD_LOGIC;
		PS_STOP_AT_F_ON_B_CY_OP_CODES: out STD_LOGIC;
		PS_STOP_AT_J_ON_B_CY_OP_CODES: out STD_LOGIC;
		PS_RO_B_AR_ON_SCAN_B_CY_OPS: out STD_LOGIC;
		PS_READ_OUT_AAR_ON_A_CY_OPS: out STD_LOGIC;
		PS_PERCENT_TYPE_OP_CODES: out STD_LOGIC;
		PS_1_ADDR_PLUS_MOD_OP_CODES: out STD_LOGIC;
		MS_NOT_PERCENT_TYPE_OP_CODES: out STD_LOGIC;
		MS_PERCENT_TYPE_OP_CODES: out STD_LOGIC;
		PS_NOT_PERCENT_TYPE_OP_CODES: out STD_LOGIC;
		MS_1_ADDR_PLUS_MOD_OP_CODES: out STD_LOGIC;
		PS_2_ADDR_NO_MOD_OP_CODES: out STD_LOGIC;
		PS_2_ADDR_PLUS_MOD_OP_CODES: out STD_LOGIC;
		PS_ADDR_TYPE_OP_CODES: out STD_LOGIC;
		PS_TWO_ADDRESS_OP_CODES: out STD_LOGIC;
		PS_2_CHAR_ONLY_OP_CODES: out STD_LOGIC;
		PS_NO_C_OR_D_CYCLE_OP_CODES: out STD_LOGIC;
		MS_TWO_ADDRESS_OP_CODES: out STD_LOGIC;
		PS_C_CYCLE_OP_CODES: out STD_LOGIC;
		MS_E_CH_2_CHAR_ONLY_OP_CODES: out STD_LOGIC;
		PS_E_CH_2_CHAR_ONLY_OP_CODES: out STD_LOGIC;
		PS_NO_D_CY_AT_I_RING_6_OPS: out STD_LOGIC;
		PS_NO_INDEX_ON_1ST_ADDR_OPS: out STD_LOGIC;
		PS_ADDR_DOUBLE_OP_CODES: out STD_LOGIC;
		MS_NOT_ADDR_DBL_OP_CODES: out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal MS_RESET_ADD_OP_CODE: STD_LOGIC := '1';
	signal MS_RESET_SUBT_OP_CODE: STD_LOGIC := '1';
	signal MS_ADD_OP_CODE: STD_LOGIC := '1';
	signal MS_SUBT_OP_CODE: STD_LOGIC := '1';
	signal MS_MPLY_OP_CODE: STD_LOGIC := '1';
	signal MS_DIV_OP_CODE: STD_LOGIC := '1';
	signal MS_1401_POUND_SIGN_OP_CODE: STD_LOGIC := '1';
	signal MS_EDIT_OP_CODE: STD_LOGIC := '1';
	signal MS_COMPARE_OP_CODE: STD_LOGIC := '1';
	signal MS_MOVE_ZERO_SUP_OP_CODE: STD_LOGIC := '1';
	signal MS_CLEAR_OP_CODE: STD_LOGIC := '1';
	signal MS_CHAR_TEST_BRANCH_OP_CODE: STD_LOGIC := '1';
	signal MS_TABLE_SEARCH_OP_CODE: STD_LOGIC := '1';
	signal MS_UNIT_CTRL_OP_CODE: STD_LOGIC := '1';
	signal MS_DATA_MOVE_OP_CODE: STD_LOGIC := '1';
	signal MS_I_O_MOVE_OP_CODE: STD_LOGIC := '1';
	signal MS_I_O_LOAD_OP_CODE: STD_LOGIC := '1';
	signal MS_STORE_ADDR_REGS_OP_CODE: STD_LOGIC := '1';
	signal MS_SET_WORD_MARK_OP_CODE: STD_LOGIC := '1';
	signal MS_CLEAR_WORD_MARK_OP_CODE: STD_LOGIC := '1';
	signal MS_1401_STORE_A_AR_OP_CODE: STD_LOGIC := '1';
	signal MS_1401_STORE_B_AR_OP_CODE: STD_LOGIC := '1';
	signal PS_A_CYCLE: STD_LOGIC := '0';
	signal MS_STOP_DOT_BRANCH_OP_CODE: STD_LOGIC := '1';
	signal MS_INTERRUPT_TEST_OP_CODE: STD_LOGIC := '1';
	signal MS_1401_CARD_OR_PRINT_OP_CODE: STD_LOGIC := '1';
	signal MS_COND_TEST_BRANCH_OP_CODE: STD_LOGIC := '1';
	signal MS_BRANCH_ON_STATUS_CH_1: STD_LOGIC := '1';
	signal MS_BRANCH_ON_STATUS_CH_2: STD_LOGIC := '1';
	signal MS_I_OR_O_OP_CODES_STAR_12_19: STD_LOGIC := '1';
	signal MS_BIT_TEST_BRANCH_OP_CODE: STD_LOGIC := '1';
	signal MS_ZN_OR_WM_TST_BRANCH_OP_CODE: STD_LOGIC := '1';
	signal MS_E_CH_STACKER_SEL_OP_CODE: STD_LOGIC := '1';
	signal MS_E_CH_FORMS_CTRL_OP_CODE: STD_LOGIC := '1';
	signal MS_E_CH_2_CHAR_OP_CODES_STAR_1414_STAR: STD_LOGIC := '1';
	signal PS_P_OR_Q_2_CHAR_OP_1412_19: STD_LOGIC := '0';
	signal PS_1401_MODE: STD_LOGIC := '0';
	signal MS_1401_MODE: STD_LOGIC := '1';
	signal MS_1401_M_OP_CODE: STD_LOGIC := '1';
	signal MS_1401_L_OP_CODE: STD_LOGIC := '1';

	-- Outputs

	signal PS_MPLY_OR_DIV_OP_CODES: STD_LOGIC;
	signal PS_RESET_TYPE_OP_CODES: STD_LOGIC;
	signal PS_ADD_OR_SUBT_OP_CODES: STD_LOGIC;
	signal PS_ARITH_TYPE_OP_CODES: STD_LOGIC;
	signal PS_ADD_TYPE_OP_CODES: STD_LOGIC;
	signal PS_E_OR_Z_OP_CODES: STD_LOGIC;
	signal PS_COMPARE_TYPE_OP_CODES: STD_LOGIC;
	signal PS_NO_BRANCH_OP_CODES: STD_LOGIC;
	signal PS_1401_STORE_AR_OP_CODES: STD_LOGIC;
	signal PS_WORD_MARK_OP_CODES: STD_LOGIC;
	signal PS_M_OR_L_OP_CODES: STD_LOGIC;
	signal MS_1401_STORE_AR_OP_CODES: STD_LOGIC;
	signal MS_STD_A_CYCLE_OPS_DOT_A_CYCLE: STD_LOGIC;
	signal PS_A_CY_FIRST_OP_CODES: STD_LOGIC;
	signal PS_1ST_SCAN_FIRST_OP_CODES: STD_LOGIC;
	signal PS_B_CY_FIRST_OP_CODES: STD_LOGIC;
	signal PS_A_REG_TO_A_CH_ON_B_CY_OPS: STD_LOGIC;
	signal PS_OP_MOD_TO_A_CH_ON_B_CY_OPS: STD_LOGIC;
	signal PS_STOP_AT_F_ON_B_CY_OPS: STD_LOGIC;
	signal PS_STOP_AT_H_ON_B_CYCLE_OPS: STD_LOGIC;
	signal PS_LOAD_MEM_ON_B_CY_OP_CODES: STD_LOGIC;
	signal PS_REGEN_MEM_ON_B_CY_OP_CODES: STD_LOGIC;
	signal PS_STOP_AT_F_ON_B_CY_OP_CODES: STD_LOGIC;
	signal PS_STOP_AT_J_ON_B_CY_OP_CODES: STD_LOGIC;
	signal PS_RO_B_AR_ON_SCAN_B_CY_OPS: STD_LOGIC;
	signal PS_READ_OUT_AAR_ON_A_CY_OPS: STD_LOGIC;
	signal PS_PERCENT_TYPE_OP_CODES: STD_LOGIC;
	signal PS_1_ADDR_PLUS_MOD_OP_CODES: STD_LOGIC;
	signal MS_NOT_PERCENT_TYPE_OP_CODES: STD_LOGIC;
	signal MS_PERCENT_TYPE_OP_CODES: STD_LOGIC;
	signal PS_NOT_PERCENT_TYPE_OP_CODES: STD_LOGIC;
	signal MS_1_ADDR_PLUS_MOD_OP_CODES: STD_LOGIC;
	signal PS_2_ADDR_NO_MOD_OP_CODES: STD_LOGIC;
	signal PS_2_ADDR_PLUS_MOD_OP_CODES: STD_LOGIC;
	signal PS_ADDR_TYPE_OP_CODES: STD_LOGIC;
	signal PS_TWO_ADDRESS_OP_CODES: STD_LOGIC;
	signal PS_2_CHAR_ONLY_OP_CODES: STD_LOGIC;
	signal PS_NO_C_OR_D_CYCLE_OP_CODES: STD_LOGIC;
	signal MS_TWO_ADDRESS_OP_CODES: STD_LOGIC;
	signal PS_C_CYCLE_OP_CODES: STD_LOGIC;
	signal MS_E_CH_2_CHAR_ONLY_OP_CODES: STD_LOGIC;
	signal PS_E_CH_2_CHAR_ONLY_OP_CODES: STD_LOGIC;
	signal PS_NO_D_CY_AT_I_RING_6_OPS: STD_LOGIC;
	signal PS_NO_INDEX_ON_1ST_ADDR_OPS: STD_LOGIC;
	signal PS_ADDR_DOUBLE_OP_CODES: STD_LOGIC;
	signal MS_NOT_ADDR_DBL_OP_CODES: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: OpCodeGrouping port map(
		FPGA_CLK => FPGA_CLK,
		MS_RESET_ADD_OP_CODE => MS_RESET_ADD_OP_CODE,
		MS_RESET_SUBT_OP_CODE => MS_RESET_SUBT_OP_CODE,
		MS_ADD_OP_CODE => MS_ADD_OP_CODE,
		MS_SUBT_OP_CODE => MS_SUBT_OP_CODE,
		MS_MPLY_OP_CODE => MS_MPLY_OP_CODE,
		MS_DIV_OP_CODE => MS_DIV_OP_CODE,
		MS_1401_POUND_SIGN_OP_CODE => MS_1401_POUND_SIGN_OP_CODE,
		MS_EDIT_OP_CODE => MS_EDIT_OP_CODE,
		MS_COMPARE_OP_CODE => MS_COMPARE_OP_CODE,
		MS_MOVE_ZERO_SUP_OP_CODE => MS_MOVE_ZERO_SUP_OP_CODE,
		MS_CLEAR_OP_CODE => MS_CLEAR_OP_CODE,
		MS_CHAR_TEST_BRANCH_OP_CODE => MS_CHAR_TEST_BRANCH_OP_CODE,
		MS_TABLE_SEARCH_OP_CODE => MS_TABLE_SEARCH_OP_CODE,
		MS_UNIT_CTRL_OP_CODE => MS_UNIT_CTRL_OP_CODE,
		MS_DATA_MOVE_OP_CODE => MS_DATA_MOVE_OP_CODE,
		MS_I_O_MOVE_OP_CODE => MS_I_O_MOVE_OP_CODE,
		MS_I_O_LOAD_OP_CODE => MS_I_O_LOAD_OP_CODE,
		MS_STORE_ADDR_REGS_OP_CODE => MS_STORE_ADDR_REGS_OP_CODE,
		MS_SET_WORD_MARK_OP_CODE => MS_SET_WORD_MARK_OP_CODE,
		MS_CLEAR_WORD_MARK_OP_CODE => MS_CLEAR_WORD_MARK_OP_CODE,
		MS_1401_STORE_A_AR_OP_CODE => MS_1401_STORE_A_AR_OP_CODE,
		MS_1401_STORE_B_AR_OP_CODE => MS_1401_STORE_B_AR_OP_CODE,
		PS_A_CYCLE => PS_A_CYCLE,
		MS_STOP_DOT_BRANCH_OP_CODE => MS_STOP_DOT_BRANCH_OP_CODE,
		MS_INTERRUPT_TEST_OP_CODE => MS_INTERRUPT_TEST_OP_CODE,
		MS_1401_CARD_OR_PRINT_OP_CODE => MS_1401_CARD_OR_PRINT_OP_CODE,
		MS_COND_TEST_BRANCH_OP_CODE => MS_COND_TEST_BRANCH_OP_CODE,
		MS_BRANCH_ON_STATUS_CH_1 => MS_BRANCH_ON_STATUS_CH_1,
		MS_BRANCH_ON_STATUS_CH_2 => MS_BRANCH_ON_STATUS_CH_2,
		MS_I_OR_O_OP_CODES_STAR_12_19 => MS_I_OR_O_OP_CODES_STAR_12_19,
		MS_BIT_TEST_BRANCH_OP_CODE => MS_BIT_TEST_BRANCH_OP_CODE,
		MS_ZN_OR_WM_TST_BRANCH_OP_CODE => MS_ZN_OR_WM_TST_BRANCH_OP_CODE,
		MS_E_CH_STACKER_SEL_OP_CODE => MS_E_CH_STACKER_SEL_OP_CODE,
		MS_E_CH_FORMS_CTRL_OP_CODE => MS_E_CH_FORMS_CTRL_OP_CODE,
		MS_E_CH_2_CHAR_OP_CODES_STAR_1414_STAR => MS_E_CH_2_CHAR_OP_CODES_STAR_1414_STAR,
		PS_P_OR_Q_2_CHAR_OP_1412_19 => PS_P_OR_Q_2_CHAR_OP_1412_19,
		PS_1401_MODE => PS_1401_MODE,
		MS_1401_MODE => MS_1401_MODE,
		MS_1401_M_OP_CODE => MS_1401_M_OP_CODE,
		MS_1401_L_OP_CODE => MS_1401_L_OP_CODE,
		PS_MPLY_OR_DIV_OP_CODES => PS_MPLY_OR_DIV_OP_CODES,
		PS_RESET_TYPE_OP_CODES => PS_RESET_TYPE_OP_CODES,
		PS_ADD_OR_SUBT_OP_CODES => PS_ADD_OR_SUBT_OP_CODES,
		PS_ARITH_TYPE_OP_CODES => PS_ARITH_TYPE_OP_CODES,
		PS_ADD_TYPE_OP_CODES => PS_ADD_TYPE_OP_CODES,
		PS_E_OR_Z_OP_CODES => PS_E_OR_Z_OP_CODES,
		PS_COMPARE_TYPE_OP_CODES => PS_COMPARE_TYPE_OP_CODES,
		PS_NO_BRANCH_OP_CODES => PS_NO_BRANCH_OP_CODES,
		PS_1401_STORE_AR_OP_CODES => PS_1401_STORE_AR_OP_CODES,
		PS_WORD_MARK_OP_CODES => PS_WORD_MARK_OP_CODES,
		PS_M_OR_L_OP_CODES => PS_M_OR_L_OP_CODES,
		MS_1401_STORE_AR_OP_CODES => MS_1401_STORE_AR_OP_CODES,
		MS_STD_A_CYCLE_OPS_DOT_A_CYCLE => MS_STD_A_CYCLE_OPS_DOT_A_CYCLE,
		PS_A_CY_FIRST_OP_CODES => PS_A_CY_FIRST_OP_CODES,
		PS_1ST_SCAN_FIRST_OP_CODES => PS_1ST_SCAN_FIRST_OP_CODES,
		PS_B_CY_FIRST_OP_CODES => PS_B_CY_FIRST_OP_CODES,
		PS_A_REG_TO_A_CH_ON_B_CY_OPS => PS_A_REG_TO_A_CH_ON_B_CY_OPS,
		PS_OP_MOD_TO_A_CH_ON_B_CY_OPS => PS_OP_MOD_TO_A_CH_ON_B_CY_OPS,
		PS_STOP_AT_F_ON_B_CY_OPS => PS_STOP_AT_F_ON_B_CY_OPS,
		PS_STOP_AT_H_ON_B_CYCLE_OPS => PS_STOP_AT_H_ON_B_CYCLE_OPS,
		PS_LOAD_MEM_ON_B_CY_OP_CODES => PS_LOAD_MEM_ON_B_CY_OP_CODES,
		PS_REGEN_MEM_ON_B_CY_OP_CODES => PS_REGEN_MEM_ON_B_CY_OP_CODES,
		PS_STOP_AT_F_ON_B_CY_OP_CODES => PS_STOP_AT_F_ON_B_CY_OP_CODES,
		PS_STOP_AT_J_ON_B_CY_OP_CODES => PS_STOP_AT_J_ON_B_CY_OP_CODES,
		PS_RO_B_AR_ON_SCAN_B_CY_OPS => PS_RO_B_AR_ON_SCAN_B_CY_OPS,
		PS_READ_OUT_AAR_ON_A_CY_OPS => PS_READ_OUT_AAR_ON_A_CY_OPS,
		PS_PERCENT_TYPE_OP_CODES => PS_PERCENT_TYPE_OP_CODES,
		PS_1_ADDR_PLUS_MOD_OP_CODES => PS_1_ADDR_PLUS_MOD_OP_CODES,
		MS_NOT_PERCENT_TYPE_OP_CODES => MS_NOT_PERCENT_TYPE_OP_CODES,
		MS_PERCENT_TYPE_OP_CODES => MS_PERCENT_TYPE_OP_CODES,
		PS_NOT_PERCENT_TYPE_OP_CODES => PS_NOT_PERCENT_TYPE_OP_CODES,
		MS_1_ADDR_PLUS_MOD_OP_CODES => MS_1_ADDR_PLUS_MOD_OP_CODES,
		PS_2_ADDR_NO_MOD_OP_CODES => PS_2_ADDR_NO_MOD_OP_CODES,
		PS_2_ADDR_PLUS_MOD_OP_CODES => PS_2_ADDR_PLUS_MOD_OP_CODES,
		PS_ADDR_TYPE_OP_CODES => PS_ADDR_TYPE_OP_CODES,
		PS_TWO_ADDRESS_OP_CODES => PS_TWO_ADDRESS_OP_CODES,
		PS_2_CHAR_ONLY_OP_CODES => PS_2_CHAR_ONLY_OP_CODES,
		PS_NO_C_OR_D_CYCLE_OP_CODES => PS_NO_C_OR_D_CYCLE_OP_CODES,
		MS_TWO_ADDRESS_OP_CODES => MS_TWO_ADDRESS_OP_CODES,
		PS_C_CYCLE_OP_CODES => PS_C_CYCLE_OP_CODES,
		MS_E_CH_2_CHAR_ONLY_OP_CODES => MS_E_CH_2_CHAR_ONLY_OP_CODES,
		PS_E_CH_2_CHAR_ONLY_OP_CODES => PS_E_CH_2_CHAR_ONLY_OP_CODES,
		PS_NO_D_CY_AT_I_RING_6_OPS => PS_NO_D_CY_AT_I_RING_6_OPS,
		PS_NO_INDEX_ON_1ST_ADDR_OPS => PS_NO_INDEX_ON_1ST_ADDR_OPS,
		PS_ADDR_DOUBLE_OP_CODES => PS_ADDR_DOUBLE_OP_CODES,
		MS_NOT_ADDR_DBL_OP_CODES => MS_NOT_ADDR_DBL_OP_CODES);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code
   
   testName := "13.14.01.1, 02.1  ";
   
   wait for 30 ns;
   check1(PS_RESET_TYPE_OP_CODES,'0',testName,"SA");
   check1(PS_ADD_OR_SUBT_OP_CODES,'0',testName,"SB");
   check1(PS_MPLY_OR_DIV_OP_CODES,'0',testName,"SC");
   check1(PS_ADD_TYPE_OP_CODES,'0',testName,"SD");
   check1(PS_ARITH_TYPE_OP_CODES,'0',testName,"SE");

   MS_RESET_SUBT_OP_CODE <= '0';
   wait for 30 ns; 
   check1(PS_RESET_TYPE_OP_CODES,'1',testName,"1A");
   check1(PS_ADD_TYPE_OP_CODES,'1',testName,"1B");
   check1(PS_ARITH_TYPE_OP_CODES,'1',testName,"1C");
   MS_RESET_SUBT_OP_CODE <= '1';
   wait for 30 ns;
   MS_RESET_ADD_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_RESET_TYPE_OP_CODES,'1',testName,"1D");
   check1(PS_ADD_TYPE_OP_CODES,'1',testName,"1E");
   check1(PS_ARITH_TYPE_OP_CODES,'1',testName,"1F");
   wait for 30 ns;
   MS_RESET_ADD_OP_CODE <= '1';
   
   MS_SUBT_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_ADD_OR_SUBT_OP_CODES,'1',testName,"2A");
   check1(PS_ADD_TYPE_OP_CODES,'1',testName,"2B");
   check1(PS_ARITH_TYPE_OP_CODES,'1',testName,"2C");
   MS_SUBT_OP_CODE <= '1';
   wait for 30 ns;
   MS_ADD_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_ADD_OR_SUBT_OP_CODES,'1',testName,"2D");
   check1(PS_ADD_TYPE_OP_CODES,'1',testName,"2E");
   check1(PS_ARITH_TYPE_OP_CODES,'1',testName,"2F");
   MS_ADD_OP_CODE <= '1';
   
   MS_MPLY_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_MPLY_OR_DIV_OP_CODES,'1',testName,"3A");
   check1(PS_ADD_TYPE_OP_CODES,'0',testName,"3B");
   check1(PS_ARITH_TYPE_OP_CODES,'1',testName,"3C");
   MS_MPLY_OP_CODE <= '1';
   wait for 30 ns;
   MS_DIV_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_MPLY_OR_DIV_OP_CODES,'1',testName,"3D");
   check1(PS_ADD_TYPE_OP_CODES,'0',testName,"3E");
   check1(PS_ARITH_TYPE_OP_CODES,'1',testName,"3F");
   MS_DIV_OP_CODE <= '1';

   wait for 30 ns;
   check1(PS_ARITH_TYPE_OP_CODES,'0',testName,"4A");
   MS_1401_POUND_SIGN_OP_CODE <= '0';
   wait for 30 ns;   
   check1(PS_ARITH_TYPE_OP_CODES,'1',testName,"4B");
   MS_1401_POUND_SIGN_OP_CODE <= '1';

   testName := "13.14.03.1        ";
   
   wait for 30 ns;
   check1(PS_E_OR_Z_OP_CODES,'0',testName,"SA");
   check1(PS_COMPARE_TYPE_OP_CODES,'0',testName,"SB");
   check1(PS_1ST_SCAN_FIRST_OP_CODES,'0',testName,"SC");  -- for W, V or CLEAR

   MS_EDIT_OP_CODE <= '0';
   wait for 30 ns;               
   check1(PS_E_OR_Z_OP_CODES,'1',testName,"1A");
   MS_EDIT_OP_CODE <= '1';
   wait for 30 ns;               
   MS_MOVE_ZERO_SUP_OP_CODE <= '0';
   wait for 30 ns;               
   check1(PS_E_OR_Z_OP_CODES,'1',testName,"1B");
   MS_MOVE_ZERO_SUP_OP_CODE <= '1';

   MS_COMPARE_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_COMPARE_TYPE_OP_CODES,'1',testName,"2A");
   MS_COMPARE_OP_CODE <= '1';
   wait for 30 ns;
   MS_TABLE_SEARCH_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_COMPARE_TYPE_OP_CODES,'1',testName,"2B");
   MS_TABLE_SEARCH_OP_CODE <= '1';
   wait for 30 ns;
   MS_CHAR_TEST_BRANCH_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_COMPARE_TYPE_OP_CODES,'1',testName,"2C");
   MS_CHAR_TEST_BRANCH_OP_CODE <= '1';
   
   MS_BIT_TEST_BRANCH_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_1ST_SCAN_FIRST_OP_CODES,'1',testName,"3A");  
   MS_BIT_TEST_BRANCH_OP_CODE <= '1';
   wait for 30 ns;
   MS_CLEAR_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_1ST_SCAN_FIRST_OP_CODES,'1',testName,"3B");  
   MS_CLEAR_OP_CODE <= '1';
   
   testName := "13.14.04.1        ";
   
   check1(PS_NO_BRANCH_OP_CODES,'0',testName,"1A");
   MS_I_O_MOVE_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_NO_BRANCH_OP_CODES,'1',testName,"1B");
   MS_I_O_MOVE_OP_CODE <= '1';
   wait for 30 ns;
   MS_TABLE_SEARCH_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_NO_BRANCH_OP_CODES,'1',testName,"1C");
   MS_TABLE_SEARCH_OP_CODE <= '1';
   wait for 30 ns;
   MS_I_O_LOAD_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_NO_BRANCH_OP_CODES,'1',testName,"1D");
   MS_I_O_LOAD_OP_CODE <= '1';
   wait for 30 ns;
   
   check1(PS_NO_BRANCH_OP_CODES,'0',testName,"2A");
   MS_ADD_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_NO_BRANCH_OP_CODES,'1',testName,"2B");
   MS_ADD_OP_CODE <= '1';
   wait for 30 ns;
   MS_COMPARE_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_NO_BRANCH_OP_CODES,'1',testName,"2C");
   MS_COMPARE_OP_CODE <= '1';
   wait for 30 ns;
   
   check1(PS_NO_BRANCH_OP_CODES,'0',testName,"3A");
   MS_E_CH_2_CHAR_OP_CODES_STAR_1414_STAR <= '0';
   wait for 30 ns;
   check1(PS_NO_BRANCH_OP_CODES,'1',testName,"3B");
   MS_E_CH_2_CHAR_OP_CODES_STAR_1414_STAR <= '1';
   wait for 30 ns;
   MS_STORE_ADDR_REGS_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_NO_BRANCH_OP_CODES,'1',testName,"3C");
   MS_STORE_ADDR_REGS_OP_CODE <= '1';
   wait for 30 ns;
   MS_SET_WORD_MARK_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_NO_BRANCH_OP_CODES,'1',testName,"3D");
   MS_SET_WORD_MARK_OP_CODE <= '1';
   wait for 30 ns;
   MS_UNIT_CTRL_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_NO_BRANCH_OP_CODES,'1',testName,"3E");
   MS_UNIT_CTRL_OP_CODE <= '1';
   wait for 30 ns;
   MS_DATA_MOVE_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_NO_BRANCH_OP_CODES,'1',testName,"3F");
   MS_DATA_MOVE_OP_CODE <= '1';

   testName := "13.14.05.1        ";
   
   wait for 30 ns;
   check1(PS_WORD_MARK_OP_CODES,'0',testName,"SA");
   -- MS_WORD_MARK_OP_CODES tested in previous page
   check1(PS_M_OR_L_OP_CODES,'0',testName,"SB");
   -- MS_M_OR_L_OP_CODES tested in previous page
   check1(PS_1401_STORE_AR_OP_CODES,'0',testName,"SC");
   check1(MS_1401_STORE_AR_OP_CODES,'1',testname,"SD");
   check1(PS_1ST_SCAN_FIRST_OP_CODES,'0',testName,"SE");
   check1(PS_A_CY_FIRST_OP_CODES,'0',testName,"SF"); -- Standing in for Common Op Code Grouping

   
   MS_SET_WORD_MARK_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_WORD_MARK_OP_CODES,'1',testName,"1A");
   check1(PS_1ST_SCAN_FIRST_OP_CODES,'1',testName,"1B");
   check1(PS_A_CY_FIRST_OP_CODES,'1',testName,"1C"); -- Standing in for Common Op Code Grouping
   
   MS_SET_WORD_MARK_OP_CODE <= '1';
   wait for 30 ns;
   MS_CLEAR_WORD_MARK_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_WORD_MARK_OP_CODES,'1',testName,"1D");
   check1(PS_1ST_SCAN_FIRST_OP_CODES,'1',testName,"1E");
   check1(PS_A_CY_FIRST_OP_CODES,'1',testName,"1F"); -- Standing in for Common Op Code Grouping
   MS_CLEAR_WORD_MARK_OP_CODE <= '1';
   wait for 30 ns;
   MS_COMPARE_OP_CODE <= '0';
   wait for 30 ns;   
   check1(PS_1ST_SCAN_FIRST_OP_CODES,'1',testName,"1E");
   check1(PS_A_CY_FIRST_OP_CODES,'1',testName,"1F"); -- Standing in for Common Op Code Grouping
   MS_COMPARE_OP_CODE <= '1';
   
   
   MS_I_O_MOVE_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_M_OR_L_OP_CODES,'1',testName,"2A");
   wait for 30 ns;
   MS_I_O_MOVE_OP_CODE <= '1';
   wait for 30 ns;
   MS_I_O_LOAD_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_M_OR_L_OP_CODES,'1',testName,"2B");
   wait for 30 ns;
   MS_I_O_LOAD_OP_CODE <= '1';
   
   MS_1401_STORE_A_AR_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_1401_STORE_AR_OP_CODES,'1',testName,"3A");
   check1(MS_1401_STORE_AR_OP_CODES,'0',testname,"3B");
   MS_1401_STORE_A_AR_OP_CODE <= '1';
   wait for 30 ns;
   MS_1401_STORE_B_AR_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_1401_STORE_AR_OP_CODES,'1',testName,"3A");
   check1(MS_1401_STORE_AR_OP_CODES,'0',testname,"3B");
   MS_1401_STORE_B_AR_OP_CODE <= '1';
   wait for 30 ns;
   
   check1(PS_WORD_MARK_OP_CODES,'0',testName,"XA");
   check1(PS_M_OR_L_OP_CODES,'0',testName,"XB");
   check1(PS_1401_STORE_AR_OP_CODES,'0',testName,"XC");
   check1(MS_1401_STORE_AR_OP_CODES,'1',testname,"XD");
   check1(PS_1ST_SCAN_FIRST_OP_CODES,'0',testName,"XE");
   check1(PS_A_CY_FIRST_OP_CODES,'0',testName,"XF"); -- Standing in for Common Op Code Grouping
      
   testName := "13.14.06.1        ";
   
   wait for 30 ns;
   check1(PS_1ST_SCAN_FIRST_OP_CODES,'0',testName,"SA");  -- Standing in for Common Op Code Grouping
   check1(PS_A_REG_TO_A_CH_ON_B_CY_OPS,'0',testName,"SB");  
   check1(PS_A_CY_FIRST_OP_CODES,'0',testName,"SC");  -- Standing in for Common Op Code Grouping
   check1(MS_STD_A_CYCLE_OPS_DOT_A_CYCLE,'1',testname,"SD");
   
   -- Word Mark Op Codes tested earlier on page 05.1
   MS_COMPARE_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_1ST_SCAN_FIRST_OP_CODES,'1',testName,"1A"); -- Standing in for Common Op Code Grouping
   check1(PS_A_CY_FIRST_OP_CODES,'1',testName,"1B"); -- Standing in for Common Op Code Grouping
   MS_COMPARE_OP_CODE <= '1';
   wait for 30 ns;            
   MS_STORE_ADDR_REGS_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_1ST_SCAN_FIRST_OP_CODES,'1',testName,"1C");
   MS_STORE_ADDR_REGS_OP_CODE <= '1';
   wait for 30 ns;  
   MS_CHAR_TEST_BRANCH_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_1ST_SCAN_FIRST_OP_CODES,'1',testName,"1D");
   wait for 30 ns;  
   MS_CHAR_TEST_BRANCH_OP_CODE <= '1';
   wait for 30 ns;
   MS_TABLE_SEARCH_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_1ST_SCAN_FIRST_OP_CODES,'1',testName,"1E");
   MS_TABLE_SEARCH_OP_CODE <= '1';
   wait for 30 ns;
   MS_CLEAR_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_1ST_SCAN_FIRST_OP_CODES,'1',testName,"1F");
   MS_CLEAR_OP_CODE <= '1';
   wait for 30 ns;
   check1(PS_1ST_SCAN_FIRST_OP_CODES,'0',testName,"1G");
   check1(PS_A_CY_FIRST_OP_CODES,'0',testName,"1H"); -- Standing in for Common Op Code Grouping
   
   
   MS_1401_STORE_A_AR_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_1ST_SCAN_FIRST_OP_CODES,'1',testName,"2A");  -- Standing in for MS_1401_LB_OR_H_OR_Q_OP_CODES
   MS_1401_STORE_A_AR_OP_CODE <= '1';
   wait for 30 ns;
   MS_1401_POUND_SIGN_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_1ST_SCAN_FIRST_OP_CODES,'1',testName,"2B");  -- Standing in for MS_1401_LB_OR_H_OR_Q_OP_CODES
   check1(PS_A_CY_FIRST_OP_CODES,'1',testName,"2C"); 
   MS_1401_POUND_SIGN_OP_CODE <= '1';
   wait for 30 ns;
      
   check1(PS_A_CY_FIRST_OP_CODES,'0',testName,"3A");    
   MS_TABLE_SEARCH_OP_CODE <= '0';
   wait for 30 ns;   
   check1(PS_A_CY_FIRST_OP_CODES,'1',testName,"3B");
    
   MS_TABLE_SEARCH_OP_CODE <= '0'; -- Leave set
   wait for 30 ns;
   check1(MS_STD_A_CYCLE_OPS_DOT_A_CYCLE,'1',testName,"4A");
   PS_A_CYCLE <= '1';
   wait for 30 ns;
   check1(MS_STD_A_CYCLE_OPS_DOT_A_CYCLE,'0',testName,"4B");
   MS_TABLE_SEARCH_OP_CODE <= '1';
   wait for 30 ns;
   check1(MS_STD_A_CYCLE_OPS_DOT_A_CYCLE,'1',testName,"4C");
   MS_1401_POUND_SIGN_OP_CODE <= '0';
   wait for 30 ns;
   check1(MS_STD_A_CYCLE_OPS_DOT_A_CYCLE,'0',testName,"4D");
   MS_1401_POUND_SIGN_OP_CODE <= '1';
   wait for 30 ns;
   MS_COMPARE_OP_CODE <= '0';
   wait for 30 ns;
   check1(MS_STD_A_CYCLE_OPS_DOT_A_CYCLE,'0',testName,"4E");
   MS_COMPARE_OP_CODE <= '1';
   wait for 30 ns;
   check1(MS_STD_A_CYCLE_OPS_DOT_A_CYCLE,'1',testName,"4F");

   testName := "13.14.07.1        ";
   
   check1(PS_B_CY_FIRST_OP_CODES,'0',testName,"SA");
   check1(PS_A_REG_TO_A_CH_ON_B_CY_OPS,'0',testName,"SB");
   check1(PS_OP_MOD_TO_A_CH_ON_B_CY_OPS,'0',testName,"SC");
   
   MS_CLEAR_OP_CODE <= '0'; -- Sets MS_W_OR_V_OR_CLEAR_OP_CODES
   wait for 30 ns;
   check1(PS_B_CY_FIRST_OP_CODES,'1',testName,"1A");
   MS_CLEAR_OP_CODE <= '1'; -- Unsets MS_W_OR_V_OR_CLEAR_OP_CODES
   wait for 30 ns;
   MS_CHAR_TEST_BRANCH_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_B_CY_FIRST_OP_CODES,'1',testName,"1B");
   MS_CHAR_TEST_BRANCH_OP_CODE <= '1';
   
   MS_SET_WORD_MARK_OP_CODE <= '0';  -- Sets Common Op Code Grouiping
   wait for 30 ns;
   check1(PS_A_REG_TO_A_CH_ON_B_CY_OPS,'1',testName,"2A");
   MS_SET_WORD_MARK_OP_CODE <= '1';
   wait for 30 ns;
   MS_CLEAR_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_A_REG_TO_A_CH_ON_B_CY_OPS,'1',testName,"2B");
   MS_CLEAR_OP_CODE <= '1';
   wait for 30 ns;
   MS_STOP_DOT_BRANCH_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_A_REG_TO_A_CH_ON_B_CY_OPS,'1',testName,"2C");
   MS_STOP_DOT_BRANCH_OP_CODE <= '1';
   wait for 30 ns;
   MS_1401_POUND_SIGN_OP_CODE <= '0';  -- Sets MS_1401_LB_OR_H_OR_Q_OP_CODES
   wait for 30 ns;
   check1(PS_A_REG_TO_A_CH_ON_B_CY_OPS,'1',testName,"2D");
   MS_1401_POUND_SIGN_OP_CODE <= '1';
   wait for 30 ns;
   check1(PS_A_REG_TO_A_CH_ON_B_CY_OPS,'0',testName,"2E");

   -- Use PS_A_REG_TO_A_CH_ON_B_CY_OPS as stand-in for MS_ARS_D_OR_T_OP_CODES
   
   MS_TABLE_SEARCH_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_A_REG_TO_A_CH_ON_B_CY_OPS,'1',testName,"3A");
   MS_TABLE_SEARCH_OP_CODE <= '1';
   wait for 30 ns;
   MS_DATA_MOVE_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_A_REG_TO_A_CH_ON_B_CY_OPS,'1',testName,"3B");
   MS_DATA_MOVE_OP_CODE <= '1';
   wait for 30 ns;

   check1(PS_OP_MOD_TO_A_CH_ON_B_CY_OPS,'0',testName,"4A");
   MS_UNIT_CTRL_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_OP_MOD_TO_A_CH_ON_B_CY_OPS,'1',testName,"4B");
   MS_UNIT_CTRL_OP_CODE <= '1';
   wait for 30 ns;
   MS_1401_CARD_OR_PRINT_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_OP_MOD_TO_A_CH_ON_B_CY_OPS,'1',testName,"4C");
   MS_1401_CARD_OR_PRINT_OP_CODE <= '1';
   wait for 30 ns;
   MS_E_CH_STACKER_SEL_OP_CODE <= '0';  -- Set MS_E_CH_2_CHAR_ONLY_OP_CODES
   wait for 30 ns;
   check1(PS_OP_MOD_TO_A_CH_ON_B_CY_OPS,'1',testName,"4D");
   MS_E_CH_STACKER_SEL_OP_CODE <= '1';  -- UnSet MS_E_CH_2_CHAR_ONLY_OP_CODES
   wait for 30 ns;
   MS_BIT_TEST_BRANCH_OP_CODE <= '0';  -- Set MS_W_OR_V_OP_CODES
   wait for 30 ns;
   check1(PS_OP_MOD_TO_A_CH_ON_B_CY_OPS,'1',testName,"4E");
   MS_BIT_TEST_BRANCH_OP_CODE <= '1';  -- UnSet MS_W_OR_V_OP_CODES
   wait for 30 ns;
   
   -- Use PS_OP_MOD_TO_A_CH_ON_B_CY_OPS as a stand-in for MS_J_OR_R_OR_X_I_OR_O_OP_CODES
   
   check1(PS_OP_MOD_TO_A_CH_ON_B_CY_OPS,'0',testName,"5A");
   MS_BRANCH_ON_STATUS_CH_1 <= '0';  -- Set MS_J_OR_R_OR_X_I_OR_O_OP_CODES_JRJ
   wait for 30 ns; 
   check1(PS_OP_MOD_TO_A_CH_ON_B_CY_OPS,'1',testName,"5B");
   MS_BRANCH_ON_STATUS_CH_1 <= '1';  -- UnSet MS_J_OR_R_OR_X_I_OR_O_OP_CODES_JRJ
   wait for 30 ns; 
   MS_CHAR_TEST_BRANCH_OP_CODE <= '0';
   wait for 30 ns; 
   check1(PS_OP_MOD_TO_A_CH_ON_B_CY_OPS,'1',testName,"5C");
   MS_CHAR_TEST_BRANCH_OP_CODE <= '1';
   wait for 30 ns; 
   MS_INTERRUPT_TEST_OP_CODE <= '0';
   wait for 30 ns; 
   check1(PS_OP_MOD_TO_A_CH_ON_B_CY_OPS,'1',testName,"5D");
   MS_INTERRUPT_TEST_OP_CODE <= '1';
   wait for 30 ns; 
   check1(PS_OP_MOD_TO_A_CH_ON_B_CY_OPS,'0',testName,"5E");
   
   check1(PS_B_CY_FIRST_OP_CODES,'0',testName,"XA");
   check1(PS_A_REG_TO_A_CH_ON_B_CY_OPS,'0',testName,"XB");
   check1(PS_OP_MOD_TO_A_CH_ON_B_CY_OPS,'0',testName,"XC");
      
   testName := "13.14.08.1        ";
   
   check1(PS_LOAD_MEM_ON_B_CY_OP_CODES,'0',testName,"SA");
   check1(PS_REGEN_MEM_ON_B_CY_OP_CODES,'0',testName,"SB");
   check1(PS_STOP_AT_H_ON_B_CYCLE_OPS,'0',testName,"SC");
   check1(PS_STOP_AT_F_ON_B_CY_OPS,'0',testName,"SD");
   
   MS_ADD_OP_CODE <= '0';
   wait for 30 ns;
   -- Stand in for MS_ADD_TYPE_OR_MPL_OR_DIV_OR_E_OR_Z_OPS
   check1(PS_LOAD_MEM_ON_B_CY_OP_CODES,'1',testName,"1A");
   MS_ADD_OP_CODE <= '1';
   wait for 30 ns;
   MS_MPLY_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_LOAD_MEM_ON_B_CY_OP_CODES,'1',testName,"1B");
   MS_MPLY_OP_CODE <= '1';
   wait for 30 ns;
   MS_EDIT_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_LOAD_MEM_ON_B_CY_OP_CODES,'1',testName,"1C");
   MS_EDIT_OP_CODE <= '1';
   wait for 30 ns;
   
   MS_DATA_MOVE_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_LOAD_MEM_ON_B_CY_OP_CODES,'1',testName,"2A");
   MS_DATA_MOVE_OP_CODE <= '1';
   wait for 30 ns;
   MS_1401_POUND_SIGN_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_LOAD_MEM_ON_B_CY_OP_CODES,'1',testName,"2B");
   MS_1401_POUND_SIGN_OP_CODE <= '1';
   wait for 30 ns;
   
   MS_COMPARE_OP_CODE <= '0';
   wait for 30ns;
   check1(PS_REGEN_MEM_ON_B_CY_OP_CODES,'1',testName,"3A");
   MS_COMPARE_OP_CODE <= '1';
   wait for 30ns;
   MS_ZN_OR_WM_TST_BRANCH_OP_CODE <= '0';  -- Sets MS_W_OR_V_OP_CODES
   wait for 30ns;
   check1(PS_REGEN_MEM_ON_B_CY_OP_CODES,'1',testName,"3B");
   MS_ZN_OR_WM_TST_BRANCH_OP_CODE <= '1';  -- UnSets MS_W_OR_V_OP_CODES
   wait for 30ns;
   MS_E_CH_STACKER_SEL_OP_CODE <= '0';  -- Sets MS_E_CH_2_CHAR_ONLY_OP_CODES
   wait for 30ns;
   check1(PS_REGEN_MEM_ON_B_CY_OP_CODES,'1',testName,"3C");
   MS_E_CH_STACKER_SEL_OP_CODE <= '1';  -- UnSets MS_E_CH_2_CHAR_ONLY_OP_CODES
   wait for 30 ns;
   -- Set MS_J_OR_R_OR_X_I_OR_O_OP_CODES_JRJ, so therefore set Set MS_J_OR_R_OR_X_I_OR_O_OP_CODES
   MS_COND_TEST_BRANCH_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_REGEN_MEM_ON_B_CY_OP_CODES,'1',testName,"3D");
   MS_COND_TEST_BRANCH_OP_CODE <= '1';
   wait for 30 ns;
   -- ILD SHOWS CLEAR setting setting this, but that is not on the ALD that way
   MS_STOP_DOT_BRANCH_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_REGEN_MEM_ON_B_CY_OP_CODES,'1',testName,"3E");
   MS_STOP_DOT_BRANCH_OP_CODE <= '1';
   wait for 30 ns;
   MS_TABLE_SEARCH_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_REGEN_MEM_ON_B_CY_OP_CODES,'1',testName,"3F");
   MS_TABLE_SEARCH_OP_CODE <= '1';
   wait for 30 ns;
   
   MS_ZN_OR_WM_TST_BRANCH_OP_CODE <= '0';  -- Sets MS_W_OR_V_OP_CODES
   wait for 30ns;   
   check1(PS_STOP_AT_H_ON_B_CYCLE_OPS,'1',testName,"4A");   
   MS_ZN_OR_WM_TST_BRANCH_OP_CODE <= '1';  -- UnSets MS_W_OR_V_OP_CODES
   wait for 30ns;   
   MS_CHAR_TEST_BRANCH_OP_CODE <= '0';
   wait for 30ns;   
   check1(PS_STOP_AT_H_ON_B_CYCLE_OPS,'1',testName,"4B");   
   MS_CHAR_TEST_BRANCH_OP_CODE <= '1';
   wait for 30ns;   
   
   -- Stand in for MS_J_OR_R_OR_X_I_OR_O_OP_CODES_JRJ
   check1(PS_STOP_AT_F_ON_B_CY_OPS,'0',testName,"5A");
   MS_COND_TEST_BRANCH_OP_CODE <= '0';
   wait for 30 ns; 
   check1(PS_STOP_AT_F_ON_B_CY_OPS,'1',testName,"5B");
   MS_COND_TEST_BRANCH_OP_CODE <= '1';
   wait for 30 ns; 
   MS_BRANCH_ON_STATUS_CH_1 <= '0';
   wait for 30 ns; 
   check1(PS_STOP_AT_F_ON_B_CY_OPS,'1',testName,"5C");
   MS_BRANCH_ON_STATUS_CH_1 <= '1';
   wait for 30 ns; 
   MS_BRANCH_ON_STATUS_CH_2 <= '0';
   wait for 30 ns; 
   check1(PS_STOP_AT_F_ON_B_CY_OPS,'1',testName,"5D");
   MS_BRANCH_ON_STATUS_CH_2 <= '1';
   wait for 30 ns;
   MS_INTERRUPT_TEST_OP_CODE <= '0';
   wait for 30 ns; 
   check1(PS_STOP_AT_F_ON_B_CY_OPS,'1',testName,"5E");
   MS_INTERRUPT_TEST_OP_CODE <= '1';
   wait for 30 ns; 
   MS_I_OR_O_OP_CODES_STAR_12_19 <= '0';
   wait for 30 ns; 
   check1(PS_STOP_AT_F_ON_B_CY_OPS,'1',testName,"5F");
   MS_I_OR_O_OP_CODES_STAR_12_19 <= '1';
   wait for 30 ns; 
   
   check1(PS_STOP_AT_F_ON_B_CY_OPS,'0',testName,"6A");
   MS_STOP_DOT_BRANCH_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_STOP_AT_F_ON_B_CY_OPS,'1',testName,"6B");
   MS_STOP_DOT_BRANCH_OP_CODE <= '1';
   wait for 30 ns;
   MS_CLEAR_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_STOP_AT_F_ON_B_CY_OPS,'1',testName,"6C");
   MS_CLEAR_OP_CODE <= '1';
   wait for 30 ns;

   check1(PS_LOAD_MEM_ON_B_CY_OP_CODES,'0',testName,"XA");
   check1(PS_REGEN_MEM_ON_B_CY_OP_CODES,'0',testName,"XB");
   check1(PS_STOP_AT_H_ON_B_CYCLE_OPS,'0',testName,"XC");
   check1(PS_STOP_AT_F_ON_B_CY_OPS,'0',testName,"XD");
   
   testName := "13.14.09.1        ";
   
   check1(PS_STOP_AT_F_ON_B_CY_OP_CODES,'0',testName,"SA");
   check1(PS_STOP_AT_J_ON_B_CY_OP_CODES,'0',testName,"SB");
   check1(PS_RO_B_AR_ON_SCAN_B_CY_OPS,'0',testName,"SC");
   check1(PS_READ_OUT_AAR_ON_A_CY_OPS,'0',testName,"SD");
   
   MS_RESET_ADD_OP_CODE <= '0'; -- Sets MS_RESET_TYPE_OP_CODES
   wait for 30 ns;
   check1(PS_STOP_AT_F_ON_B_CY_OP_CODES,'1',testName,"1A");
   MS_RESET_ADD_OP_CODE <= '1'; -- UnSets MS_RESET_TYPE_OP_CODES
   wait for 30 ns;
   MS_MPLY_OP_CODE <= '0';  -- Sets MPLY OR DIV OP CODES 
   wait for 30 ns;
   check1(PS_STOP_AT_F_ON_B_CY_OP_CODES,'1',testName,"1B");
   MS_MPLY_OP_CODE <= '1';  -- UnSets MPLY OR DIV OP CODES 
   wait for 30 ns;
   MS_DATA_MOVE_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_STOP_AT_F_ON_B_CY_OP_CODES,'1',testName,"1C");
   MS_DATA_MOVE_OP_CODE <= '1';
   wait for 30 ns;
   
   MS_EDIT_OP_CODE <= '0';  -- Sets E OR Z OP Codes
   wait for 30 ns;
   check1(PS_STOP_AT_J_ON_B_CY_OP_CODES,'1',testName,"2A");
   MS_EDIT_OP_CODE <= '1';  -- UnSets E OR Z OP Codes
   wait for 30 ns;
   MS_1401_POUND_SIGN_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_STOP_AT_J_ON_B_CY_OP_CODES,'1',testName,"2B");
   MS_1401_POUND_SIGN_OP_CODE <= '1';
   wait for 30 ns;
   
   -- Serves as a stand-in for MS_WM_OR_E_OR_Z_OR_W_OR_V_OR_C_OR_CLEAR_OPS  (whew!)
   check1(PS_RO_B_AR_ON_SCAN_B_CY_OPS,'0',testName,"3A");
   MS_SET_WORD_MARK_OP_CODE <= '0'; -- Sets MS_WORD_MARK_OP_CODES
   wait for 30 ns;
   check1(PS_RO_B_AR_ON_SCAN_B_CY_OPS,'1',testName,"3B");
   MS_SET_WORD_MARK_OP_CODE <= '1'; -- UnSets MS_WORD_MARK_OP_CODES
   wait for 30 ns;
   MS_EDIT_OP_CODE <= '0';  -- Sets E OR Z OP Codes
   wait for 30 ns;
   check1(PS_RO_B_AR_ON_SCAN_B_CY_OPS,'1',testName,"3C");
   MS_EDIT_OP_CODE <= '1';  -- UnSets E OR Z OP Codes
   wait for 30 ns;
   MS_CLEAR_OP_CODE <= '0';  -- Sets W OR V OR_CLEAR OP CODES
   wait for 30 ns;
   check1(PS_RO_B_AR_ON_SCAN_B_CY_OPS,'1',testName,"3D");
   MS_CLEAR_OP_CODE <= '1';  -- UnSets W OR V OR_CLEAR OP CODES
   wait for 30 ns;
   MS_COMPARE_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_RO_B_AR_ON_SCAN_B_CY_OPS,'1',testName,"3E");
   MS_COMPARE_OP_CODE <= '1';
   wait for 30 ns;
   MS_STOP_DOT_BRANCH_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_RO_B_AR_ON_SCAN_B_CY_OPS,'1',testName,"3F");
   MS_STOP_DOT_BRANCH_OP_CODE <= '1';
   wait for 30 ns;
   check1(PS_RO_B_AR_ON_SCAN_B_CY_OPS,'0',testName,"3G");
   
   MS_INTERRUPT_TEST_OP_CODE <= '0';  -- Sets MS_J_OR_R_OR_X_I_OR_O_OP_CODES
   wait for 30 ns;
   check1(PS_RO_B_AR_ON_SCAN_B_CY_OPS,'1',testName,"4A");
   MS_INTERRUPT_TEST_OP_CODE <= '1';  -- UnSets MS_J_OR_R_OR_X_I_OR_O_OP_CODES
   wait for 30 ns;
   MS_TABLE_SEARCH_OP_CODE <= '0';  -- Sets MS_ARS_D_OR_T_OP_CODES   
   wait for 30 ns;
   check1(PS_RO_B_AR_ON_SCAN_B_CY_OPS,'1',testName,"4B");
   MS_TABLE_SEARCH_OP_CODE <= '1';  -- Sets MS_ARS_D_OR_T_OP_CODES   
   wait for 30 ns;
   check1(PS_RO_B_AR_ON_SCAN_B_CY_OPS,'0',testName,"4C");
   
   check1(PS_READ_OUT_AAR_ON_A_CY_OPS,'0',testName,"5A");
   MS_1401_POUND_SIGN_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_READ_OUT_AAR_ON_A_CY_OPS,'1',testName,"5B");
   MS_1401_POUND_SIGN_OP_CODE <= '1';
   wait for 30 ns;
   MS_ADD_OP_CODE <= '0';  -- Sets MS_AD_TYPE_OP_CODES
   wait for 30 ns;
   check1(PS_READ_OUT_AAR_ON_A_CY_OPS,'1',testName,"5C");
   MS_ADD_OP_CODE <= '1';  -- UnSets MS_AD_TYPE_OP_CODES
   wait for 30 ns;
   MS_SET_WORD_MARK_OP_CODE <= '0'; -- Sets MS_WORD_MARK_OP_CODES
   wait for 30 ns;
   check1(PS_READ_OUT_AAR_ON_A_CY_OPS,'1',testName,"5D");
   MS_SET_WORD_MARK_OP_CODE <= '1'; -- UnSets MS_WORD_MARK_OP_CODES
   wait for 30 ns;
   MS_COMPARE_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_READ_OUT_AAR_ON_A_CY_OPS,'1',testName,"5E");
   MS_COMPARE_OP_CODE <= '1';
   wait for 30 ns;
   MS_EDIT_OP_CODE <= '0';  -- Sets E OR Z OP Codes
   wait for 30 ns;
   check1(PS_READ_OUT_AAR_ON_A_CY_OPS,'1',testName,"5F");
   MS_EDIT_OP_CODE <= '1';  -- UnSets E OR Z OP Codes
   wait for 30 ns;
   MS_DATA_MOVE_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_READ_OUT_AAR_ON_A_CY_OPS,'1',testName,"5G");
   MS_DATA_MOVE_OP_CODE <= '1';
   wait for 30 ns;
   MS_1401_STORE_A_AR_OP_CODE <= '0'; -- Sets MS_1401_STORE_AR_OP_CODES
   wait for 30 ns;
   check1(PS_READ_OUT_AAR_ON_A_CY_OPS,'1',testName,"5H");
   MS_1401_STORE_A_AR_OP_CODE <= '1'; -- UnSets MS_1401_STORE_AR_OP_CODES
   wait for 30 ns;
   
   testName := "13.14.10.1        ";
   
   check1(PS_PERCENT_TYPE_OP_CODES,'0',testName,"SA");
   check1(MS_PERCENT_TYPE_OP_CODES,'1',testName,"SB");
   check1(PS_NOT_PERCENT_TYPE_OP_CODES,'0',testName,"SC");
   check1(MS_NOT_PERCENT_TYPE_OP_CODES,'1',testName,"SD");
   check1(PS_1_ADDR_PLUS_MOD_OP_CODES,'0',testName,"SE");
   check1(MS_1_ADDR_PLUS_MOD_OP_CODES,'1',testName,"SF");
   
   MS_I_O_LOAD_OP_CODE <= '0'; -- Sets MS_M_OR_L_OP_CODES
   wait for 30 ns;
   check1(PS_PERCENT_TYPE_OP_CODES,'1',testName,"1A");
   check1(MS_PERCENT_TYPE_OP_CODES,'0',testName,"1B");
   MS_I_O_LOAD_OP_CODE <= '1'; -- UnSets MS_M_OR_L_OP_CODES
   wait for 30 ns;
   MS_UNIT_CTRL_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_PERCENT_TYPE_OP_CODES,'1',testName,"1C");
   check1(MS_PERCENT_TYPE_OP_CODES,'0',testName,"1D");
   MS_UNIT_CTRL_OP_CODE <= '1';
   wait for 30 ns;
   
   MS_CLEAR_OP_CODE <= '0';  -- Sets W OR V OR CLEAR OP CODES
   wait for 30 ns;
   check1(PS_NOT_PERCENT_TYPE_OP_CODES,'1',testName,"2A");
   check1(MS_NOT_PERCENT_TYPE_OP_CODES,'0',testName,"2B");
   MS_CLEAR_OP_CODE <= '1';  -- UnSets W OR V OR CLEAR OP CODES
   wait for 30 ns;
   MS_SET_WORD_MARK_OP_CODE <= '0'; -- Sets Common Op Code Grouping
   wait for 30 ns;
   check1(PS_NOT_PERCENT_TYPE_OP_CODES,'1',testName,"2C");
   MS_SET_WORD_MARK_OP_CODE <= '1'; -- UnSets Common Op Code Grouping
   wait for 30 ns;
   MS_TABLE_SEARCH_OP_CODE <= '0';  -- Sets ARS D OR T OP CODES
   wait for 30 ns;
   check1(PS_NOT_PERCENT_TYPE_OP_CODES,'1',testName,"2D");
   MS_TABLE_SEARCH_OP_CODE <= '1';  -- UnSets ARS D OR T OP CODES
   wait for 30 ns;
   MS_INTERRUPT_TEST_OP_CODE <= '0';  -- Sets MS_J_OR_R_OR_X_I_OR_O_OP_CODES
   wait for 30 ns;
   check1(PS_NOT_PERCENT_TYPE_OP_CODES,'1',testName,"2E");
   MS_INTERRUPT_TEST_OP_CODE <= '1';  -- UnSets MS_J_OR_R_OR_X_I_OR_O_OP_CODES
   wait for 30 ns;
   MS_STOP_DOT_BRANCH_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_NOT_PERCENT_TYPE_OP_CODES,'1',testName,"2F");
   MS_STOP_DOT_BRANCH_OP_CODE <= '1';
   wait for 30 ns;
   check1(PS_NOT_PERCENT_TYPE_OP_CODES,'0',testName,"2G");

   MS_UNIT_CTRL_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_1_ADDR_PLUS_MOD_OP_CODES,'1',testName,"3A");
   check1(MS_1_ADDR_PLUS_MOD_OP_CODES,'0',testName,"3B");
   MS_UNIT_CTRL_OP_CODE <= '1';
   wait for 30 ns;
   MS_INTERRUPT_TEST_OP_CODE <= '0';  -- Sets MS_J_OR_R_OR_X_I_OR_O_OP_CODES_JRJ
   wait for 30 ns;
   check1(PS_1_ADDR_PLUS_MOD_OP_CODES,'1',testName,"3C");
   MS_INTERRUPT_TEST_OP_CODE <= '1';  -- UnSets MS_J_OR_R_OR_X_I_OR_O_OP_CODES_JRJ
   wait for 30 ns;
   MS_STORE_ADDR_REGS_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_1_ADDR_PLUS_MOD_OP_CODES,'1',testName,"3D");
   MS_STORE_ADDR_REGS_OP_CODE <= '1';
   wait for 30 ns;
   check1(PS_1_ADDR_PLUS_MOD_OP_CODES,'0',testName,"3E");
      
   testName := "13.14.11.1        ";
   
   check1(PS_2_ADDR_NO_MOD_OP_CODES,'0',testName,"SA");
   check1(PS_2_ADDR_PLUS_MOD_OP_CODES,'0',testName,"SB");
   
   MS_SET_WORD_MARK_OP_CODE <= '0'; -- Sets Common Op Code Grouping
   wait for 30 ns;
   check1(PS_2_ADDR_NO_MOD_OP_CODES,'1',testName,"1A");
   MS_SET_WORD_MARK_OP_CODE <= '1'; -- UnSets Common Op Code Grouping
   wait for 30 ns;
   MS_CLEAR_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_2_ADDR_NO_MOD_OP_CODES,'1',testName,"1B");
   MS_CLEAR_OP_CODE <= '1';
   wait for 30 ns;

   -- Stand in for -S W OR V OP CODES
   check1(PS_2_ADDR_PLUS_MOD_OP_CODES,'0',testName,"2A");
   MS_BIT_TEST_BRANCH_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_2_ADDR_PLUS_MOD_OP_CODES,'1',testName,"2B");
   MS_BIT_TEST_BRANCH_OP_CODE <= '1';
   wait for 30 ns;
   MS_ZN_OR_WM_TST_BRANCH_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_2_ADDR_PLUS_MOD_OP_CODES,'1',testName,"2C");
   MS_ZN_OR_WM_TST_BRANCH_OP_CODE <= '1';
   wait for 30 ns;
   
   MS_DATA_MOVE_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_2_ADDR_PLUS_MOD_OP_CODES,'1',testName,"3A");
   MS_DATA_MOVE_OP_CODE <= '1';
   wait for 30 ns;
   MS_TABLE_SEARCH_OP_CODE <= '0';  -- Set MS_ARS_L_OR_M_OR_T_OP_CODES
   wait for 30 ns;
   check1(PS_2_ADDR_PLUS_MOD_OP_CODES,'1',testName,"3B");
   MS_TABLE_SEARCH_OP_CODE <= '1';  -- UnSet MS_ARS_L_OR_M_OR_T_OP_CODES
   wait for 30 ns;
   MS_CHAR_TEST_BRANCH_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_2_ADDR_PLUS_MOD_OP_CODES,'1',testName,"3C");
   MS_CHAR_TEST_BRANCH_OP_CODE <= '1';
   wait for 30 ns;
   check1(PS_2_ADDR_PLUS_MOD_OP_CODES,'0',testName,"3D");
   
      
   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

END;
