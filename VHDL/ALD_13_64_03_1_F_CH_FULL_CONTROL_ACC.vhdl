-- VHDL for IBM SMS ALD page 13.64.03.1
-- Title: F CH FULL CONTROL-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 8/24/2023 4:34:31 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_13_64_03_1_F_CH_FULL_CONTROL_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_F_CH_RESET:	 in STD_LOGIC;
		MS_F1_REG_WORD_SEPARATOR:	 in STD_LOGIC;
		PS_F2_REG_WORD_SEPARATOR:	 in STD_LOGIC;
		PS_F_CH_INPUT_MODE:	 in STD_LOGIC;
		PS_F_CH_OUTPUT_MODE:	 in STD_LOGIC;
		MS_SET_F1_REG:	 in STD_LOGIC;
		PS_SET_F2_REG:	 in STD_LOGIC;
		MS_RESET_F2_FULL_LATCH:	 in STD_LOGIC;
		PS_SET_F2_REG_DELAYED:	 in STD_LOGIC;
		MS_F2_REG_FULL:	 out STD_LOGIC;
		PS_F1_REG_FULL:	 out STD_LOGIC;
		MS_F1_REG_FULL:	 out STD_LOGIC;
		PS_F2_REG_FULL:	 out STD_LOGIC);
end ALD_13_64_03_1_F_CH_FULL_CONTROL_ACC;

architecture behavioral of ALD_13_64_03_1_F_CH_FULL_CONTROL_ACC is 

	signal OUT_5A_D: STD_LOGIC;
	signal OUT_4B_F: STD_LOGIC;
	signal OUT_4B_F_Latch: STD_LOGIC;
	signal OUT_3B_R: STD_LOGIC;
	signal OUT_3B_R_Latch: STD_LOGIC;
	signal OUT_2B_D: STD_LOGIC;
	signal OUT_5C_B: STD_LOGIC;
	signal OUT_2C_D: STD_LOGIC;
	signal OUT_5D_D: STD_LOGIC;
	signal OUT_4D_F: STD_LOGIC;
	signal OUT_3D_R: STD_LOGIC;
	signal OUT_5E_B: STD_LOGIC;
	signal OUT_3E_D: STD_LOGIC;
	signal OUT_2E_F: STD_LOGIC;
	signal OUT_1E_R: STD_LOGIC;
	signal OUT_5F_C: STD_LOGIC;
	signal OUT_4F_D: STD_LOGIC;
	signal OUT_4F_D_Latch: STD_LOGIC;
	signal OUT_3F_R: STD_LOGIC;
	signal OUT_3F_R_Latch: STD_LOGIC;
	signal OUT_2F_D: STD_LOGIC;
	signal OUT_5G_F: STD_LOGIC;
	signal OUT_3G_A: STD_LOGIC;
	signal OUT_5H_C: STD_LOGIC;
	signal OUT_4H_B: STD_LOGIC;
	signal OUT_3H_B: STD_LOGIC;
	signal OUT_DOT_5A: STD_LOGIC;
	signal OUT_DOT_4B: STD_LOGIC;
	signal OUT_DOT_4D: STD_LOGIC;
	signal OUT_DOT_4E: STD_LOGIC;
	signal OUT_DOT_3E: STD_LOGIC;
	signal OUT_DOT_5F: STD_LOGIC;
	signal OUT_DOT_4F: STD_LOGIC;
	signal OUT_DOT_4H: STD_LOGIC;

begin

	OUT_5A_D <= NOT MS_F_CH_RESET;
	OUT_4B_F_Latch <= NOT OUT_DOT_5A;
	OUT_3B_R_Latch <= NOT OUT_DOT_4B;
	OUT_2B_D <= NOT OUT_DOT_5A;
	OUT_5C_B <= NOT MS_SET_F1_REG;
	OUT_2C_D <= NOT OUT_DOT_4B;
	OUT_5D_D <= NOT PS_F_CH_INPUT_MODE;
	OUT_4D_F <= NOT PS_SET_F2_REG_DELAYED;
	OUT_3D_R <= NOT OUT_DOT_4D;
	OUT_5E_B <= NOT PS_SET_F2_REG;
	OUT_3E_D <= NOT OUT_DOT_4E;
	OUT_2E_F <= NOT OUT_DOT_3E;
	OUT_1E_R <= NOT OUT_DOT_3E;
	OUT_5F_C <= NOT MS_F_CH_RESET;
	OUT_4F_D_Latch <= NOT OUT_DOT_5F;
	OUT_3F_R_Latch <= NOT OUT_DOT_4F;
	OUT_2F_D <= NOT OUT_DOT_5F;
	OUT_5G_F <= NOT MS_RESET_F2_FULL_LATCH;

	SMS_AEK_3G: entity SMS_AEK
	    port map (
		IN1 => OUT_DOT_4F,	-- Pin F
		OUT1 => OUT_3G_A,
		IN2 => OPEN );

	OUT_5H_C <= NOT PS_F_CH_OUTPUT_MODE;
	OUT_4H_B <= NOT PS_SET_F2_REG;
	OUT_3H_B <= NOT OUT_DOT_4H;
	OUT_DOT_5A <= OUT_5A_D OR OUT_3B_R OR OUT_3D_R OR OUT_2E_F;
	OUT_DOT_4B <= OUT_4B_F OR OUT_5C_B;
	OUT_DOT_4D <= OUT_5D_D OR OUT_4D_F;
	OUT_DOT_4E <= PS_F2_REG_WORD_SEPARATOR OR MS_F1_REG_WORD_SEPARATOR;
	OUT_DOT_3E <= OUT_5E_B OR OUT_3E_D;
	OUT_DOT_5F <= OUT_5F_C OR OUT_3F_R OR OUT_5G_F;
	OUT_DOT_4F <= OUT_1E_R OR OUT_4F_D OR OUT_3H_B;
	OUT_DOT_4H <= OUT_5H_C OR OUT_4H_B;

	PS_F1_REG_FULL <= OUT_2B_D;
	MS_F1_REG_FULL <= OUT_2C_D;
	PS_F2_REG_FULL <= OUT_2F_D;
	MS_F2_REG_FULL <= OUT_3G_A;

	Latch_4B: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4B_F_Latch,
		Q => OUT_4B_F,
		QBar => OPEN );

	Latch_3B: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3B_R_Latch,
		Q => OUT_3B_R,
		QBar => OPEN );

	Latch_4F: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4F_D_Latch,
		Q => OUT_4F_D,
		QBar => OPEN );

	Latch_3F: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3F_R_Latch,
		Q => OUT_3F_R,
		QBar => OPEN );


end;
