-- VHDL for IBM SMS ALD page 19.10.05.1
-- Title: INTERRUPT CONDITION LATCHES
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/14/2020 7:59:19 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_19_10_05_1_INTERRUPT_CONDITION_LATCHES is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_I_RING_OP_TIME:	 in STD_LOGIC;
		PS_I_CYCLE_1:	 in STD_LOGIC;
		PS_LOGIC_GATE_C_1:	 in STD_LOGIC;
		PS_ANY_INQUIRY_REQUEST:	 in STD_LOGIC;
		PS_I_OP_DOT_I_CYCLE_DOT_E:	 in STD_LOGIC;
		MS_E_CH_IN_PROCESS:	 in STD_LOGIC;
		MS_PROGRAM_RESET_6:	 in STD_LOGIC;
		PS_BRANCH_ON_STATUS_CH_1:	 in STD_LOGIC;
		MS_E_CH_OVLP_IN_PROCESS:	 in STD_LOGIC;
		PS_I_RING_5_TIME:	 in STD_LOGIC;
		PS_BRANCH_ON_STATUS_CH_2:	 in STD_LOGIC;
		MS_F_CH_OVLP_IN_PROCESS:	 in STD_LOGIC;
		MS_I_OP_DOT_I_CYCLE_DOT_C:	 out STD_LOGIC;
		MS_INQUIRY_INTR_COND:	 out STD_LOGIC;
		PS_INQUIRY_INTR_COND:	 out STD_LOGIC;
		MS_E_CH_OVRLP_INTR_COND:	 out STD_LOGIC;
		PS_E_CH_OVRLP_INTR_COND:	 out STD_LOGIC;
		MS_F_CH_OVRLP_INTR_COND:	 out STD_LOGIC;
		PS_F_CH_OVRLP_INTR_COND:	 out STD_LOGIC);
end ALD_19_10_05_1_INTERRUPT_CONDITION_LATCHES;

architecture behavioral of ALD_19_10_05_1_INTERRUPT_CONDITION_LATCHES is 

	signal OUT_5A_B: STD_LOGIC;
	signal OUT_4A_L: STD_LOGIC;
	signal OUT_4B_NoPin: STD_LOGIC;
	signal OUT_4B_NoPin_Latch: STD_LOGIC;
	signal OUT_3B_C: STD_LOGIC;
	signal OUT_3B_C_Latch: STD_LOGIC;
	signal OUT_4C_NoPin: STD_LOGIC;
	signal OUT_2D_A: STD_LOGIC;
	signal OUT_1D_P: STD_LOGIC;
	signal OUT_5F_NoPin: STD_LOGIC;
	signal OUT_4F_G: STD_LOGIC;
	signal OUT_4F_G_Latch: STD_LOGIC;
	signal OUT_3F_A: STD_LOGIC;
	signal OUT_3F_A_Latch: STD_LOGIC;
	signal OUT_2F_K: STD_LOGIC;
	signal OUT_1F_P: STD_LOGIC;
	signal OUT_5H_NoPin: STD_LOGIC;
	signal OUT_4H_C: STD_LOGIC;
	signal OUT_4H_C_Latch: STD_LOGIC;
	signal OUT_3H_D: STD_LOGIC;
	signal OUT_3H_D_Latch: STD_LOGIC;
	signal OUT_2H_C: STD_LOGIC;
	signal OUT_1H_R: STD_LOGIC;

begin

	OUT_5A_B <= NOT(PS_I_RING_OP_TIME AND PS_I_CYCLE_1 AND PS_LOGIC_GATE_C_1 );
	OUT_4A_L <= OUT_5A_B;
	OUT_4B_NoPin_Latch <= NOT(OUT_4A_L AND OUT_3B_C AND MS_PROGRAM_RESET_6 );
	OUT_3B_C_Latch <= NOT(OUT_4B_NoPin AND OUT_4C_NoPin );
	OUT_4C_NoPin <= NOT(PS_ANY_INQUIRY_REQUEST AND PS_I_OP_DOT_I_CYCLE_DOT_E );
	OUT_2D_A <= NOT(OUT_3B_C AND MS_E_CH_IN_PROCESS );
	OUT_1D_P <= NOT(OUT_2D_A );
	OUT_5F_NoPin <= NOT(PS_BRANCH_ON_STATUS_CH_1 AND PS_I_RING_5_TIME );
	OUT_4F_G_Latch <= NOT(OUT_5F_NoPin AND OUT_3F_A AND MS_PROGRAM_RESET_6 );
	OUT_3F_A_Latch <= NOT(OUT_4F_G AND MS_E_CH_OVLP_IN_PROCESS );
	OUT_2F_K <= NOT(OUT_3F_A AND MS_E_CH_OVLP_IN_PROCESS );
	OUT_1F_P <= NOT(OUT_2F_K );
	OUT_5H_NoPin <= NOT(PS_I_RING_5_TIME AND PS_BRANCH_ON_STATUS_CH_2 );
	OUT_4H_C_Latch <= NOT(OUT_5H_NoPin AND MS_PROGRAM_RESET_6 AND OUT_3H_D );
	OUT_3H_D_Latch <= NOT(OUT_4H_C AND MS_F_CH_OVLP_IN_PROCESS );
	OUT_2H_C <= NOT(OUT_3H_D AND MS_F_CH_OVLP_IN_PROCESS );
	OUT_1H_R <= NOT(OUT_2H_C );

	MS_I_OP_DOT_I_CYCLE_DOT_C <= OUT_4A_L;
	MS_INQUIRY_INTR_COND <= OUT_2D_A;
	PS_INQUIRY_INTR_COND <= OUT_1D_P;
	MS_E_CH_OVRLP_INTR_COND <= OUT_2F_K;
	PS_E_CH_OVRLP_INTR_COND <= OUT_1F_P;
	MS_F_CH_OVRLP_INTR_COND <= OUT_2H_C;
	PS_F_CH_OVRLP_INTR_COND <= OUT_1H_R;

	Latch_4B: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4B_NoPin_Latch,
		Q => OUT_4B_NoPin,
		QBar => OPEN );

	Latch_3B: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3B_C_Latch,
		Q => OUT_3B_C,
		QBar => OPEN );

	Latch_4F: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4F_G_Latch,
		Q => OUT_4F_G,
		QBar => OPEN );

	Latch_3F: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3F_A_Latch,
		Q => OUT_3F_A,
		QBar => OPEN );

	Latch_4H: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4H_C_Latch,
		Q => OUT_4H_C,
		QBar => OPEN );

	Latch_3H: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3H_D_Latch,
		Q => OUT_3H_D,
		QBar => OPEN );


end;
