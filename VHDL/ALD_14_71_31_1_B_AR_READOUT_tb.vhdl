-- Test Bench VHDL for IBM SMS ALD page 14.71.31.1
-- Title: B AR READOUT
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 9/6/2020 3:06:34 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_14_71_31_1_B_AR_READOUT_tb is
end ALD_14_71_31_1_B_AR_READOUT_tb;

architecture behavioral of ALD_14_71_31_1_B_AR_READOUT_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_14_71_31_1_B_AR_READOUT
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MV_CE_RO_B_AR:	 in STD_LOGIC;
		PS_1401_STORE_AR_OP_CODES:	 in STD_LOGIC;
		MS_CONSOLE_RO_BAR:	 in STD_LOGIC;
		PS_B_TO_LAST_LOGIC_GATE:	 in STD_LOGIC;
		PS_A_OR_C_CYCLE:	 in STD_LOGIC;
		PS_E_CYCLE_CTRL:	 in STD_LOGIC;
		PS_E_CH_UNOVLP_IN_PROCESS:	 in STD_LOGIC;
		PS_BLOCK_BAR_RO_E_CH_STAR_1311:	 in STD_LOGIC;
		MS_CONSOLE_INHIBIT_AR_RO:	 in STD_LOGIC;
		PS_F_CYCLE_CTRL:	 in STD_LOGIC;
		PS_F_CH_UNOVLP_IN_PROCESS:	 in STD_LOGIC;
		PS_BLOCK_BAR_RO_F_CH_STAR_1311:	 in STD_LOGIC;
		MS_1ST_I_O_CYCLE_CONTROL:	 in STD_LOGIC;
		MS_B_AR_RO_CTRL_STAR_ARITH:	 in STD_LOGIC;
		PS_D_CYCLE_CTRL:	 in STD_LOGIC;
		PS_I_RING_1_OR_5_OR_6_OR_10_OR_1401_DOT_3_OR_8:	 in STD_LOGIC;
		PS_PROCESS_ROUTINE:	 in STD_LOGIC;
		PS_LOGIC_GATE_SPECIAL_A:	 in STD_LOGIC;
		PS_STORE_ADDR_REG_OPS_RO_GATE:	 in STD_LOGIC;
		PS_B_SYMBOL_OP_MODIFIER:	 in STD_LOGIC;
		PS_B_CYCLE_CTRL:	 in STD_LOGIC;
		PS_1ST_OR_2ND_OR_3RD_SCAN_CTRL:	 in STD_LOGIC;
		PS_RO_B_AR_ON_SCAN_B_CY_OPS:	 in STD_LOGIC;
		PS_RO_B_AR:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal MV_CE_RO_B_AR: STD_LOGIC := '1';
	signal PS_1401_STORE_AR_OP_CODES: STD_LOGIC := '0';
	signal MS_CONSOLE_RO_BAR: STD_LOGIC := '1';
	signal PS_B_TO_LAST_LOGIC_GATE: STD_LOGIC := '0';
	signal PS_A_OR_C_CYCLE: STD_LOGIC := '0';
	signal PS_E_CYCLE_CTRL: STD_LOGIC := '0';
	signal PS_E_CH_UNOVLP_IN_PROCESS: STD_LOGIC := '0';
	signal PS_BLOCK_BAR_RO_E_CH_STAR_1311: STD_LOGIC := '0';
	signal MS_CONSOLE_INHIBIT_AR_RO: STD_LOGIC := '1';
	signal PS_F_CYCLE_CTRL: STD_LOGIC := '0';
	signal PS_F_CH_UNOVLP_IN_PROCESS: STD_LOGIC := '0';
	signal PS_BLOCK_BAR_RO_F_CH_STAR_1311: STD_LOGIC := '0';
	signal MS_1ST_I_O_CYCLE_CONTROL: STD_LOGIC := '1';
	signal MS_B_AR_RO_CTRL_STAR_ARITH: STD_LOGIC := '1';
	signal PS_D_CYCLE_CTRL: STD_LOGIC := '0';
	signal PS_I_RING_1_OR_5_OR_6_OR_10_OR_1401_DOT_3_OR_8: STD_LOGIC := '0';
	signal PS_PROCESS_ROUTINE: STD_LOGIC := '0';
	signal PS_LOGIC_GATE_SPECIAL_A: STD_LOGIC := '0';
	signal PS_STORE_ADDR_REG_OPS_RO_GATE: STD_LOGIC := '0';
	signal PS_B_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_B_CYCLE_CTRL: STD_LOGIC := '0';
	signal PS_1ST_OR_2ND_OR_3RD_SCAN_CTRL: STD_LOGIC := '0';
	signal PS_RO_B_AR_ON_SCAN_B_CY_OPS: STD_LOGIC := '0';

	-- Outputs

	signal PS_RO_B_AR: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_14_71_31_1_B_AR_READOUT port map(
		FPGA_CLK => FPGA_CLK,
		MV_CE_RO_B_AR => MV_CE_RO_B_AR,
		PS_1401_STORE_AR_OP_CODES => PS_1401_STORE_AR_OP_CODES,
		MS_CONSOLE_RO_BAR => MS_CONSOLE_RO_BAR,
		PS_B_TO_LAST_LOGIC_GATE => PS_B_TO_LAST_LOGIC_GATE,
		PS_A_OR_C_CYCLE => PS_A_OR_C_CYCLE,
		PS_E_CYCLE_CTRL => PS_E_CYCLE_CTRL,
		PS_E_CH_UNOVLP_IN_PROCESS => PS_E_CH_UNOVLP_IN_PROCESS,
		PS_BLOCK_BAR_RO_E_CH_STAR_1311 => PS_BLOCK_BAR_RO_E_CH_STAR_1311,
		MS_CONSOLE_INHIBIT_AR_RO => MS_CONSOLE_INHIBIT_AR_RO,
		PS_F_CYCLE_CTRL => PS_F_CYCLE_CTRL,
		PS_F_CH_UNOVLP_IN_PROCESS => PS_F_CH_UNOVLP_IN_PROCESS,
		PS_BLOCK_BAR_RO_F_CH_STAR_1311 => PS_BLOCK_BAR_RO_F_CH_STAR_1311,
		MS_1ST_I_O_CYCLE_CONTROL => MS_1ST_I_O_CYCLE_CONTROL,
		MS_B_AR_RO_CTRL_STAR_ARITH => MS_B_AR_RO_CTRL_STAR_ARITH,
		PS_D_CYCLE_CTRL => PS_D_CYCLE_CTRL,
		PS_I_RING_1_OR_5_OR_6_OR_10_OR_1401_DOT_3_OR_8 => PS_I_RING_1_OR_5_OR_6_OR_10_OR_1401_DOT_3_OR_8,
		PS_PROCESS_ROUTINE => PS_PROCESS_ROUTINE,
		PS_LOGIC_GATE_SPECIAL_A => PS_LOGIC_GATE_SPECIAL_A,
		PS_STORE_ADDR_REG_OPS_RO_GATE => PS_STORE_ADDR_REG_OPS_RO_GATE,
		PS_B_SYMBOL_OP_MODIFIER => PS_B_SYMBOL_OP_MODIFIER,
		PS_B_CYCLE_CTRL => PS_B_CYCLE_CTRL,
		PS_1ST_OR_2ND_OR_3RD_SCAN_CTRL => PS_1ST_OR_2ND_OR_3RD_SCAN_CTRL,
		PS_RO_B_AR_ON_SCAN_B_CY_OPS => PS_RO_B_AR_ON_SCAN_B_CY_OPS,
		PS_RO_B_AR => PS_RO_B_AR);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

--fpga_clk_process: process

--   constant clk_period : time := 10 ns;

--   begin
--      fpga_clk <= '0';
--      wait for clk_period / 2;
--      fpga_clk <= '1';
--      wait for clk_period / 2;
--   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;
   variable tv: std_logic_vector(22 downto 0);
   variable a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w: std_logic;
   variable g1, g2, g3, g4, g5, g6: std_logic;

   begin

   -- Your test bench code

   testName := "14.71.30.1        ";
   
   FPGA_CLK <= '1';  -- Not needed for this combinatorial test.

  
   for tt in 0 to 8*1024*1024 loop  -- 23 bits, 0 to 22 - 8Meg
      tv := std_logic_vector(to_unsigned(tt,tv'Length));
      a := tv(0); 
      b := tv(1);
      c := tv(2);
      d := tv(3);
      e := tv(4);
      f := tv(5);
      g := tv(6);
      h := tv(7);
      i := tv(8);
      j := tv(9);
      k := tv(10);
      l := tv(11);
      m := tv(12);
      n := tv(13);
      o := tv(14);
      p := tv(15);
      q := tv(16);
      r := tv(17);
      s := tv(18);
      t := tv(19);
      u := tv(20);
      v := tv(21);
      w := tv(22);

      g1 := n or (u and v and w) or (o and q and p);
      g2 := b and e and d and not i;
      g3 := not i and f and g and not h and not m;
      g4 := not i and j and k and not l;
      g5 := not i and g1 and r;

      wait for 30 ns;

   	MV_CE_RO_B_AR <= not a;
   	PS_1401_STORE_AR_OP_CODES <= b;
   	MS_CONSOLE_RO_BAR <= not c;
   	PS_B_TO_LAST_LOGIC_GATE <= d;
   	PS_A_OR_C_CYCLE <= e;
   	PS_E_CYCLE_CTRL <= f;
   	PS_E_CH_UNOVLP_IN_PROCESS <= g;
   	PS_BLOCK_BAR_RO_E_CH_STAR_1311 <= h;
   	MS_CONSOLE_INHIBIT_AR_RO <= not i;
   	PS_F_CYCLE_CTRL <= j;
   	PS_F_CH_UNOVLP_IN_PROCESS <= k;
   	PS_BLOCK_BAR_RO_F_CH_STAR_1311 <= l;
   	MS_1ST_I_O_CYCLE_CONTROL <= not m;
   	MS_B_AR_RO_CTRL_STAR_ARITH <= not n;
   	PS_D_CYCLE_CTRL <= o;
   	PS_I_RING_1_OR_5_OR_6_OR_10_OR_1401_DOT_3_OR_8 <= p;
   	PS_PROCESS_ROUTINE <= q;
   	PS_LOGIC_GATE_SPECIAL_A <= r;
   	PS_STORE_ADDR_REG_OPS_RO_GATE <= s;
   	PS_B_SYMBOL_OP_MODIFIER <= t;
   	PS_B_CYCLE_CTRL <= u;
   	PS_1ST_OR_2ND_OR_3RD_SCAN_CTRL <= v;
   	PS_RO_B_AR_ON_SCAN_B_CY_OPS <= w;

      wait for 30 ns;
   
      check1(PS_RO_B_AR,a or c or (s and t) or g2 or g3 or g4 or g5,testName,"RO B AR");
      
   end loop;


   assert false report "Simulation Ended NORMALLY" severity failure;

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 2000 ms;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY (TIMEOUT)" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

end;
