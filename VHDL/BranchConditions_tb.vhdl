-- Test BenchVHDL for IBM SMS ALD group BranchConditions
-- Title: BranchConditions
-- IBM Machine Name 1411
-- Generated by GenerateHDL on 7/11/2020 1:16:33 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity BranchConditions_tb is
end BranchConditions_tb;

architecture behavioral of BranchConditions_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component BranchConditions
	    Port (
		FPGA_CLK: in STD_LOGIC;
		PS_DIV_OVERFLOW: in STD_LOGIC;
		PS_W_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		MS_HIGH: in STD_LOGIC;
		MS_LOW: in STD_LOGIC;
		PS_SLASH_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_COND_TEST_BRANCH_OP_CODE: in STD_LOGIC;
		PS_S_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_EQUAL: in STD_LOGIC;
		PS_T_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_LOW: in STD_LOGIC;
		MS_1401_MODE: in STD_LOGIC;
		PS_U_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_HIGH: in STD_LOGIC;
		PS_ZR_BAL_LATCH: in STD_LOGIC;
		PS_V_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_LAST_INSN_RO_CYCLE: in STD_LOGIC;
		PS_OVERFLOW: in STD_LOGIC;
		PS_Z_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_BLANK_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_2ND_CND_A_BRANCH_STAR_INTR: in STD_LOGIC;
		PS_2ND_CND_A_BRANCH_JRJ: in STD_LOGIC;
		PS_E_CH_NOT_READY: in STD_LOGIC;
		PS_BRANCH_ON_STATUS_CH_1: in STD_LOGIC;
		PS_E_CH_BUSY: in STD_LOGIC;
		PS_E_CH_CHECK: in STD_LOGIC;
		PS_E_CH_CONDITION: in STD_LOGIC;
		MS_GROUP_MARK_OP_MODIFIER: in STD_LOGIC;
		PS_E_CH_WRONG_LENGTH_RECORD: in STD_LOGIC;
		PS_STOP_DOT_BRANCH_OP_CODE: in STD_LOGIC;
		PS_E_CH_NO_TRANSFER_LATCH: in STD_LOGIC;
		PS_B_CYCLE: in STD_LOGIC;
		PS_1ST_SCAN: in STD_LOGIC;
		PS_B_CH_WM_BIT_1: in STD_LOGIC;
		PS_ZN_OR_WM_TST_BRANCH_OP_CODE: in STD_LOGIC;
		PS_CMP_ZONE_EQUAL: in STD_LOGIC;
		PS_CMP_EQUAL: in STD_LOGIC;
		PS_CHAR_TEST_BRANCH_OP_CODE: in STD_LOGIC;
		PS_BIT_TEST_BRANCH_OP_CODE: in STD_LOGIC;
		PS_CLEAR_OP_CODE: in STD_LOGIC;
		PS_BRANCH_TO_A_COND_STAR_1412_19: in STD_LOGIC;
		PS_SET_NO_SCAN_CTRL_STAR_1412_19: in STD_LOGIC;
		PS_NOT_EVEN_HUNDREDS_ADDR: in STD_LOGIC;
		MS_BRANCH_TO_A_AR_LATCH: in STD_LOGIC;
		MS_1401_BRANCH_LATCH: in STD_LOGIC;
		MS_1401_TAKE_I_TO_B_CYCLE: in STD_LOGIC;
		PS_SET_B_CYCLE_CTRL_STAR_1412_19: in STD_LOGIC;
		PS_EVEN_HUNDREDS_ADDR: in STD_LOGIC;
		PS_I_RING_HDL_BUS: in STD_LOGIC_VECTOR (12 downTo 0);
		PS_OP_MOD_REG_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		PS_B_CH_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		PS_A_CH_BUS: in STD_LOGIC_VECTOR (6 downTo 0);
		PS_HIGH_OR_LOW: out STD_LOGIC;
		PS_I_O_INTLK_RESET_CONDITION: out STD_LOGIC;
		MS_J_TYPE_BRANCH_COND: out STD_LOGIC;
		PS_B_OR_W_OR_V_BRANCH_CND: out STD_LOGIC;
		PS_SET_B_CYCLE_CTRL_STAR_BR_OPS: out STD_LOGIC;
		PS_SET_NO_SCAN_CTRL_STAR_BR_OPS: out STD_LOGIC;
		MS_CLEAR_OP_TAKE_1ST_SCAN: out STD_LOGIC;
		PS_BRANCH_TO_A_CONDITIONS: out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_DIV_OVERFLOW: STD_LOGIC := '0';
	signal PS_W_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal MS_HIGH: STD_LOGIC := '1';
	signal MS_LOW: STD_LOGIC := '1';
	signal PS_SLASH_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_COND_TEST_BRANCH_OP_CODE: STD_LOGIC := '0';
	signal PS_S_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_EQUAL: STD_LOGIC := '0';
	signal PS_T_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_LOW: STD_LOGIC := '0';
	signal MS_1401_MODE: STD_LOGIC := '1';
	signal PS_U_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_HIGH: STD_LOGIC := '0';
	signal PS_ZR_BAL_LATCH: STD_LOGIC := '0';
	signal PS_V_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_LAST_INSN_RO_CYCLE: STD_LOGIC := '0';
	signal PS_OVERFLOW: STD_LOGIC := '0';
	signal PS_Z_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_BLANK_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_2ND_CND_A_BRANCH_STAR_INTR: STD_LOGIC := '0';
	signal PS_2ND_CND_A_BRANCH_JRJ: STD_LOGIC := '0';
	signal PS_E_CH_NOT_READY: STD_LOGIC := '0';
	signal PS_BRANCH_ON_STATUS_CH_1: STD_LOGIC := '0';
	signal PS_E_CH_BUSY: STD_LOGIC := '0';
	signal PS_E_CH_CHECK: STD_LOGIC := '0';
	signal PS_E_CH_CONDITION: STD_LOGIC := '0';
	signal MS_GROUP_MARK_OP_MODIFIER: STD_LOGIC := '1';
	signal PS_E_CH_WRONG_LENGTH_RECORD: STD_LOGIC := '0';
	signal PS_STOP_DOT_BRANCH_OP_CODE: STD_LOGIC := '0';
	signal PS_E_CH_NO_TRANSFER_LATCH: STD_LOGIC := '0';
	signal PS_B_CYCLE: STD_LOGIC := '0';
	signal PS_1ST_SCAN: STD_LOGIC := '0';
	signal PS_B_CH_WM_BIT_1: STD_LOGIC := '0';
	signal PS_ZN_OR_WM_TST_BRANCH_OP_CODE: STD_LOGIC := '0';
	signal PS_CMP_ZONE_EQUAL: STD_LOGIC := '0';
	signal PS_CMP_EQUAL: STD_LOGIC := '0';
	signal PS_CHAR_TEST_BRANCH_OP_CODE: STD_LOGIC := '0';
	signal PS_BIT_TEST_BRANCH_OP_CODE: STD_LOGIC := '0';
	signal PS_CLEAR_OP_CODE: STD_LOGIC := '0';
	signal PS_BRANCH_TO_A_COND_STAR_1412_19: STD_LOGIC := '0';
	signal PS_SET_NO_SCAN_CTRL_STAR_1412_19: STD_LOGIC := '0';
	signal PS_NOT_EVEN_HUNDREDS_ADDR: STD_LOGIC := '0';
	signal MS_BRANCH_TO_A_AR_LATCH: STD_LOGIC := '1';
	signal MS_1401_BRANCH_LATCH: STD_LOGIC := '1';
	signal MS_1401_TAKE_I_TO_B_CYCLE: STD_LOGIC := '1';
	signal PS_SET_B_CYCLE_CTRL_STAR_1412_19: STD_LOGIC := '0';
	signal PS_EVEN_HUNDREDS_ADDR: STD_LOGIC := '0';
	signal PS_I_RING_HDL_BUS: STD_LOGIC_VECTOR (12 downTo 0) := "0000000000000";
	signal PS_OP_MOD_REG_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";
	signal PS_B_CH_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";
	signal PS_A_CH_BUS: STD_LOGIC_VECTOR (6 downTo 0) := "0000000";

	-- Outputs

	signal PS_HIGH_OR_LOW: STD_LOGIC;
	signal PS_I_O_INTLK_RESET_CONDITION: STD_LOGIC;
	signal MS_J_TYPE_BRANCH_COND: STD_LOGIC;
	signal PS_B_OR_W_OR_V_BRANCH_CND: STD_LOGIC;
	signal PS_SET_B_CYCLE_CTRL_STAR_BR_OPS: STD_LOGIC;
	signal PS_SET_NO_SCAN_CTRL_STAR_BR_OPS: STD_LOGIC;
	signal MS_CLEAR_OP_TAKE_1ST_SCAN: STD_LOGIC;
	signal PS_BRANCH_TO_A_CONDITIONS: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: BranchConditions port map(
		FPGA_CLK => FPGA_CLK,
		PS_DIV_OVERFLOW => PS_DIV_OVERFLOW,
		PS_W_SYMBOL_OP_MODIFIER => PS_W_SYMBOL_OP_MODIFIER,
		MS_HIGH => MS_HIGH,
		MS_LOW => MS_LOW,
		PS_SLASH_SYMBOL_OP_MODIFIER => PS_SLASH_SYMBOL_OP_MODIFIER,
		PS_COND_TEST_BRANCH_OP_CODE => PS_COND_TEST_BRANCH_OP_CODE,
		PS_S_SYMBOL_OP_MODIFIER => PS_S_SYMBOL_OP_MODIFIER,
		PS_EQUAL => PS_EQUAL,
		PS_T_SYMBOL_OP_MODIFIER => PS_T_SYMBOL_OP_MODIFIER,
		PS_LOW => PS_LOW,
		MS_1401_MODE => MS_1401_MODE,
		PS_U_SYMBOL_OP_MODIFIER => PS_U_SYMBOL_OP_MODIFIER,
		PS_HIGH => PS_HIGH,
		PS_ZR_BAL_LATCH => PS_ZR_BAL_LATCH,
		PS_V_SYMBOL_OP_MODIFIER => PS_V_SYMBOL_OP_MODIFIER,
		PS_LAST_INSN_RO_CYCLE => PS_LAST_INSN_RO_CYCLE,
		PS_OVERFLOW => PS_OVERFLOW,
		PS_Z_SYMBOL_OP_MODIFIER => PS_Z_SYMBOL_OP_MODIFIER,
		PS_BLANK_SYMBOL_OP_MODIFIER => PS_BLANK_SYMBOL_OP_MODIFIER,
		PS_2ND_CND_A_BRANCH_STAR_INTR => PS_2ND_CND_A_BRANCH_STAR_INTR,
		PS_2ND_CND_A_BRANCH_JRJ => PS_2ND_CND_A_BRANCH_JRJ,
		PS_E_CH_NOT_READY => PS_E_CH_NOT_READY,
		PS_BRANCH_ON_STATUS_CH_1 => PS_BRANCH_ON_STATUS_CH_1,
		PS_E_CH_BUSY => PS_E_CH_BUSY,
		PS_E_CH_CHECK => PS_E_CH_CHECK,
		PS_E_CH_CONDITION => PS_E_CH_CONDITION,
		MS_GROUP_MARK_OP_MODIFIER => MS_GROUP_MARK_OP_MODIFIER,
		PS_E_CH_WRONG_LENGTH_RECORD => PS_E_CH_WRONG_LENGTH_RECORD,
		PS_STOP_DOT_BRANCH_OP_CODE => PS_STOP_DOT_BRANCH_OP_CODE,
		PS_E_CH_NO_TRANSFER_LATCH => PS_E_CH_NO_TRANSFER_LATCH,
		PS_B_CYCLE => PS_B_CYCLE,
		PS_1ST_SCAN => PS_1ST_SCAN,
		PS_B_CH_WM_BIT_1 => PS_B_CH_WM_BIT_1,
		PS_ZN_OR_WM_TST_BRANCH_OP_CODE => PS_ZN_OR_WM_TST_BRANCH_OP_CODE,
		PS_CMP_ZONE_EQUAL => PS_CMP_ZONE_EQUAL,
		PS_CMP_EQUAL => PS_CMP_EQUAL,
		PS_CHAR_TEST_BRANCH_OP_CODE => PS_CHAR_TEST_BRANCH_OP_CODE,
		PS_BIT_TEST_BRANCH_OP_CODE => PS_BIT_TEST_BRANCH_OP_CODE,
		PS_CLEAR_OP_CODE => PS_CLEAR_OP_CODE,
		PS_BRANCH_TO_A_COND_STAR_1412_19 => PS_BRANCH_TO_A_COND_STAR_1412_19,
		PS_SET_NO_SCAN_CTRL_STAR_1412_19 => PS_SET_NO_SCAN_CTRL_STAR_1412_19,
		PS_NOT_EVEN_HUNDREDS_ADDR => PS_NOT_EVEN_HUNDREDS_ADDR,
		MS_BRANCH_TO_A_AR_LATCH => MS_BRANCH_TO_A_AR_LATCH,
		MS_1401_BRANCH_LATCH => MS_1401_BRANCH_LATCH,
		MS_1401_TAKE_I_TO_B_CYCLE => MS_1401_TAKE_I_TO_B_CYCLE,
		PS_SET_B_CYCLE_CTRL_STAR_1412_19 => PS_SET_B_CYCLE_CTRL_STAR_1412_19,
		PS_EVEN_HUNDREDS_ADDR => PS_EVEN_HUNDREDS_ADDR,
		PS_I_RING_HDL_BUS => PS_I_RING_HDL_BUS,
		PS_OP_MOD_REG_BUS => PS_OP_MOD_REG_BUS,
		PS_B_CH_BUS => PS_B_CH_BUS,
		PS_A_CH_BUS => PS_A_CH_BUS,
		PS_HIGH_OR_LOW => PS_HIGH_OR_LOW,
		PS_I_O_INTLK_RESET_CONDITION => PS_I_O_INTLK_RESET_CONDITION,
		MS_J_TYPE_BRANCH_COND => MS_J_TYPE_BRANCH_COND,
		PS_B_OR_W_OR_V_BRANCH_CND => PS_B_OR_W_OR_V_BRANCH_CND,
		PS_SET_B_CYCLE_CTRL_STAR_BR_OPS => PS_SET_B_CYCLE_CTRL_STAR_BR_OPS,
		PS_SET_NO_SCAN_CTRL_STAR_BR_OPS => PS_SET_NO_SCAN_CTRL_STAR_BR_OPS,
		MS_CLEAR_OP_TAKE_1ST_SCAN => MS_CLEAR_OP_TAKE_1ST_SCAN,
		PS_BRANCH_TO_A_CONDITIONS => PS_BRANCH_TO_A_CONDITIONS);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code
   
   testName := "12.60.01.1        ";
   
   wait for 30 ns;
   check1(PS_HIGH_OR_LOW,'0',testName,"SA");
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"SB");
   
   -- PS Last Insn RO Cycle needs to be one to test this page

   PS_LAST_INSN_RO_CYCLE <= '1';
   wait for 30 ns;   
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"SC");
   
   PS_COND_TEST_BRANCH_OP_CODE <= '1';  -- Used for several tests
   
   MS_HIGH <= '0';
   wait for 30 ns;
   check1(PS_HIGH_OR_LOW,'1',testName,"1A");
   MS_HIGH <= '1';
   MS_LOW <= '0';
   wait for 30 ns;
   check1(PS_HIGH_OR_LOW,'1',testName,"1B");
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"1C");
   PS_SLASH_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns;   
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"1D");
   MS_LOW <= '1';
   PS_SLASH_SYMBOL_OP_MODIFIER <= '0';
   
   PS_S_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"2A");
   PS_EQUAL <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"2B");
   PS_S_SYMBOL_OP_MODIFIER <= '0';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"2C");
   PS_EQUAL <= '0';
   
   PS_T_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"3A");
   PS_LOW <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"3B");
   PS_T_SYMBOL_OP_MODIFIER <= '0';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"3C");
   PS_LOW <= '0';
   
   PS_U_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"3D");
   PS_HIGH <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"3E");
   PS_U_SYMBOL_OP_MODIFIER <= '0';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"3F");
   PS_HIGH <= '0';
   
   PS_V_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"4A");
   PS_ZR_BAL_LATCH <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"4B");
   MS_1401_MODE <= '0';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"4C");
   MS_1401_MODE <= '1';
   PS_V_SYMBOL_OP_MODIFIER <= '0';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"4D");
   PS_ZR_BAL_LATCH <= '0';
   
   PS_W_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"5A");
   PS_DIV_OVERFLOW <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"BB");
   MS_1401_MODE <= '0';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"5C");
   MS_1401_MODE <= '1';
   PS_W_SYMBOL_OP_MODIFIER <= '0';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"5D");
   PS_DIV_OVERFLOW <= '0';
   
   testName := "12.60.02.1        ";
   
   PS_LAST_INSN_RO_CYCLE <= '1';  -- Needs to be set for testing this page as well
   
   PS_COND_TEST_BRANCH_OP_CODE <= '1';  -- Used for several tests

   PS_Z_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"1A");
   PS_OVERFLOW <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"1B");
   PS_Z_SYMBOL_OP_MODIFIER <= '0';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"1C");
   PS_OVERFLOW <= '0';
      
   PS_BLANK_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"2A");
   PS_COND_TEST_BRANCH_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"2B");
   
   PS_BLANK_SYMBOL_OP_MODIFIER <= '0';
   
   PS_OP_MOD_REG_BUS(HDL_1_BIT) <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"3A");
   PS_E_CH_NOT_READY <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"3B");
   PS_BRANCH_ON_STATUS_CH_1 <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"3C");
   PS_E_CH_NOT_READY <= '0';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"3D");
   PS_OP_MOD_REG_BUS(HDL_1_BIT) <= '0';

   PS_BRANCH_ON_STATUS_CH_1 <= '1';  -- Leave on for several tests.

   PS_OP_MOD_REG_BUS(HDL_2_BIT) <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"4A");
   PS_E_CH_BUSY <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"4B");
   PS_OP_MOD_REG_BUS(HDL_2_BIT) <= '0';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"4C");
   PS_E_CH_BUSY <= '0';
   
   PS_OP_MOD_REG_BUS(HDL_4_BIT) <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"5A");
   PS_E_CH_CHECK <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"5B");
   PS_OP_MOD_REG_BUS(HDL_4_BIT) <= '0';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"5C");
   PS_E_CH_CHECK <= '0';

   PS_OP_MOD_REG_BUS(HDL_8_BIT) <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"6A");
   PS_E_CH_CONDITION <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"6B");
   PS_OP_MOD_REG_BUS(HDL_8_BIT) <= '0';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"6C");
   PS_E_CH_CONDITION <= '0';
   
   PS_OP_MOD_REG_BUS(HDL_B_BIT) <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"7A");
   PS_E_CH_WRONG_LENGTH_RECORD <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"7B");
   PS_OP_MOD_REG_BUS(HDL_B_BIT) <= '0';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"7C");
   PS_E_CH_WRONG_LENGTH_RECORD <= '0';   
   
   PS_OP_MOD_REG_BUS(HDL_A_BIT) <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"8A");
   PS_E_CH_NO_TRANSFER_LATCH <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"8B");
   PS_OP_MOD_REG_BUS(HDL_A_BIT) <= '0';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"8C");
   PS_E_CH_NO_TRANSFER_LATCH <= '0';

   PS_BRANCH_ON_STATUS_CH_1 <= '0';
   
   PS_I_RING_HDL_BUS(6) <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"9A");
   check1(MS_J_TYPE_BRANCH_COND,'1',testName,"9B");
   check1(PS_I_O_INTLK_RESET_CONDITION,'0',testName,"9C");
   PS_STOP_DOT_BRANCH_OP_CODE <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"9D");
   check1(MS_J_TYPE_BRANCH_COND,'0',testName,"9E");
   check1(PS_I_O_INTLK_RESET_CONDITION,'1',testName,"9F");
   
   PS_LAST_INSN_RO_CYCLE <= '0';
   
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"9H");
   check1(MS_J_TYPE_BRANCH_COND,'0',testName,"9I");
   PS_I_RING_HDL_BUS(6) <= '0';
   wait for 30 ns;
   check1(MS_J_TYPE_BRANCH_COND,'1',testName,"9G");
   
   PS_LAST_INSN_RO_CYCLE <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"10A");
   PS_2ND_CND_A_BRANCH_STAR_INTR <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"10B");
   PS_2ND_CND_A_BRANCH_STAR_INTR <= '0';
   wait for 30 ns;
   
   PS_2ND_CND_A_BRANCH_JRJ <= '1';  -- From 12.60.15.1
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"10C");
   PS_LAST_INSN_RO_CYCLE <= '0';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"10D");
   PS_2ND_CND_A_BRANCH_JRJ <= '0';
   
   MS_GROUP_MARK_OP_MODIFIER <= '0';
   wait for 30 ns;
   check1(PS_I_O_INTLK_RESET_CONDITION,'1',testName,"10E");    
   
   PS_LAST_INSN_RO_CYCLE <= '0';
   
   testName := "12.60.03.1        ";
   
   PS_OP_MOD_REG_BUS(HDL_1_BIT) <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"1A");
   PS_B_CH_WM_BIT_1 <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"1B");
   PS_ZN_OR_WM_TST_BRANCH_OP_CODE <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"1C");
   PS_B_CYCLE <= '1';  -- Needed for the following tests as well
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"1D");
   check1(PS_B_OR_W_OR_V_BRANCH_CND,'1',testName,"1E");  -- Does not require B Cycle 
   PS_1ST_SCAN <= '1'; -- Needed for the following tests as well
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"1F");
   check1(PS_B_OR_W_OR_V_BRANCH_CND,'1',testName,"1G");
   PS_B_CH_WM_BIT_1 <= '0';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"1H");
   check1(PS_B_OR_W_OR_V_BRANCH_CND,'0',testName,"1I");   
   PS_OP_MOD_REG_BUS(HDL_1_BIT) <= '1';
   wait for 30 ns;

   PS_B_CYCLE <= '1';  -- Needed for the following tests as well
   PS_1ST_SCAN <= '1'; -- Needed for the following tests as well
   
   PS_ZN_OR_WM_TST_BRANCH_OP_CODE <= '1';
   PS_OP_MOD_REG_BUS(HDL_2_BIT) <= '1';   
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"2A");
   PS_CMP_ZONE_EQUAL <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"2B");
   PS_OP_MOD_REG_BUS(HDL_2_BIT) <= '0';   
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"2C");
   PS_CMP_ZONE_EQUAL <= '0';
   PS_ZN_OR_WM_TST_BRANCH_OP_CODE <= '0';
   
   PS_CMP_EQUAL <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"3A");
   PS_CHAR_TEST_BRANCH_OP_CODE <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"3B");
   PS_CMP_EQUAL <= '0';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"3C");

   PS_B_CH_BUS(HDL_B_BIT) <= '1';    
   PS_A_CH_BUS(HDL_B_BIT) <= '1';    
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"4A");
   check1(PS_B_OR_W_OR_V_BRANCH_CND,'0',testName,"4B");   
   PS_BIT_TEST_BRANCH_OP_CODE <= '1';
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"4B");
   check1(PS_B_OR_W_OR_V_BRANCH_CND,'1',testName,"4C");
   PS_A_CH_BUS(HDL_B_BIT) <= '0';    
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"4D");
   check1(PS_B_OR_W_OR_V_BRANCH_CND,'0',testName,"4E");   
   PS_B_CH_BUS(HDL_B_BIT) <= '0';
   wait for 30 ns;
   
   PS_BIT_TEST_BRANCH_OP_CODE <= '1'; -- For the following tests
   
   PS_B_CH_BUS(HDL_A_BIT) <= '1';    
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"5A");
   PS_A_CH_BUS(HDL_A_BIT) <= '1';    
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"5B");
   PS_B_CH_BUS(HDL_A_BIT) <= '0';    
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"5C");
   PS_B_CH_BUS(HDL_A_BIT) <= '0';
   wait for 30 ns;
      
   PS_B_CH_BUS(HDL_8_BIT) <= '1';    
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"6A");
   PS_A_CH_BUS(HDL_8_BIT) <= '1';    
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"6B");
   PS_B_CH_BUS(HDL_8_BIT) <= '0';    
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"6C");
   PS_B_CH_BUS(HDL_8_BIT) <= '0';
   wait for 30 ns;
      
   PS_B_CH_BUS(HDL_4_BIT) <= '1';    
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"7A");
   check1(PS_B_OR_W_OR_V_BRANCH_CND,'0',testName,"7B");   
   PS_A_CH_BUS(HDL_4_BIT) <= '1';    
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"7B");
   check1(PS_B_OR_W_OR_V_BRANCH_CND,'1',testName,"7C");
   PS_B_CH_BUS(HDL_4_BIT) <= '0';    
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"7D");
   check1(PS_B_OR_W_OR_V_BRANCH_CND,'0',testName,"7E");   
   PS_B_CH_BUS(HDL_4_BIT) <= '0';
   wait for 30 ns;
  
   PS_B_CH_BUS(HDL_2_BIT) <= '1';    
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"8A");
   PS_A_CH_BUS(HDL_2_BIT) <= '1';    
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"8B");
   PS_B_CH_BUS(HDL_2_BIT) <= '0';    
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"8C");
   PS_B_CH_BUS(HDL_2_BIT) <= '0';
   wait for 30 ns;

   PS_B_CH_BUS(HDL_1_BIT) <= '1';    
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"9A");
   PS_A_CH_BUS(HDL_1_BIT) <= '1';    
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'1',testName,"9B");
   PS_B_CH_BUS(HDL_1_BIT) <= '0';    
   wait for 30 ns;
   check1(PS_BRANCH_TO_A_CONDITIONS,'0',testName,"9C");
   PS_B_CH_BUS(HDL_1_BIT) <= '0';
   wait for 30 ns;
   
   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

END;
