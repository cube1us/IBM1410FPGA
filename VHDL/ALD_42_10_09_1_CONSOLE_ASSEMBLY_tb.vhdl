-- Test Bench VHDL for IBM SMS ALD page 42.10.09.1
-- Title: CONSOLE ASSEMBLY
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/26/2020 12:31:22 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_42_10_09_1_CONSOLE_ASSEMBLY_tb is
end ALD_42_10_09_1_CONSOLE_ASSEMBLY_tb;

architecture behavioral of ALD_42_10_09_1_CONSOLE_ASSEMBLY_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_42_10_09_1_CONSOLE_ASSEMBLY
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_CONSOLE_READ_OP:	 in STD_LOGIC;
		MS_DISPLAY_ROUTINE:	 in STD_LOGIC;
		MS_ADDRESS_SET_ROUTINE:	 in STD_LOGIC;
		MS_ALTER_ROUTINE:	 in STD_LOGIC;
		PS_CONS_MX_32_OR_33_POS:	 in STD_LOGIC;
		PS_DISPLAY_ROUTINE_2:	 in STD_LOGIC;
		MS_CONS_MX_23_POS:	 in STD_LOGIC;
		PS_CONSOLE_WRITE_OP:	 in STD_LOGIC;
		PS_CONS_MX_32_POS:	 in STD_LOGIC;
		MS_CONS_MX_X3_POS:	 in STD_LOGIC;
		MS_CONS_MX_X2_POS:	 in STD_LOGIC;
		MS_CONS_MX_X1_POS:	 in STD_LOGIC;
		MV_2ND_CHECK_TEST_SWITCH:	 in STD_LOGIC;
		MS_GATE_CONSOLE_PRTR_TO_E1_IN:	 out STD_LOGIC;
		PS_CONS_B_DATA_CH_GATE:	 out STD_LOGIC;
		PS_CONS_E2_REG_GATE:	 out STD_LOGIC;
		MS_CONS_ADDR_REG_EXIT_GATE:	 out STD_LOGIC;
		PS_CONS_ADDR_REG_EXIT_GATE:	 out STD_LOGIC;
		PS_GATE_CONSOLE_PRTR_TO_E1_IN:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal MS_CONSOLE_READ_OP: STD_LOGIC := '1';
	signal MS_DISPLAY_ROUTINE: STD_LOGIC := '1';
	signal MS_ADDRESS_SET_ROUTINE: STD_LOGIC := '1';
	signal MS_ALTER_ROUTINE: STD_LOGIC := '1';
	signal PS_CONS_MX_32_OR_33_POS: STD_LOGIC := '0';
	signal PS_DISPLAY_ROUTINE_2: STD_LOGIC := '0';
	signal MS_CONS_MX_23_POS: STD_LOGIC := '1';
	signal PS_CONSOLE_WRITE_OP: STD_LOGIC := '0';
	signal PS_CONS_MX_32_POS: STD_LOGIC := '0';
	signal MS_CONS_MX_X3_POS: STD_LOGIC := '1';
	signal MS_CONS_MX_X2_POS: STD_LOGIC := '1';
	signal MS_CONS_MX_X1_POS: STD_LOGIC := '1';
	signal MV_2ND_CHECK_TEST_SWITCH: STD_LOGIC := '1';

	-- Outputs

	signal MS_GATE_CONSOLE_PRTR_TO_E1_IN: STD_LOGIC;
	signal PS_CONS_B_DATA_CH_GATE: STD_LOGIC;
	signal PS_CONS_E2_REG_GATE: STD_LOGIC;
	signal MS_CONS_ADDR_REG_EXIT_GATE: STD_LOGIC;
	signal PS_CONS_ADDR_REG_EXIT_GATE: STD_LOGIC;
	signal PS_GATE_CONSOLE_PRTR_TO_E1_IN: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

   constant MX_X1A_POS: integer := 7;
   constant MX_X6A_POS: integer := 8;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_42_10_09_1_CONSOLE_ASSEMBLY port map(
		FPGA_CLK => FPGA_CLK,
		MS_CONSOLE_READ_OP => MS_CONSOLE_READ_OP,
		MS_DISPLAY_ROUTINE => MS_DISPLAY_ROUTINE,
		MS_ADDRESS_SET_ROUTINE => MS_ADDRESS_SET_ROUTINE,
		MS_ALTER_ROUTINE => MS_ALTER_ROUTINE,
		PS_CONS_MX_32_OR_33_POS => PS_CONS_MX_32_OR_33_POS,
		PS_DISPLAY_ROUTINE_2 => PS_DISPLAY_ROUTINE_2,
		MS_CONS_MX_23_POS => MS_CONS_MX_23_POS,
		PS_CONSOLE_WRITE_OP => PS_CONSOLE_WRITE_OP,
		PS_CONS_MX_32_POS => PS_CONS_MX_32_POS,
		MS_CONS_MX_X3_POS => MS_CONS_MX_X3_POS,
		MS_CONS_MX_X2_POS => MS_CONS_MX_X2_POS,
		MS_CONS_MX_X1_POS => MS_CONS_MX_X1_POS,
		MV_2ND_CHECK_TEST_SWITCH => MV_2ND_CHECK_TEST_SWITCH,
		MS_GATE_CONSOLE_PRTR_TO_E1_IN => MS_GATE_CONSOLE_PRTR_TO_E1_IN,
		PS_CONS_B_DATA_CH_GATE => PS_CONS_B_DATA_CH_GATE,
		PS_CONS_E2_REG_GATE => PS_CONS_E2_REG_GATE,
		MS_CONS_ADDR_REG_EXIT_GATE => MS_CONS_ADDR_REG_EXIT_GATE,
		PS_CONS_ADDR_REG_EXIT_GATE => PS_CONS_ADDR_REG_EXIT_GATE,
		PS_GATE_CONSOLE_PRTR_TO_E1_IN => PS_GATE_CONSOLE_PRTR_TO_E1_IN);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;
   variable tv: std_logic_vector(25 downto 0);
   variable a,b,c,d,e,f,g,h,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z: std_logic;
   variable g1, g2, g3, g4, g5, g6, g7, g8, g9, g10: std_logic;

   begin

   -- Your test bench code

   testName := "42.10.09.1        ";

   for tt in 0 to 2**13 loop
      tv := std_logic_vector(to_unsigned(tt,tv'Length));
      a := tv(0);
      b := tv(1);
      c := tv(2);
      d := tv(3);
      e := tv(4);
      f := tv(5);
      g := tv(6);
      h := tv(7);
      j := tv(8);
      k := tv(9);
      l := tv(10);
      m := tv(11);
      n := tv(12);

		MS_CONSOLE_READ_OP <= not a;
		MS_DISPLAY_ROUTINE <= not b;
		MS_ADDRESS_SET_ROUTINE <= not c;
		MS_ALTER_ROUTINE <= not d;
		PS_CONS_MX_32_OR_33_POS <= e;
		PS_DISPLAY_ROUTINE_2 <= f;
		MS_CONS_MX_23_POS <= not g;
		PS_CONSOLE_WRITE_OP <= h ;
		PS_CONS_MX_32_POS <= j ;
		MS_CONS_MX_X3_POS <= not k;
		MS_CONS_MX_X2_POS <= not l;
		MS_CONS_MX_X1_POS <= not m;
		MV_2ND_CHECK_TEST_SWITCH <= not n;
		
      wait for 30 ns;
      
      check1(PS_GATE_CONSOLE_PRTR_TO_E1_IN,a or b or c or d,testName,"+S Gate Console to E1");
      check1(MS_GATE_CONSOLE_PRTR_TO_E1_IN,not(a or b or c or d),testName,"+S Gate Console to E1");
      check1(PS_CONS_B_DATA_CH_GATE,(e and f) or g,testName,"Cons B Data Ch Gate");
      check1(PS_CONS_E2_REG_GATE,h and j,testName,"Cons E2 Reg Gate");
      check1(PS_CONS_ADDR_REG_EXIT_GATE,k or l or m or n,testName,"Cons Addr Reg Exit Gate");
      check1(MS_CONS_ADDR_REG_EXIT_GATE,not(k or l or m or n),testName,"Cons Addr Reg Exit Gate");
      
   end loop;

   assert false report "Simulation Ended NORMALLY" severity failure;

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 2 ms;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY (TIMEOUT)" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

end;
