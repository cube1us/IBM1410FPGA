-- VHDL for IBM SMS ALD page 16.20.13.1
-- Title: TRUE ADD COMPLEMENT CONT-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/3/2020 12:00:17 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_16_20_13_1_TRUE_ADD_COMPLEMENT_CONT_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_MPLY_DOT_LAST_INSN_RO_CYCLE:	 in STD_LOGIC;
		MS_RA_OR_RS_DOT_LAST_INSN_RO_CYCLE:	 in STD_LOGIC;
		MS_LB_OP_DOT_LIROC:	 in STD_LOGIC;
		MB_DIV_DOT_X_DOT_B_DOT_S_DOT_NOT_RC:	 in STD_LOGIC;
		MB_MPLY_DOT_MQ_DOT_B_DOT_B0:	 in STD_LOGIC;
		MS_A_CYCLE:	 in STD_LOGIC;
		MB_MPLY_DOT_MQ_DOT_B_DOT_B1_4:	 in STD_LOGIC;
		MS_MPLY_DOT_N_DOT_C:	 in STD_LOGIC;
		MS_LB_DOT_B_CYCLE_DOT_1ST_SCAN:	 in STD_LOGIC;
		MS_RA_OR_RS_DOT_B_DOT_NOT_1401:	 in STD_LOGIC;
		MB_DIV_DOT_X_DOT_B:	 in STD_LOGIC;
		MB_MPLY_DOT_MQ_DOT_B_DOT_S_DOT_B9_DOT_BW:	 in STD_LOGIC;
		MB_MPLY_DOT_MQ_DOT_B_DOT_B5_8:	 in STD_LOGIC;
		MB_MPLY_DOT_MQ_DOT_B_DOT_S_DOT_B9_DOT_NOT_BW:	 in STD_LOGIC;
		MB_DIV_DOT_X_DOT_B_DOT_S_DOT_RC:	 in STD_LOGIC;
		MB_MPLY_DOT_MQ_DOT_B_DOT_T_DOT_B9:	 in STD_LOGIC;
		MS_DIV_DOT_LAST_INSN_RO_CYCLE:	 in STD_LOGIC;
		MS_DIV_DOT_2_DOT_D:	 in STD_LOGIC;
		MS_MPLY_DOT_U_OR_Y_OR_X_DOT_B:	 in STD_LOGIC;
		MS_MPLY_DOT_1_OR_N_OR_3_DOT_D:	 in STD_LOGIC;
		MS_DIV_DOT_U_OR_Y_DOT_B:	 in STD_LOGIC;
		MS_A_OR_S_DOT_B_CYCLE:	 in STD_LOGIC;
		MS_DIV_DOT_MQ_DOT_B:	 in STD_LOGIC;
		PS_SET_TRUE:	 out STD_LOGIC;
		PS_REGEN_TRUE:	 out STD_LOGIC;
		PS_SET_COMPL_CTRL_LATCH:	 out STD_LOGIC;
		PS_REGEN_COMPL:	 out STD_LOGIC);
end ALD_16_20_13_1_TRUE_ADD_COMPLEMENT_CONT_ACC;

architecture behavioral of ALD_16_20_13_1_TRUE_ADD_COMPLEMENT_CONT_ACC is 

	signal OUT_2A_G: STD_LOGIC;
	signal OUT_1A_P: STD_LOGIC;
	signal OUT_3B_G: STD_LOGIC;
	signal OUT_1B_D: STD_LOGIC;
	signal OUT_3C_C: STD_LOGIC;
	signal OUT_1C_A: STD_LOGIC;
	signal OUT_3D_G: STD_LOGIC;
	signal OUT_5E_F: STD_LOGIC;
	signal OUT_3E_D: STD_LOGIC;
	signal OUT_5F_C: STD_LOGIC;
	signal OUT_5G_K: STD_LOGIC;
	signal OUT_3G_G: STD_LOGIC;
	signal OUT_3H_G: STD_LOGIC;
	signal OUT_DOT_1A: STD_LOGIC;
	signal OUT_DOT_3B: STD_LOGIC;
	signal OUT_DOT_5F: STD_LOGIC;
	signal OUT_DOT_1G: STD_LOGIC;

begin

	OUT_2A_G <= NOT(MS_MPLY_DOT_LAST_INSN_RO_CYCLE AND MS_RA_OR_RS_DOT_LAST_INSN_RO_CYCLE );
	OUT_1A_P <= NOT(MS_LB_OP_DOT_LIROC );
	OUT_3B_G <= NOT(MS_A_OR_S_DOT_B_CYCLE AND MS_MPLY_DOT_1_OR_N_OR_3_DOT_D AND MS_MPLY_DOT_U_OR_Y_OR_X_DOT_B );
	OUT_1B_D <= NOT(MB_DIV_DOT_X_DOT_B_DOT_S_DOT_NOT_RC AND MB_MPLY_DOT_MQ_DOT_B_DOT_B0 AND MB_MPLY_DOT_MQ_DOT_B_DOT_B1_4 );
	OUT_3C_C <= NOT(MS_A_CYCLE AND MS_DIV_DOT_U_OR_Y_DOT_B );
	OUT_1C_A <= NOT MB_MPLY_DOT_MQ_DOT_B_DOT_S_DOT_B9_DOT_BW;
	OUT_3D_G <= NOT(MS_MPLY_DOT_N_DOT_C AND MS_LB_DOT_B_CYCLE_DOT_1ST_SCAN AND MS_RA_OR_RS_DOT_B_DOT_NOT_1401 );
	OUT_5E_F <= NOT MB_MPLY_DOT_MQ_DOT_B_DOT_B5_8;
	OUT_3E_D <= NOT MB_DIV_DOT_X_DOT_B;
	OUT_5F_C <= NOT(MB_MPLY_DOT_MQ_DOT_B_DOT_S_DOT_B9_DOT_NOT_BW AND MB_DIV_DOT_X_DOT_B_DOT_S_DOT_RC AND MB_MPLY_DOT_MQ_DOT_B_DOT_T_DOT_B9 );
	OUT_5G_K <= NOT(MS_DIV_DOT_LAST_INSN_RO_CYCLE AND MS_DIV_DOT_2_DOT_D );
	OUT_3G_G <= NOT(MS_DIV_DOT_U_OR_Y_DOT_B AND MS_DIV_DOT_MQ_DOT_B AND MS_A_CYCLE );
	OUT_3H_G <= NOT(MS_MPLY_DOT_U_OR_Y_OR_X_DOT_B AND MS_MPLY_DOT_1_OR_N_OR_3_DOT_D AND MS_A_OR_S_DOT_B_CYCLE );
	OUT_DOT_1A <= OUT_2A_G OR OUT_1A_P OR OUT_1B_D OR OUT_1C_A;
	OUT_DOT_3B <= OUT_3B_G OR OUT_3C_C OR OUT_3D_G OR OUT_3E_D;
	OUT_DOT_5F <= OUT_5E_F OR OUT_5F_C OR OUT_5G_K;
	OUT_DOT_1G <= OUT_3G_G OR OUT_3H_G;

	PS_SET_TRUE <= OUT_DOT_1A;
	PS_REGEN_TRUE <= OUT_DOT_3B;
	PS_SET_COMPL_CTRL_LATCH <= OUT_DOT_5F;
	PS_REGEN_COMPL <= OUT_DOT_1G;


end;
