-- Test Bench VHDL for IBM SMS ALD page 14.18.07.1
-- Title: ZONE ADDER.AUX ADDER CONTROLS
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 8/26/2020 5:18:19 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_14_18_07_1_ZONE_ADDER_AUX_ADDER_CONTROLS_tb is
end ALD_14_18_07_1_ZONE_ADDER_AUX_ADDER_CONTROLS_tb;

architecture behavioral of ALD_14_18_07_1_ZONE_ADDER_AUX_ADDER_CONTROLS_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_14_18_07_1_ZONE_ADDER_AUX_ADDER_CONTROLS
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_ADD_OR_SUBT_OP_CODES:	 in STD_LOGIC;
		PS_BODY_LATCH:	 in STD_LOGIC;
		MS_LB_DOT_B_CYCLE_DOT_1ST_SCAN:	 in STD_LOGIC;
		MS_X_CYCLE:	 in STD_LOGIC;
		MS_H_OR_Q_OP_DOT_A_CY_DOT_A_RING_4_TIME:	 in STD_LOGIC;
		MS_I_CYCLE:	 in STD_LOGIC;
		MS_H_OR_Q_OP_DOT_A_CY_DOT_A_RING_2_TIME:	 in STD_LOGIC;
		MS_LB_OP_DOT_B_CY:	 in STD_LOGIC;
		MS_A_OR_S_DOT_B_CYCLE:	 in STD_LOGIC;
		PS_X_CYCLE:	 in STD_LOGIC;
		PS_1401_MODE:	 in STD_LOGIC;
		MS_A_OR_S_DOT_B_DOT_1_DOT_T_DOT_BW_DOT_Y_OR_X_DOT_1401:	 in STD_LOGIC;
		MS_LB_DOT_B_CYCLE_DOT_EXTENSION_LATCH:	 in STD_LOGIC;
		PS_GATE_A_CH_TO_ZONE_ADDER:	 out STD_LOGIC;
		PS_GATE_BIN_A12_TO_ZONE_ADDER:	 out STD_LOGIC;
		PS_GATE_BIN_A48_TO_ZONE_ADDER:	 out STD_LOGIC;
		PS_GATE_B_CH_TO_ZONE_ADDER:	 out STD_LOGIC;
		PS_GATE_ADD_CAR_TO_ZONE_ADDER:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_ADD_OR_SUBT_OP_CODES: STD_LOGIC := '0';
	signal PS_BODY_LATCH: STD_LOGIC := '0';
	signal MS_LB_DOT_B_CYCLE_DOT_1ST_SCAN: STD_LOGIC := '1';
	signal MS_X_CYCLE: STD_LOGIC := '1';
	signal MS_H_OR_Q_OP_DOT_A_CY_DOT_A_RING_4_TIME: STD_LOGIC := '1';
	signal MS_I_CYCLE: STD_LOGIC := '1';
	signal MS_H_OR_Q_OP_DOT_A_CY_DOT_A_RING_2_TIME: STD_LOGIC := '1';
	signal MS_LB_OP_DOT_B_CY: STD_LOGIC := '1';
	signal MS_A_OR_S_DOT_B_CYCLE: STD_LOGIC := '1';
	signal PS_X_CYCLE: STD_LOGIC := '0';
	signal PS_1401_MODE: STD_LOGIC := '0';
	signal MS_A_OR_S_DOT_B_DOT_1_DOT_T_DOT_BW_DOT_Y_OR_X_DOT_1401: STD_LOGIC := '1';
	signal MS_LB_DOT_B_CYCLE_DOT_EXTENSION_LATCH: STD_LOGIC := '1';

	-- Outputs

	signal PS_GATE_A_CH_TO_ZONE_ADDER: STD_LOGIC;
	signal PS_GATE_BIN_A12_TO_ZONE_ADDER: STD_LOGIC;
	signal PS_GATE_BIN_A48_TO_ZONE_ADDER: STD_LOGIC;
	signal PS_GATE_B_CH_TO_ZONE_ADDER: STD_LOGIC;
	signal PS_GATE_ADD_CAR_TO_ZONE_ADDER: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_14_18_07_1_ZONE_ADDER_AUX_ADDER_CONTROLS port map(
		FPGA_CLK => FPGA_CLK,
		PS_ADD_OR_SUBT_OP_CODES => PS_ADD_OR_SUBT_OP_CODES,
		PS_BODY_LATCH => PS_BODY_LATCH,
		MS_LB_DOT_B_CYCLE_DOT_1ST_SCAN => MS_LB_DOT_B_CYCLE_DOT_1ST_SCAN,
		MS_X_CYCLE => MS_X_CYCLE,
		MS_H_OR_Q_OP_DOT_A_CY_DOT_A_RING_4_TIME => MS_H_OR_Q_OP_DOT_A_CY_DOT_A_RING_4_TIME,
		MS_I_CYCLE => MS_I_CYCLE,
		MS_H_OR_Q_OP_DOT_A_CY_DOT_A_RING_2_TIME => MS_H_OR_Q_OP_DOT_A_CY_DOT_A_RING_2_TIME,
		MS_LB_OP_DOT_B_CY => MS_LB_OP_DOT_B_CY,
		MS_A_OR_S_DOT_B_CYCLE => MS_A_OR_S_DOT_B_CYCLE,
		PS_X_CYCLE => PS_X_CYCLE,
		PS_1401_MODE => PS_1401_MODE,
		MS_A_OR_S_DOT_B_DOT_1_DOT_T_DOT_BW_DOT_Y_OR_X_DOT_1401 => MS_A_OR_S_DOT_B_DOT_1_DOT_T_DOT_BW_DOT_Y_OR_X_DOT_1401,
		MS_LB_DOT_B_CYCLE_DOT_EXTENSION_LATCH => MS_LB_DOT_B_CYCLE_DOT_EXTENSION_LATCH,
		PS_GATE_A_CH_TO_ZONE_ADDER => PS_GATE_A_CH_TO_ZONE_ADDER,
		PS_GATE_BIN_A12_TO_ZONE_ADDER => PS_GATE_BIN_A12_TO_ZONE_ADDER,
		PS_GATE_BIN_A48_TO_ZONE_ADDER => PS_GATE_BIN_A48_TO_ZONE_ADDER,
		PS_GATE_B_CH_TO_ZONE_ADDER => PS_GATE_B_CH_TO_ZONE_ADDER,
		PS_GATE_ADD_CAR_TO_ZONE_ADDER => PS_GATE_ADD_CAR_TO_ZONE_ADDER);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

end;
