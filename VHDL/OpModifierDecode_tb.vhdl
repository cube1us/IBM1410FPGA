-- Test BenchVHDL for IBM SMS ALD group OpModifierDecode
-- Title: OpModifierDecode
-- IBM Machine Name 1411
-- Generated by GenerateHDL on 7/20/2020 4:36:01 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity OpModifierDecode_tb is
end OpModifierDecode_tb;

architecture behavioral of OpModifierDecode_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component OpModifierDecode
	    Port (
		FPGA_CLK: in STD_LOGIC;
		PS_OP_MOD_SYM_IO_STATUS_STAR_1414_STAR: in STD_LOGIC;
		MS_E_CH_UNOVLP_IN_PROCESS: in STD_LOGIC;
		MS_F_CH_UNOVLP_IN_PROCESS: in STD_LOGIC;
		MS_1401_READ_TRIGGER: in STD_LOGIC;
		PS_R_OR_DOLL_SGN_OP_MOD_STAR_SIF: in STD_LOGIC;
		PS_R_OR_DOLL_SGN_OP_MOD_STAR_SIF_JRJ: in STD_LOGIC;
		PS_W_OR_X_SYMBOL_OP_MOD_STAR_SIF: in STD_LOGIC;
		PS_W_OR_X_SYMBOL_OP_MOD_STAR_SIF_JRJ: in STD_LOGIC;
		MS_1401_PRINT_TRIGGER: in STD_LOGIC;
		MS_1401_PUNCH_TRIGGER: in STD_LOGIC;
		PS_OP_MOD_REG_NOT_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		PS_OP_MOD_REG_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		MS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD: out STD_LOGIC;
		PS_NOT_B_DOT_A_DOT_8_OP_MOD: out STD_LOGIC;
		PS_NOT_B_DOT_NOT_A_DOT_8_OP_MOD: out STD_LOGIC;
		PS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD: out STD_LOGIC;
		PS_NOT_4_DOT_NOT_2_DOT_NOT_1_OP_MOD: out STD_LOGIC;
		PS_NOT_4_DOT_NOT_2_DOT_1_OP_MOD: out STD_LOGIC;
		PS_NOT_4_DOT_2_DOT_1_OP_MOD: out STD_LOGIC;
		PS_NOT_4_DOT_2_DOT_NOT_1_OP_MOD: out STD_LOGIC;
		PS_4_DOT_2_DOT_NOT_1_OP_MOD: out STD_LOGIC;
		PS_4_DOT_2_DOT_1_OP_MOD: out STD_LOGIC;
		PS_4_DOT_NOT_2_DOT_1_OP_MOD: out STD_LOGIC;
		PS_4_DOT_NOT_2_DOT_NOT_1_OP_MOD: out STD_LOGIC;
		PS_Z_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_BLANK_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		MS_9_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		MS_COML_AT_SYM_OP_MODIFIER: out STD_LOGIC;
		PS_SLASH_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_S_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_T_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_U_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_W_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_V_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_B_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_E_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		MS_W_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		MS_B_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		MS_E_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_F_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		MS_Q_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_Q_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_LOZ_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		MS_LOZ_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_N_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_R_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_M_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		MS_R_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		MS_M_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_DOLLAR_SIGN_SYM_OP_MODIFIER: out STD_LOGIC;
		PS_OP_MOD_SYM_FOR_I_O_STATUS: out STD_LOGIC;
		PS_PERCENT_SIGN_OP_MODIFIER: out STD_LOGIC;
		PS_A_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_RECORD_MARK_OP_MODIFIER: out STD_LOGIC;
		MS_RECORD_MARK_OP_MODIFIER: out STD_LOGIC;
		PS_C_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_D_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_G_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_QUESTION_MK_OP_MODIFIER: out STD_LOGIC;
		MS_GROUP_MARK_OP_MODIFIER: out STD_LOGIC;
		PS_L_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_EXCLAM_MK_OP_MODIFIER: out STD_LOGIC;
		MS_EXCLAM_MK_OP_MODIFIER: out STD_LOGIC;
		PS_K_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_P_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_ONE_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_TWO_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_X_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_Y_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_ASTERISK_OP_MODIFIER: out STD_LOGIC;
		MS_ASTERISK_OP_MODIFIER: out STD_LOGIC;
		PS_X_SYMBOL_OP_MOD_GATED: out STD_LOGIC;
		MS_X_SYMBOL_OP_MOD_GATED: out STD_LOGIC;
		PS_Q_OR_V_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_W_OR_X_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD: out STD_LOGIC;
		MS_Q_OR_V_SYMBOL_OP_MODIFIER: out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_OP_MOD_SYM_IO_STATUS_STAR_1414_STAR: STD_LOGIC := '0';
	signal MS_E_CH_UNOVLP_IN_PROCESS: STD_LOGIC := '1';
	signal MS_F_CH_UNOVLP_IN_PROCESS: STD_LOGIC := '1';
	signal MS_1401_READ_TRIGGER: STD_LOGIC := '1';
	signal PS_R_OR_DOLL_SGN_OP_MOD_STAR_SIF: STD_LOGIC := '0';
	signal PS_R_OR_DOLL_SGN_OP_MOD_STAR_SIF_JRJ: STD_LOGIC := '0';
	signal PS_W_OR_X_SYMBOL_OP_MOD_STAR_SIF: STD_LOGIC := '0';
	signal PS_W_OR_X_SYMBOL_OP_MOD_STAR_SIF_JRJ: STD_LOGIC := '0';
	signal MS_1401_PRINT_TRIGGER: STD_LOGIC := '1';
	signal MS_1401_PUNCH_TRIGGER: STD_LOGIC := '1';
	signal PS_OP_MOD_REG_NOT_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";
	signal PS_OP_MOD_REG_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";

	-- Outputs

	signal MS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD: STD_LOGIC;
	signal PS_NOT_B_DOT_A_DOT_8_OP_MOD: STD_LOGIC;
	signal PS_NOT_B_DOT_NOT_A_DOT_8_OP_MOD: STD_LOGIC;
	signal PS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD: STD_LOGIC;
	signal PS_NOT_4_DOT_NOT_2_DOT_NOT_1_OP_MOD: STD_LOGIC;
	signal PS_NOT_4_DOT_NOT_2_DOT_1_OP_MOD: STD_LOGIC;
	signal PS_NOT_4_DOT_2_DOT_1_OP_MOD: STD_LOGIC;
	signal PS_NOT_4_DOT_2_DOT_NOT_1_OP_MOD: STD_LOGIC;
	signal PS_4_DOT_2_DOT_NOT_1_OP_MOD: STD_LOGIC;
	signal PS_4_DOT_2_DOT_1_OP_MOD: STD_LOGIC;
	signal PS_4_DOT_NOT_2_DOT_1_OP_MOD: STD_LOGIC;
	signal PS_4_DOT_NOT_2_DOT_NOT_1_OP_MOD: STD_LOGIC;
	signal PS_Z_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_BLANK_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal MS_9_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal MS_COML_AT_SYM_OP_MODIFIER: STD_LOGIC;
	signal PS_SLASH_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_S_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_T_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_U_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_W_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_V_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_B_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_E_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal MS_W_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal MS_B_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal MS_E_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_F_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal MS_Q_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_Q_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_LOZ_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal MS_LOZ_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_N_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_R_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_M_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal MS_R_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal MS_M_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_DOLLAR_SIGN_SYM_OP_MODIFIER: STD_LOGIC;
	signal PS_OP_MOD_SYM_FOR_I_O_STATUS: STD_LOGIC;
	signal PS_PERCENT_SIGN_OP_MODIFIER: STD_LOGIC;
	signal PS_A_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_RECORD_MARK_OP_MODIFIER: STD_LOGIC;
	signal MS_RECORD_MARK_OP_MODIFIER: STD_LOGIC;
	signal PS_C_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_D_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_G_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_QUESTION_MK_OP_MODIFIER: STD_LOGIC;
	signal MS_GROUP_MARK_OP_MODIFIER: STD_LOGIC;
	signal PS_L_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_EXCLAM_MK_OP_MODIFIER: STD_LOGIC;
	signal MS_EXCLAM_MK_OP_MODIFIER: STD_LOGIC;
	signal PS_K_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_P_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_ONE_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_TWO_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_X_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_Y_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_ASTERISK_OP_MODIFIER: STD_LOGIC;
	signal MS_ASTERISK_OP_MODIFIER: STD_LOGIC;
	signal PS_X_SYMBOL_OP_MOD_GATED: STD_LOGIC;
	signal MS_X_SYMBOL_OP_MOD_GATED: STD_LOGIC;
	signal PS_Q_OR_V_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_W_OR_X_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD: STD_LOGIC;
	signal MS_Q_OR_V_SYMBOL_OP_MODIFIER: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: OpModifierDecode port map(
		FPGA_CLK => FPGA_CLK,
		PS_OP_MOD_SYM_IO_STATUS_STAR_1414_STAR => PS_OP_MOD_SYM_IO_STATUS_STAR_1414_STAR,
		MS_E_CH_UNOVLP_IN_PROCESS => MS_E_CH_UNOVLP_IN_PROCESS,
		MS_F_CH_UNOVLP_IN_PROCESS => MS_F_CH_UNOVLP_IN_PROCESS,
		MS_1401_READ_TRIGGER => MS_1401_READ_TRIGGER,
		PS_R_OR_DOLL_SGN_OP_MOD_STAR_SIF => PS_R_OR_DOLL_SGN_OP_MOD_STAR_SIF,
		PS_R_OR_DOLL_SGN_OP_MOD_STAR_SIF_JRJ => PS_R_OR_DOLL_SGN_OP_MOD_STAR_SIF_JRJ,
		PS_W_OR_X_SYMBOL_OP_MOD_STAR_SIF => PS_W_OR_X_SYMBOL_OP_MOD_STAR_SIF,
		PS_W_OR_X_SYMBOL_OP_MOD_STAR_SIF_JRJ => PS_W_OR_X_SYMBOL_OP_MOD_STAR_SIF_JRJ,
		MS_1401_PRINT_TRIGGER => MS_1401_PRINT_TRIGGER,
		MS_1401_PUNCH_TRIGGER => MS_1401_PUNCH_TRIGGER,
		PS_OP_MOD_REG_NOT_BUS => PS_OP_MOD_REG_NOT_BUS,
		PS_OP_MOD_REG_BUS => PS_OP_MOD_REG_BUS,
		MS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD => MS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD,
		PS_NOT_B_DOT_A_DOT_8_OP_MOD => PS_NOT_B_DOT_A_DOT_8_OP_MOD,
		PS_NOT_B_DOT_NOT_A_DOT_8_OP_MOD => PS_NOT_B_DOT_NOT_A_DOT_8_OP_MOD,
		PS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD => PS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD,
		PS_NOT_4_DOT_NOT_2_DOT_NOT_1_OP_MOD => PS_NOT_4_DOT_NOT_2_DOT_NOT_1_OP_MOD,
		PS_NOT_4_DOT_NOT_2_DOT_1_OP_MOD => PS_NOT_4_DOT_NOT_2_DOT_1_OP_MOD,
		PS_NOT_4_DOT_2_DOT_1_OP_MOD => PS_NOT_4_DOT_2_DOT_1_OP_MOD,
		PS_NOT_4_DOT_2_DOT_NOT_1_OP_MOD => PS_NOT_4_DOT_2_DOT_NOT_1_OP_MOD,
		PS_4_DOT_2_DOT_NOT_1_OP_MOD => PS_4_DOT_2_DOT_NOT_1_OP_MOD,
		PS_4_DOT_2_DOT_1_OP_MOD => PS_4_DOT_2_DOT_1_OP_MOD,
		PS_4_DOT_NOT_2_DOT_1_OP_MOD => PS_4_DOT_NOT_2_DOT_1_OP_MOD,
		PS_4_DOT_NOT_2_DOT_NOT_1_OP_MOD => PS_4_DOT_NOT_2_DOT_NOT_1_OP_MOD,
		PS_Z_SYMBOL_OP_MODIFIER => PS_Z_SYMBOL_OP_MODIFIER,
		PS_BLANK_SYMBOL_OP_MODIFIER => PS_BLANK_SYMBOL_OP_MODIFIER,
		MS_9_SYMBOL_OP_MODIFIER => MS_9_SYMBOL_OP_MODIFIER,
		MS_COML_AT_SYM_OP_MODIFIER => MS_COML_AT_SYM_OP_MODIFIER,
		PS_SLASH_SYMBOL_OP_MODIFIER => PS_SLASH_SYMBOL_OP_MODIFIER,
		PS_S_SYMBOL_OP_MODIFIER => PS_S_SYMBOL_OP_MODIFIER,
		PS_T_SYMBOL_OP_MODIFIER => PS_T_SYMBOL_OP_MODIFIER,
		PS_U_SYMBOL_OP_MODIFIER => PS_U_SYMBOL_OP_MODIFIER,
		PS_W_SYMBOL_OP_MODIFIER => PS_W_SYMBOL_OP_MODIFIER,
		PS_V_SYMBOL_OP_MODIFIER => PS_V_SYMBOL_OP_MODIFIER,
		PS_B_SYMBOL_OP_MODIFIER => PS_B_SYMBOL_OP_MODIFIER,
		PS_E_SYMBOL_OP_MODIFIER => PS_E_SYMBOL_OP_MODIFIER,
		MS_W_SYMBOL_OP_MODIFIER => MS_W_SYMBOL_OP_MODIFIER,
		MS_B_SYMBOL_OP_MODIFIER => MS_B_SYMBOL_OP_MODIFIER,
		MS_E_SYMBOL_OP_MODIFIER => MS_E_SYMBOL_OP_MODIFIER,
		PS_F_SYMBOL_OP_MODIFIER => PS_F_SYMBOL_OP_MODIFIER,
		MS_Q_SYMBOL_OP_MODIFIER => MS_Q_SYMBOL_OP_MODIFIER,
		PS_Q_SYMBOL_OP_MODIFIER => PS_Q_SYMBOL_OP_MODIFIER,
		PS_LOZ_SYMBOL_OP_MODIFIER => PS_LOZ_SYMBOL_OP_MODIFIER,
		MS_LOZ_SYMBOL_OP_MODIFIER => MS_LOZ_SYMBOL_OP_MODIFIER,
		PS_N_SYMBOL_OP_MODIFIER => PS_N_SYMBOL_OP_MODIFIER,
		PS_R_SYMBOL_OP_MODIFIER => PS_R_SYMBOL_OP_MODIFIER,
		PS_M_SYMBOL_OP_MODIFIER => PS_M_SYMBOL_OP_MODIFIER,
		MS_R_SYMBOL_OP_MODIFIER => MS_R_SYMBOL_OP_MODIFIER,
		MS_M_SYMBOL_OP_MODIFIER => MS_M_SYMBOL_OP_MODIFIER,
		PS_DOLLAR_SIGN_SYM_OP_MODIFIER => PS_DOLLAR_SIGN_SYM_OP_MODIFIER,
		PS_OP_MOD_SYM_FOR_I_O_STATUS => PS_OP_MOD_SYM_FOR_I_O_STATUS,
		PS_PERCENT_SIGN_OP_MODIFIER => PS_PERCENT_SIGN_OP_MODIFIER,
		PS_A_SYMBOL_OP_MODIFIER => PS_A_SYMBOL_OP_MODIFIER,
		PS_RECORD_MARK_OP_MODIFIER => PS_RECORD_MARK_OP_MODIFIER,
		MS_RECORD_MARK_OP_MODIFIER => MS_RECORD_MARK_OP_MODIFIER,
		PS_C_SYMBOL_OP_MODIFIER => PS_C_SYMBOL_OP_MODIFIER,
		PS_D_SYMBOL_OP_MODIFIER => PS_D_SYMBOL_OP_MODIFIER,
		PS_G_SYMBOL_OP_MODIFIER => PS_G_SYMBOL_OP_MODIFIER,
		PS_QUESTION_MK_OP_MODIFIER => PS_QUESTION_MK_OP_MODIFIER,
		MS_GROUP_MARK_OP_MODIFIER => MS_GROUP_MARK_OP_MODIFIER,
		PS_L_SYMBOL_OP_MODIFIER => PS_L_SYMBOL_OP_MODIFIER,
		PS_EXCLAM_MK_OP_MODIFIER => PS_EXCLAM_MK_OP_MODIFIER,
		MS_EXCLAM_MK_OP_MODIFIER => MS_EXCLAM_MK_OP_MODIFIER,
		PS_K_SYMBOL_OP_MODIFIER => PS_K_SYMBOL_OP_MODIFIER,
		PS_P_SYMBOL_OP_MODIFIER => PS_P_SYMBOL_OP_MODIFIER,
		PS_ONE_SYMBOL_OP_MODIFIER => PS_ONE_SYMBOL_OP_MODIFIER,
		PS_TWO_SYMBOL_OP_MODIFIER => PS_TWO_SYMBOL_OP_MODIFIER,
		PS_X_SYMBOL_OP_MODIFIER => PS_X_SYMBOL_OP_MODIFIER,
		PS_Y_SYMBOL_OP_MODIFIER => PS_Y_SYMBOL_OP_MODIFIER,
		PS_ASTERISK_OP_MODIFIER => PS_ASTERISK_OP_MODIFIER,
		MS_ASTERISK_OP_MODIFIER => MS_ASTERISK_OP_MODIFIER,
		PS_X_SYMBOL_OP_MOD_GATED => PS_X_SYMBOL_OP_MOD_GATED,
		MS_X_SYMBOL_OP_MOD_GATED => MS_X_SYMBOL_OP_MOD_GATED,
		PS_Q_OR_V_SYMBOL_OP_MODIFIER => PS_Q_OR_V_SYMBOL_OP_MODIFIER,
		PS_W_OR_X_SYMBOL_OP_MODIFIER => PS_W_OR_X_SYMBOL_OP_MODIFIER,
		PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD => PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,
		MS_Q_OR_V_SYMBOL_OP_MODIFIER => MS_Q_OR_V_SYMBOL_OP_MODIFIER);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

END;
