-- Test BenchVHDL for IBM SMS ALD group OpModifierDecode
-- Title: OpModifierDecode
-- IBM Machine Name 1411
-- Generated by GenerateHDL on 7/20/2020 4:36:01 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;


-- End of include from HDLTemplate.vhdl

entity OpModifierDecode_tb is
end OpModifierDecode_tb;

architecture behavioral of OpModifierDecode_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component OpModifierDecode
	    Port (
		FPGA_CLK: in STD_LOGIC;
		PS_OP_MOD_SYM_IO_STATUS_STAR_1414_STAR: in STD_LOGIC;
		MS_E_CH_UNOVLP_IN_PROCESS: in STD_LOGIC;
		MS_F_CH_UNOVLP_IN_PROCESS: in STD_LOGIC;
		MS_1401_READ_TRIGGER: in STD_LOGIC;
		PS_R_OR_DOLL_SGN_OP_MOD_STAR_SIF: in STD_LOGIC;
		PS_R_OR_DOLL_SGN_OP_MOD_STAR_SIF_JRJ: in STD_LOGIC;
		PS_W_OR_X_SYMBOL_OP_MOD_STAR_SIF: in STD_LOGIC;
		PS_W_OR_X_SYMBOL_OP_MOD_STAR_SIF_JRJ: in STD_LOGIC;
		MS_1401_PRINT_TRIGGER: in STD_LOGIC;
		MS_1401_PUNCH_TRIGGER: in STD_LOGIC;
		PS_OP_MOD_REG_NOT_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		PS_OP_MOD_REG_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		MS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD: out STD_LOGIC;
		PS_NOT_B_DOT_A_DOT_8_OP_MOD: out STD_LOGIC;
		PS_NOT_B_DOT_NOT_A_DOT_8_OP_MOD: out STD_LOGIC;
		PS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD: out STD_LOGIC;
		PS_NOT_4_DOT_NOT_2_DOT_NOT_1_OP_MOD: out STD_LOGIC;
		PS_NOT_4_DOT_NOT_2_DOT_1_OP_MOD: out STD_LOGIC;
		PS_NOT_4_DOT_2_DOT_1_OP_MOD: out STD_LOGIC;
		PS_NOT_4_DOT_2_DOT_NOT_1_OP_MOD: out STD_LOGIC;
		PS_4_DOT_2_DOT_NOT_1_OP_MOD: out STD_LOGIC;
		PS_4_DOT_2_DOT_1_OP_MOD: out STD_LOGIC;
		PS_4_DOT_NOT_2_DOT_1_OP_MOD: out STD_LOGIC;
		PS_4_DOT_NOT_2_DOT_NOT_1_OP_MOD: out STD_LOGIC;
		PS_Z_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_BLANK_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		MS_9_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		MS_COML_AT_SYM_OP_MODIFIER: out STD_LOGIC;
		PS_SLASH_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_S_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_T_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_U_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_W_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_V_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_B_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_E_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		MS_W_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		MS_B_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		MS_E_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_F_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		MS_Q_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_Q_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_LOZ_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		MS_LOZ_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_N_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_R_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_M_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		MS_R_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		MS_M_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_DOLLAR_SIGN_SYM_OP_MODIFIER: out STD_LOGIC;
		PS_OP_MOD_SYM_FOR_I_O_STATUS: out STD_LOGIC;
		PS_PERCENT_SIGN_OP_MODIFIER: out STD_LOGIC;
		PS_A_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_RECORD_MARK_OP_MODIFIER: out STD_LOGIC;
		MS_RECORD_MARK_OP_MODIFIER: out STD_LOGIC;
		PS_C_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_D_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_G_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_QUESTION_MK_OP_MODIFIER: out STD_LOGIC;
		MS_GROUP_MARK_OP_MODIFIER: out STD_LOGIC;
		PS_L_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_EXCLAM_MK_OP_MODIFIER: out STD_LOGIC;
		MS_EXCLAM_MK_OP_MODIFIER: out STD_LOGIC;
		PS_K_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_P_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_ONE_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_TWO_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_X_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_Y_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_ASTERISK_OP_MODIFIER: out STD_LOGIC;
		MS_ASTERISK_OP_MODIFIER: out STD_LOGIC;
		PS_X_SYMBOL_OP_MOD_GATED: out STD_LOGIC;
		MS_X_SYMBOL_OP_MOD_GATED: out STD_LOGIC;
		PS_Q_OR_V_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_W_OR_X_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD: out STD_LOGIC;
		MS_Q_OR_V_SYMBOL_OP_MODIFIER: out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_OP_MOD_SYM_IO_STATUS_STAR_1414_STAR: STD_LOGIC := '0';
	signal MS_E_CH_UNOVLP_IN_PROCESS: STD_LOGIC := '1';
	signal MS_F_CH_UNOVLP_IN_PROCESS: STD_LOGIC := '1';
	signal MS_1401_READ_TRIGGER: STD_LOGIC := '1';
	signal PS_R_OR_DOLL_SGN_OP_MOD_STAR_SIF: STD_LOGIC := '0';
	signal PS_R_OR_DOLL_SGN_OP_MOD_STAR_SIF_JRJ: STD_LOGIC := '0';
	signal PS_W_OR_X_SYMBOL_OP_MOD_STAR_SIF: STD_LOGIC := '0';
	signal PS_W_OR_X_SYMBOL_OP_MOD_STAR_SIF_JRJ: STD_LOGIC := '0';
	signal MS_1401_PRINT_TRIGGER: STD_LOGIC := '1';
	signal MS_1401_PUNCH_TRIGGER: STD_LOGIC := '1';
	signal PS_OP_MOD_REG_NOT_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";
	signal PS_OP_MOD_REG_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";

	-- Outputs

	signal MS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD: STD_LOGIC;
	signal PS_NOT_B_DOT_A_DOT_8_OP_MOD: STD_LOGIC;
	signal PS_NOT_B_DOT_NOT_A_DOT_8_OP_MOD: STD_LOGIC;
	signal PS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD: STD_LOGIC;
	signal PS_NOT_4_DOT_NOT_2_DOT_NOT_1_OP_MOD: STD_LOGIC;
	signal PS_NOT_4_DOT_NOT_2_DOT_1_OP_MOD: STD_LOGIC;
	signal PS_NOT_4_DOT_2_DOT_1_OP_MOD: STD_LOGIC;
	signal PS_NOT_4_DOT_2_DOT_NOT_1_OP_MOD: STD_LOGIC;
	signal PS_4_DOT_2_DOT_NOT_1_OP_MOD: STD_LOGIC;
	signal PS_4_DOT_2_DOT_1_OP_MOD: STD_LOGIC;
	signal PS_4_DOT_NOT_2_DOT_1_OP_MOD: STD_LOGIC;
	signal PS_4_DOT_NOT_2_DOT_NOT_1_OP_MOD: STD_LOGIC;
	signal PS_Z_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_BLANK_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal MS_9_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal MS_COML_AT_SYM_OP_MODIFIER: STD_LOGIC;
	signal PS_SLASH_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_S_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_T_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_U_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_W_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_V_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_B_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_E_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal MS_W_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal MS_B_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal MS_E_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_F_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal MS_Q_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_Q_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_LOZ_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal MS_LOZ_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_N_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_R_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_M_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal MS_R_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal MS_M_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_DOLLAR_SIGN_SYM_OP_MODIFIER: STD_LOGIC;
	signal PS_OP_MOD_SYM_FOR_I_O_STATUS: STD_LOGIC;
	signal PS_PERCENT_SIGN_OP_MODIFIER: STD_LOGIC;
	signal PS_A_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_RECORD_MARK_OP_MODIFIER: STD_LOGIC;
	signal MS_RECORD_MARK_OP_MODIFIER: STD_LOGIC;
	signal PS_C_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_D_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_G_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_QUESTION_MK_OP_MODIFIER: STD_LOGIC;
	signal MS_GROUP_MARK_OP_MODIFIER: STD_LOGIC;
	signal PS_L_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_EXCLAM_MK_OP_MODIFIER: STD_LOGIC;
	signal MS_EXCLAM_MK_OP_MODIFIER: STD_LOGIC;
	signal PS_K_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_P_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_ONE_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_TWO_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_X_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_Y_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_ASTERISK_OP_MODIFIER: STD_LOGIC;
	signal MS_ASTERISK_OP_MODIFIER: STD_LOGIC;
	signal PS_X_SYMBOL_OP_MOD_GATED: STD_LOGIC;
	signal MS_X_SYMBOL_OP_MOD_GATED: STD_LOGIC;
	signal PS_Q_OR_V_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_W_OR_X_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD: STD_LOGIC;
	signal MS_Q_OR_V_SYMBOL_OP_MODIFIER: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: OpModifierDecode port map(
		FPGA_CLK => FPGA_CLK,
		PS_OP_MOD_SYM_IO_STATUS_STAR_1414_STAR => PS_OP_MOD_SYM_IO_STATUS_STAR_1414_STAR,
		MS_E_CH_UNOVLP_IN_PROCESS => MS_E_CH_UNOVLP_IN_PROCESS,
		MS_F_CH_UNOVLP_IN_PROCESS => MS_F_CH_UNOVLP_IN_PROCESS,
		MS_1401_READ_TRIGGER => MS_1401_READ_TRIGGER,
		PS_R_OR_DOLL_SGN_OP_MOD_STAR_SIF => PS_R_OR_DOLL_SGN_OP_MOD_STAR_SIF,
		PS_R_OR_DOLL_SGN_OP_MOD_STAR_SIF_JRJ => PS_R_OR_DOLL_SGN_OP_MOD_STAR_SIF_JRJ,
		PS_W_OR_X_SYMBOL_OP_MOD_STAR_SIF => PS_W_OR_X_SYMBOL_OP_MOD_STAR_SIF,
		PS_W_OR_X_SYMBOL_OP_MOD_STAR_SIF_JRJ => PS_W_OR_X_SYMBOL_OP_MOD_STAR_SIF_JRJ,
		MS_1401_PRINT_TRIGGER => MS_1401_PRINT_TRIGGER,
		MS_1401_PUNCH_TRIGGER => MS_1401_PUNCH_TRIGGER,
		PS_OP_MOD_REG_NOT_BUS => PS_OP_MOD_REG_NOT_BUS,
		PS_OP_MOD_REG_BUS => PS_OP_MOD_REG_BUS,
		MS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD => MS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD,
		PS_NOT_B_DOT_A_DOT_8_OP_MOD => PS_NOT_B_DOT_A_DOT_8_OP_MOD,
		PS_NOT_B_DOT_NOT_A_DOT_8_OP_MOD => PS_NOT_B_DOT_NOT_A_DOT_8_OP_MOD,
		PS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD => PS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD,
		PS_NOT_4_DOT_NOT_2_DOT_NOT_1_OP_MOD => PS_NOT_4_DOT_NOT_2_DOT_NOT_1_OP_MOD,
		PS_NOT_4_DOT_NOT_2_DOT_1_OP_MOD => PS_NOT_4_DOT_NOT_2_DOT_1_OP_MOD,
		PS_NOT_4_DOT_2_DOT_1_OP_MOD => PS_NOT_4_DOT_2_DOT_1_OP_MOD,
		PS_NOT_4_DOT_2_DOT_NOT_1_OP_MOD => PS_NOT_4_DOT_2_DOT_NOT_1_OP_MOD,
		PS_4_DOT_2_DOT_NOT_1_OP_MOD => PS_4_DOT_2_DOT_NOT_1_OP_MOD,
		PS_4_DOT_2_DOT_1_OP_MOD => PS_4_DOT_2_DOT_1_OP_MOD,
		PS_4_DOT_NOT_2_DOT_1_OP_MOD => PS_4_DOT_NOT_2_DOT_1_OP_MOD,
		PS_4_DOT_NOT_2_DOT_NOT_1_OP_MOD => PS_4_DOT_NOT_2_DOT_NOT_1_OP_MOD,
		PS_Z_SYMBOL_OP_MODIFIER => PS_Z_SYMBOL_OP_MODIFIER,
		PS_BLANK_SYMBOL_OP_MODIFIER => PS_BLANK_SYMBOL_OP_MODIFIER,
		MS_9_SYMBOL_OP_MODIFIER => MS_9_SYMBOL_OP_MODIFIER,
		MS_COML_AT_SYM_OP_MODIFIER => MS_COML_AT_SYM_OP_MODIFIER,
		PS_SLASH_SYMBOL_OP_MODIFIER => PS_SLASH_SYMBOL_OP_MODIFIER,
		PS_S_SYMBOL_OP_MODIFIER => PS_S_SYMBOL_OP_MODIFIER,
		PS_T_SYMBOL_OP_MODIFIER => PS_T_SYMBOL_OP_MODIFIER,
		PS_U_SYMBOL_OP_MODIFIER => PS_U_SYMBOL_OP_MODIFIER,
		PS_W_SYMBOL_OP_MODIFIER => PS_W_SYMBOL_OP_MODIFIER,
		PS_V_SYMBOL_OP_MODIFIER => PS_V_SYMBOL_OP_MODIFIER,
		PS_B_SYMBOL_OP_MODIFIER => PS_B_SYMBOL_OP_MODIFIER,
		PS_E_SYMBOL_OP_MODIFIER => PS_E_SYMBOL_OP_MODIFIER,
		MS_W_SYMBOL_OP_MODIFIER => MS_W_SYMBOL_OP_MODIFIER,
		MS_B_SYMBOL_OP_MODIFIER => MS_B_SYMBOL_OP_MODIFIER,
		MS_E_SYMBOL_OP_MODIFIER => MS_E_SYMBOL_OP_MODIFIER,
		PS_F_SYMBOL_OP_MODIFIER => PS_F_SYMBOL_OP_MODIFIER,
		MS_Q_SYMBOL_OP_MODIFIER => MS_Q_SYMBOL_OP_MODIFIER,
		PS_Q_SYMBOL_OP_MODIFIER => PS_Q_SYMBOL_OP_MODIFIER,
		PS_LOZ_SYMBOL_OP_MODIFIER => PS_LOZ_SYMBOL_OP_MODIFIER,
		MS_LOZ_SYMBOL_OP_MODIFIER => MS_LOZ_SYMBOL_OP_MODIFIER,
		PS_N_SYMBOL_OP_MODIFIER => PS_N_SYMBOL_OP_MODIFIER,
		PS_R_SYMBOL_OP_MODIFIER => PS_R_SYMBOL_OP_MODIFIER,
		PS_M_SYMBOL_OP_MODIFIER => PS_M_SYMBOL_OP_MODIFIER,
		MS_R_SYMBOL_OP_MODIFIER => MS_R_SYMBOL_OP_MODIFIER,
		MS_M_SYMBOL_OP_MODIFIER => MS_M_SYMBOL_OP_MODIFIER,
		PS_DOLLAR_SIGN_SYM_OP_MODIFIER => PS_DOLLAR_SIGN_SYM_OP_MODIFIER,
		PS_OP_MOD_SYM_FOR_I_O_STATUS => PS_OP_MOD_SYM_FOR_I_O_STATUS,
		PS_PERCENT_SIGN_OP_MODIFIER => PS_PERCENT_SIGN_OP_MODIFIER,
		PS_A_SYMBOL_OP_MODIFIER => PS_A_SYMBOL_OP_MODIFIER,
		PS_RECORD_MARK_OP_MODIFIER => PS_RECORD_MARK_OP_MODIFIER,
		MS_RECORD_MARK_OP_MODIFIER => MS_RECORD_MARK_OP_MODIFIER,
		PS_C_SYMBOL_OP_MODIFIER => PS_C_SYMBOL_OP_MODIFIER,
		PS_D_SYMBOL_OP_MODIFIER => PS_D_SYMBOL_OP_MODIFIER,
		PS_G_SYMBOL_OP_MODIFIER => PS_G_SYMBOL_OP_MODIFIER,
		PS_QUESTION_MK_OP_MODIFIER => PS_QUESTION_MK_OP_MODIFIER,
		MS_GROUP_MARK_OP_MODIFIER => MS_GROUP_MARK_OP_MODIFIER,
		PS_L_SYMBOL_OP_MODIFIER => PS_L_SYMBOL_OP_MODIFIER,
		PS_EXCLAM_MK_OP_MODIFIER => PS_EXCLAM_MK_OP_MODIFIER,
		MS_EXCLAM_MK_OP_MODIFIER => MS_EXCLAM_MK_OP_MODIFIER,
		PS_K_SYMBOL_OP_MODIFIER => PS_K_SYMBOL_OP_MODIFIER,
		PS_P_SYMBOL_OP_MODIFIER => PS_P_SYMBOL_OP_MODIFIER,
		PS_ONE_SYMBOL_OP_MODIFIER => PS_ONE_SYMBOL_OP_MODIFIER,
		PS_TWO_SYMBOL_OP_MODIFIER => PS_TWO_SYMBOL_OP_MODIFIER,
		PS_X_SYMBOL_OP_MODIFIER => PS_X_SYMBOL_OP_MODIFIER,
		PS_Y_SYMBOL_OP_MODIFIER => PS_Y_SYMBOL_OP_MODIFIER,
		PS_ASTERISK_OP_MODIFIER => PS_ASTERISK_OP_MODIFIER,
		MS_ASTERISK_OP_MODIFIER => MS_ASTERISK_OP_MODIFIER,
		PS_X_SYMBOL_OP_MOD_GATED => PS_X_SYMBOL_OP_MOD_GATED,
		MS_X_SYMBOL_OP_MOD_GATED => MS_X_SYMBOL_OP_MOD_GATED,
		PS_Q_OR_V_SYMBOL_OP_MODIFIER => PS_Q_OR_V_SYMBOL_OP_MODIFIER,
		PS_W_OR_X_SYMBOL_OP_MODIFIER => PS_W_OR_X_SYMBOL_OP_MODIFIER,
		PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD => PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,
		MS_Q_OR_V_SYMBOL_OP_MODIFIER => MS_Q_OR_V_SYMBOL_OP_MODIFIER);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

PS_OP_MOD_REG_NOT_BUS <= NOT PS_OP_MOD_REG_BUS;

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;
   
   variable OpModifierBCD: BCD.BCD;
   variable testChar: string(1 to 6);
   
   begin

   -- Your test bench code

   -- Sampe usage:  OpModifierBCD := BCD.BCD_Asterisk;
   
   testName := "13.12.05.1        ";
   
   PS_OP_MOD_REG_BUS <= "00000000";
   wait for 30 ns;   
   check1(PS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD,'1',testName,"1A");
   check1(MS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD,'0',testName,"1B");
   check1(PS_NOT_B_DOT_NOT_A_DOT_8_OP_MOD,'0',testName,"1C");
   check1(PS_NOT_B_DOT_A_DOT_8_OP_MOD,'0',testName,"1D");
   
   PS_OP_MOD_REG_BUS <= "00001000";
   wait for 30 ns;   
   check1(PS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD,'0',testName,"2A");
   check1(MS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD,'1',testName,"2B");
   check1(PS_NOT_B_DOT_NOT_A_DOT_8_OP_MOD,'1',testName,"2C");
   check1(PS_NOT_B_DOT_A_DOT_8_OP_MOD,'0',testName,"2D");
   
   PS_OP_MOD_REG_BUS <= "00010000";
   wait for 30 ns;   
   check1(PS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD,'0',testName,"3A");
   check1(MS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD,'1',testName,"3B");
   check1(PS_NOT_B_DOT_NOT_A_DOT_8_OP_MOD,'0',testName,"3C");
   check1(PS_NOT_B_DOT_A_DOT_8_OP_MOD,'0',testName,"3D");

   PS_OP_MOD_REG_BUS <= "00011000";
   wait for 30 ns;   
   check1(PS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD,'0',testName,"4A");
   check1(MS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD,'1',testName,"4B");
   check1(PS_NOT_B_DOT_NOT_A_DOT_8_OP_MOD,'0',testName,"4C");
   check1(PS_NOT_B_DOT_A_DOT_8_OP_MOD,'1',testName,"4D");

   PS_OP_MOD_REG_BUS <= "00100000";
   wait for 30 ns;   
   check1(PS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD,'0',testName,"5A");
   check1(MS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD,'1',testName,"5B");
   check1(PS_NOT_B_DOT_NOT_A_DOT_8_OP_MOD,'0',testName,"5C");
   check1(PS_NOT_B_DOT_A_DOT_8_OP_MOD,'0',testName,"5D");

   PS_OP_MOD_REG_BUS <= "00101000";
   wait for 30 ns;   
   check1(PS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD,'0',testName,"6A");
   check1(MS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD,'1',testName,"6B");
   check1(PS_NOT_B_DOT_NOT_A_DOT_8_OP_MOD,'0',testName,"6C");
   check1(PS_NOT_B_DOT_A_DOT_8_OP_MOD,'0',testName,"6D");

   PS_OP_MOD_REG_BUS <= "00110000";
   wait for 30 ns;   
   check1(PS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD,'0',testName,"7A");
   check1(MS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD,'1',testName,"7B");
   check1(PS_NOT_B_DOT_NOT_A_DOT_8_OP_MOD,'0',testName,"7C");
   check1(PS_NOT_B_DOT_A_DOT_8_OP_MOD,'0',testName,"7D");

   PS_OP_MOD_REG_BUS <= "00111000";
   wait for 30 ns;   
   check1(PS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD,'0',testName,"8A");
   check1(MS_NOT_B_DOT_NOT_A_DOT_NOT_8_OP_MOD,'1',testName,"8B");
   check1(PS_NOT_B_DOT_NOT_A_DOT_8_OP_MOD,'0',testName,"8C");
   check1(PS_NOT_B_DOT_A_DOT_8_OP_MOD,'0',testName,"8D");
   
   testName := "13.12.07.1, 08.1  ";
   
   PS_OP_MOD_REG_BUS <= "00000000";
   wait for 30 ns;   
   check1(PS_NOT_4_DOT_NOT_2_DOT_NOT_1_OP_MOD,'1',testName,"1A");
   check1(PS_NOT_4_DOT_NOT_2_DOT_1_OP_MOD,'0',testName,"1B");
   check1(PS_NOT_4_DOT_2_DOT_1_OP_MOD,'0',testName,"1C");
   check1(PS_NOT_4_DOT_2_DOT_NOT_1_OP_MOD,'0',testName,"1D");
   check1(PS_4_DOT_NOT_2_DOT_NOT_1_OP_MOD,'0',testName,"1E");
   check1(PS_4_DOT_2_DOT_NOT_1_OP_MOD,'0',testName,"1F");
   check1(PS_4_DOT_NOT_2_DOT_1_OP_MOD,'0',testName,"1G");
   check1(PS_4_DOT_2_DOT_1_OP_MOD,'0',testName,"1H");
    
   PS_OP_MOD_REG_BUS <= "00000001";
   wait for 30 ns;   
   check1(PS_NOT_4_DOT_NOT_2_DOT_NOT_1_OP_MOD,'0',testName,"2A");
   check1(PS_NOT_4_DOT_NOT_2_DOT_1_OP_MOD,'1',testName,"2B");
   check1(PS_NOT_4_DOT_2_DOT_1_OP_MOD,'0',testName,"2C");
   check1(PS_NOT_4_DOT_2_DOT_NOT_1_OP_MOD,'0',testName,"2D");
   check1(PS_4_DOT_NOT_2_DOT_NOT_1_OP_MOD,'0',testName,"2E");
   check1(PS_4_DOT_2_DOT_NOT_1_OP_MOD,'0',testName,"2F");
   check1(PS_4_DOT_NOT_2_DOT_1_OP_MOD,'0',testName,"2G");
   check1(PS_4_DOT_2_DOT_1_OP_MOD,'0',testName,"2H");

   PS_OP_MOD_REG_BUS <= "00000010";
   wait for 30 ns;   
   check1(PS_NOT_4_DOT_NOT_2_DOT_NOT_1_OP_MOD,'0',testName,"3A");
   check1(PS_NOT_4_DOT_NOT_2_DOT_1_OP_MOD,'0',testName,"3B");
   check1(PS_NOT_4_DOT_2_DOT_1_OP_MOD,'0',testName,"3C");
   check1(PS_NOT_4_DOT_2_DOT_NOT_1_OP_MOD,'1',testName,"3D");
   check1(PS_4_DOT_NOT_2_DOT_NOT_1_OP_MOD,'0',testName,"3E");
   check1(PS_4_DOT_2_DOT_NOT_1_OP_MOD,'0',testName,"3F");
   check1(PS_4_DOT_NOT_2_DOT_1_OP_MOD,'0',testName,"3G");
   check1(PS_4_DOT_2_DOT_1_OP_MOD,'0',testName,"3H");

   PS_OP_MOD_REG_BUS <= "00000011";
   wait for 30 ns;   
   check1(PS_NOT_4_DOT_NOT_2_DOT_NOT_1_OP_MOD,'0',testName,"4A");
   check1(PS_NOT_4_DOT_NOT_2_DOT_1_OP_MOD,'0',testName,"4B");
   check1(PS_NOT_4_DOT_2_DOT_1_OP_MOD,'1',testName,"4C");
   check1(PS_NOT_4_DOT_2_DOT_NOT_1_OP_MOD,'0',testName,"4D");
   check1(PS_4_DOT_NOT_2_DOT_NOT_1_OP_MOD,'0',testName,"4e");
   check1(PS_4_DOT_2_DOT_NOT_1_OP_MOD,'0',testName,"4F");
   check1(PS_4_DOT_NOT_2_DOT_1_OP_MOD,'0',testName,"4G");
   check1(PS_4_DOT_2_DOT_1_OP_MOD,'0',testName,"4H");

   PS_OP_MOD_REG_BUS <= "00000100";
   wait for 30 ns;   
   check1(PS_NOT_4_DOT_NOT_2_DOT_NOT_1_OP_MOD,'0',testName,"5A");
   check1(PS_NOT_4_DOT_NOT_2_DOT_1_OP_MOD,'0',testName,"5B");
   check1(PS_NOT_4_DOT_2_DOT_1_OP_MOD,'0',testName,"5C");
   check1(PS_NOT_4_DOT_2_DOT_NOT_1_OP_MOD,'0',testName,"5D");
   check1(PS_4_DOT_NOT_2_DOT_NOT_1_OP_MOD,'1',testName,"5E");
   check1(PS_4_DOT_2_DOT_NOT_1_OP_MOD,'0',testName,"5F");
   check1(PS_4_DOT_NOT_2_DOT_1_OP_MOD,'0',testName,"5G");
   check1(PS_4_DOT_2_DOT_1_OP_MOD,'0',testName,"5H");

   PS_OP_MOD_REG_BUS <= "00000101";
   wait for 30 ns;   
   check1(PS_NOT_4_DOT_NOT_2_DOT_NOT_1_OP_MOD,'0',testName,"6A");
   check1(PS_NOT_4_DOT_NOT_2_DOT_1_OP_MOD,'0',testName,"6B");
   check1(PS_NOT_4_DOT_2_DOT_1_OP_MOD,'0',testName,"6C");
   check1(PS_NOT_4_DOT_2_DOT_NOT_1_OP_MOD,'0',testName,"6D");
   check1(PS_4_DOT_NOT_2_DOT_NOT_1_OP_MOD,'0',testName,"6E");
   check1(PS_4_DOT_2_DOT_NOT_1_OP_MOD,'0',testName,"6F");
   check1(PS_4_DOT_NOT_2_DOT_1_OP_MOD,'1',testName,"6G");
   check1(PS_4_DOT_2_DOT_1_OP_MOD,'0',testName,"6H");

   PS_OP_MOD_REG_BUS <= "00000110";
   wait for 30 ns;   
   check1(PS_NOT_4_DOT_NOT_2_DOT_NOT_1_OP_MOD,'0',testName,"7A");
   check1(PS_NOT_4_DOT_NOT_2_DOT_1_OP_MOD,'0',testName,"7B");
   check1(PS_NOT_4_DOT_2_DOT_1_OP_MOD,'0',testName,"7C");
   check1(PS_NOT_4_DOT_2_DOT_NOT_1_OP_MOD,'0',testName,"7D");
   check1(PS_4_DOT_NOT_2_DOT_NOT_1_OP_MOD,'0',testName,"7E");
   check1(PS_4_DOT_2_DOT_NOT_1_OP_MOD,'1',testName,"7F");
   check1(PS_4_DOT_NOT_2_DOT_1_OP_MOD,'0',testName,"7G");
   check1(PS_4_DOT_2_DOT_1_OP_MOD,'0',testName,"7H");

   PS_OP_MOD_REG_BUS <= "00000111";
   wait for 30 ns;   
   check1(PS_NOT_4_DOT_NOT_2_DOT_NOT_1_OP_MOD,'0',testName,"8A");
   check1(PS_NOT_4_DOT_NOT_2_DOT_1_OP_MOD,'0',testName,"8B");
   check1(PS_NOT_4_DOT_2_DOT_1_OP_MOD,'0',testName,"8C");
   check1(PS_NOT_4_DOT_2_DOT_NOT_1_OP_MOD,'0',testName,"8D");
   check1(PS_4_DOT_NOT_2_DOT_NOT_1_OP_MOD,'0',testName,"8E");
   check1(PS_4_DOT_2_DOT_NOT_1_OP_MOD,'0',testName,"8F");
   check1(PS_4_DOT_NOT_2_DOT_1_OP_MOD,'0',testName,"8G");
   check1(PS_4_DOT_2_DOT_1_OP_MOD,'1',testName,"8H");

   testName := "13.12.09.1 ...    ";

   for BCD_CHAR in BCD.BCD loop
      PS_OP_MOD_REG_BUS <= BCD.bcd_to_slv8_odd_parity(BCD_CHAR);
      wait for 30 ns;
      case BCD_CHAR is
         when BCD.BCD_BLANK =>
            testChar := "Blank ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'1',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");
                                    
         when BCD.BCD_SLASH =>
            testChar := "Slash ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'1',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");
   
            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                               
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
               
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");
                        
         when BCD.BCD_LOZENGE =>
            testChar := "Lozng ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
               
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_DOLLAR =>
            testChar := "$$$$$ ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'1',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");
   
            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
               
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'1',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_RECORD_MARK =>
            testChar := "Recmk ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_PERCENT =>
            testChar := "Prcnt ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'1',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_EXCLAMATION =>
            testChar := "!!!!! ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_ASTERISK =>
            testChar := "***** ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_1 =>
            testChar := "11111 ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'1',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_2 =>
            testChar := "22222 ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'1',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_A =>
            testChar := "AAAAA ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'1',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_B =>
            testChar := "BBBBB ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_C =>
            testChar := "CCCCC ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'1',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_D =>
            testChar := "DDDDD ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'1',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_E =>
            testChar := "EEEEE ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_F =>
            testChar := "FFFFF ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'1',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_G =>
            testChar := "GGGGG ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'1',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_K =>
            testChar := "KKKKK ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'1',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'1',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_L =>
            testChar := "LLLLL ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'1',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_M =>
            testChar := "MMMMM ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'1',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_N =>
            testChar := "NNNNN ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'1',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'1',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_P =>
            testChar := "PPPPP ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'1',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'1',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_Q =>
            testChar := "QQQQQ ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'1',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'1',testName,testChar & "$ + R"); -- Per ALD and ILD
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_R =>
            testChar := "RRRRR ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'1',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'1',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_S =>
            testChar := "SSSSS ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'1',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_T =>
            testChar := "TTTTT ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'1',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_U =>
            testChar := "UUUUU ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'1',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_V =>
            testChar := "VVVVV ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'1',testName,testChar & "W + X");  -- Per the ALD

         when BCD.BCD_W =>
            testChar := "WWWWW ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'1',testName,testChar & "W + X");

         when BCD.BCD_X =>
            testChar := "XXXXX ";
            
            check1(PS_X_SYMBOL_OP_MOD_GATED,'0',testName,testChar & "+S Gated 1");
            check1(MS_X_SYMBOL_OP_MOD_GATED,'1',testName,testChar & "+S Gated 2");
            MS_E_CH_UNOVLP_IN_PROCESS <= '0';
            wait for 30 ns;
            check1(PS_X_SYMBOL_OP_MOD_GATED,'1',testName,testChar & "+S Gated 3");
            check1(MS_X_SYMBOL_OP_MOD_GATED,'0',testName,testChar & "+S Gated 4");
            MS_E_CH_UNOVLP_IN_PROCESS <= '1';
            MS_F_CH_UNOVLP_IN_PROCESS <= '0';            
            check1(PS_X_SYMBOL_OP_MOD_GATED,'1',testName,testChar & "+S Gated 5");
            check1(MS_X_SYMBOL_OP_MOD_GATED,'0',testName,testChar & "+S Gated 6");
            MS_F_CH_UNOVLP_IN_PROCESS <= '1';                        
            
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'1',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'1',testName,testChar & "W + X");

         when BCD.BCD_Y =>
            testChar := "YYYYY ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'1',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_Z =>
            testChar := "ZZZZZ ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'1',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_9 =>
            testChar := "99999 ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'0',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'1',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_AT =>
            testChar := "@@@@@ ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'0',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'1',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_GROUP_MARK =>
            testChar := "GrpMk ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'0',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

         when BCD.BCD_QUESTION_MARK =>
            testChar := "????? ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'1',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");
                        
         when others =>
            testChar := "OTHER ";
            check1(PS_BLANK_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_SLASH_SYMBOL_OP_MODIFIER,'0',testName,testChar & "/");
            check1(PS_LOZ_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Lozenge");            
            check1(PS_DOLLAR_SIGN_SYM_OP_MODIFIER,'0',testName,testChar & "$");
            check1(PS_RECORD_MARK_OP_MODIFIER,'0',testName,testChar & "RecordMark");
            check1(PS_PERCENT_SIGN_OP_MODIFIER,'0',testName,testChar & "%");
            check1(PS_QUESTION_MK_OP_MODIFIER,'0',testName,testChar & "?");
            check1(PS_EXCLAM_MK_OP_MODIFIER,'0',testName,testChar & "!");
            check1(PS_ASTERISK_OP_MODIFIER,'0',testName,testChar & "*");

            check1(PS_ONE_SYMBOL_OP_MODIFIER,'0',testName,testChar & "1");
            check1(PS_TWO_SYMBOL_OP_MODIFIER,'0',testName,testChar & "2");            
                                                            
            check1(PS_A_SYMBOL_OP_MODIFIER,'0',testName,testChar & "A");
            check1(PS_B_SYMBOL_OP_MODIFIER,'0',testName,testChar & "B");
            check1(PS_C_SYMBOL_OP_MODIFIER,'0',testName,testChar & "C");
            check1(PS_D_SYMBOL_OP_MODIFIER,'0',testName,testChar & "D");
            check1(PS_E_SYMBOL_OP_MODIFIER,'0',testName,testChar & "E");
            check1(PS_F_SYMBOL_OP_MODIFIER,'0',testName,testChar & "F");            
            check1(PS_G_SYMBOL_OP_MODIFIER,'0',testName,testChar & "G");
            check1(PS_K_SYMBOL_OP_MODIFIER,'0',testName,testChar & "K");
            check1(PS_L_SYMBOL_OP_MODIFIER,'0',testName,testChar & "L");
            check1(PS_M_SYMBOL_OP_MODIFIER,'0',testName,testChar & "M");
            check1(PS_N_SYMBOL_OP_MODIFIER,'0',testName,testChar & "N");
            check1(PS_P_SYMBOL_OP_MODIFIER,'0',testName,testChar & "P");
            check1(PS_Q_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q");
            check1(PS_R_SYMBOL_OP_MODIFIER,'0',testName,testChar & "R");
            check1(PS_S_SYMBOL_OP_MODIFIER,'0',testName,testChar & "S");
            check1(PS_T_SYMBOL_OP_MODIFIER,'0',testName,testChar & "T");
            check1(PS_U_SYMBOL_OP_MODIFIER,'0',testName,testChar & "U");
            check1(PS_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "V");
            check1(PS_W_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W");
            check1(PS_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "X");
            check1(PS_Y_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Y");
            check1(PS_Z_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Z");
            
            check1(MS_B_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-B");
            check1(MS_E_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-E");
            check1(MS_M_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-M");
            check1(MS_Q_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q");
            check1(MS_R_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-R");
            check1(MS_W_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-W");
            check1(MS_9_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-9");
            check1(MS_COML_AT_SYM_OP_MODIFIER,'1',testName,testChar & "-@");
            check1(MS_LOZ_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Lozenge");
            check1(MS_RECORD_MARK_OP_MODIFIER,'1',testName,testChar & "-Record Mark");
            check1(MS_EXCLAM_MK_OP_MODIFIER,'1',testName,testChar & "-!");
            check1(MS_GROUP_MARK_OP_MODIFIER,'1',testName,testChar & "-Group Mark");
            check1(MS_ASTERISK_OP_MODIFIER,'1',testName,testChar & "-*");
            
            check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'0',testName,testChar & "IO Status");
            check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'0',testName,testChar & "$ + R");
            check1(PS_Q_OR_V_SYMBOL_OP_MODIFIER,'0',testName,testChar & "Q + V");
            check1(MS_Q_OR_V_SYMBOL_OP_MODIFIER,'1',testName,testChar & "-Q + V");
            check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'0',testName,testChar & "W + X");

      end case;       
   end loop;
   
   -- Note:  Character is currently all one bits (Group Mark)
   
   PS_OP_MOD_SYM_IO_STATUS_STAR_1414_STAR <= '1';
   wait for 30 ns;
   check1(PS_OP_MOD_SYM_FOR_I_O_STATUS,'1',testName,"FINISH" & "1414 IO");
   PS_OP_MOD_SYM_IO_STATUS_STAR_1414_STAR <= '0';
   
   MS_1401_READ_TRIGGER <= '0';
   wait for 30 ns;
   check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'1',testname,"FINISH 1401 READ TRIGGER");
   MS_1401_READ_TRIGGER <= '1';
   PS_R_OR_DOLL_SGN_OP_MOD_STAR_SIF <= '1';
   wait for 30 ns;
   check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'1',testname,"FINISH $ * SIF");
   PS_R_OR_DOLL_SGN_OP_MOD_STAR_SIF <= '0';
   PS_R_OR_DOLL_SGN_OP_MOD_STAR_SIF_JRJ <= '1';
   wait for 30 ns;
   check1(PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,'1',testname,"FINISH $ * SIF JRJ");
   PS_R_OR_DOLL_SGN_OP_MOD_STAR_SIF_JRJ <= '0';
   
   MS_1401_PRINT_TRIGGER <= '0';
   wait for 30 ns;
   check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'1',testName,"FINISH W+X 1401 PRINT TRIGGER");
   MS_1401_PRINT_TRIGGER <= '1';
   MS_1401_PUNCH_TRIGGER <= '0';
   wait for 30 ns;
   check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'1',testName,"FINISH W+X 1401 PUNCH TRIGGER");
   MS_1401_PUNCH_TRIGGER <= '1';
   PS_W_OR_X_SYMBOL_OP_MOD_STAR_SIF <= '1';
   wait for 30 ns;
   check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'1',testName,"FINISH W+X *SIF");
   PS_W_OR_X_SYMBOL_OP_MOD_STAR_SIF <= '0';
   PS_W_OR_X_SYMBOL_OP_MOD_STAR_SIF_JRJ <= '1';
   wait for 30 ns;
   check1(PS_W_OR_X_SYMBOL_OP_MODIFIER,'1',testName,"FINISH W+X *SIF JRJ");
   PS_W_OR_X_SYMBOL_OP_MOD_STAR_SIF_JRJ <= '0';
   
   
   
   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

END;
