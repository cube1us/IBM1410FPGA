-- Test Bench VHDL for IBM SMS ALD page 13.42.11.1
-- Title: E CH EX END OF TRAN + DISC LATCH
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 7/28/2020 2:48:01 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_13_42_11_1_E_CH_EX_END_OF_TRAN_DISC_LATCH_tb is
end ALD_13_42_11_1_E_CH_EX_END_OF_TRAN_DISC_LATCH_tb;

architecture behavioral of ALD_13_42_11_1_E_CH_EX_END_OF_TRAN_DISC_LATCH_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_13_42_11_1_E_CH_EX_END_OF_TRAN_DISC_LATCH
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_E_CH_INT_END_OF_TRF_DELAYED:	 in STD_LOGIC;
		MS_E1_REG_FULL:	 in STD_LOGIC;
		PS_E2_REG_FULL:	 in STD_LOGIC;
		PS_E_CH_2ND_ADDR_TRF:	 in STD_LOGIC;
		PS_E_CH_OUTPUT_MODE:	 in STD_LOGIC;
		MS_E2_REG_FULL:	 in STD_LOGIC;
		PS_2ND_CLOCK_PULSE_2:	 in STD_LOGIC;
		MS_E_CH_FILE_ADDR_TRANSFER:	 in STD_LOGIC;
		MS_MASTER_ERROR:	 in STD_LOGIC;
		MC_1301_END_ADDR_TRF_E_CH:	 in STD_LOGIC;
		PS_E_CH_STROBE_TRIGGER:	 in STD_LOGIC;
		MS_E_CH_RESET:	 in STD_LOGIC;
		MS_E_CH_END_OF_2ND_ADDR_TRF:	 in STD_LOGIC;
		MC_BUFFER_END_OF_TRANSFER:	 in STD_LOGIC;
		UNNAMED_26_DOT_00_DOT_01_DOT_0:	 in STD_LOGIC;
		PS_E_CH_EXT_END_OF_TRF_STAR_1412_19:	 in STD_LOGIC;
		PS_E_CH_EXT_END_OF_TRF_STAR_SIF:	 in STD_LOGIC;
		PS_E_CH_EXT_END_OF_TRF_STAR_1311:	 in STD_LOGIC;
		MS_E_CH_SELECT_ANY_BUFFER:	 in STD_LOGIC;
		MS_1401_MODE:	 in STD_LOGIC;
		PS_E_CH_IN_PROCESS:	 in STD_LOGIC;
		PS_CONS_RELEASE_OR_CANCEL:	 in STD_LOGIC;
		MC_1405_END_OF_OP_STAR_E_CH:	 in STD_LOGIC;
		MC_1301_END_OF_OP_STAR_E_CH:	 in STD_LOGIC;
		MS_E_CH_SELECT_UNIT_F:	 in STD_LOGIC;
		MC_TAPE_IN_PROCESS:	 in STD_LOGIC;
		PS_E_CH_SELECT_TAPE_DATA:	 in STD_LOGIC;
		PS_E_CH_INPUT_MODE:	 in STD_LOGIC;
		PS_CONS_MX_32_POS:	 in STD_LOGIC;
		MS_E_CH_READY_BUS:	 in STD_LOGIC;
		PS_E_CH_SELECT_UNIT_F:	 in STD_LOGIC;
		PS_E_CH_SELECT_UNIT_T_DOT_INPUT:	 in STD_LOGIC;
		PS_1ST_CLOCK_PULSE_21:	 in STD_LOGIC;
		PS_E_CH_SELECT_UNIT_T_DOT_OUTPUT:	 in STD_LOGIC;
		PS_GATE_OFF_E_CH_EXT_END_OF_TRF:	 in STD_LOGIC;
		PS_E_CH_DISCON_LATCH:	 out STD_LOGIC;
		PS_E_CH_DISCON_LATCH_JRJ:	 out STD_LOGIC;
		MC_E_CH_DISCON_TO_1301:	 out STD_LOGIC;
		MC_E_CH_DISCON_TO_1405:	 out STD_LOGIC;
		PS_E_CH_END_ADDR_TRF_STAR_1301_STAR:	 out STD_LOGIC;
		MS_E_CH_EXT_END_OF_TRANSFER:	 out STD_LOGIC;
		PS_E_CH_EXT_END_OF_TRANSFER:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_E_CH_INT_END_OF_TRF_DELAYED: STD_LOGIC := '0';
	signal MS_E1_REG_FULL: STD_LOGIC := '1';
	signal PS_E2_REG_FULL: STD_LOGIC := '0';
	signal PS_E_CH_2ND_ADDR_TRF: STD_LOGIC := '0';
	signal PS_E_CH_OUTPUT_MODE: STD_LOGIC := '0';
	signal MS_E2_REG_FULL: STD_LOGIC := '1';
	signal PS_2ND_CLOCK_PULSE_2: STD_LOGIC := '0';
	signal MS_E_CH_FILE_ADDR_TRANSFER: STD_LOGIC := '1';
	signal MS_MASTER_ERROR: STD_LOGIC := '1';
	signal MC_1301_END_ADDR_TRF_E_CH: STD_LOGIC := '1';
	signal PS_E_CH_STROBE_TRIGGER: STD_LOGIC := '0';
	signal MS_E_CH_RESET: STD_LOGIC := '1';
	signal MS_E_CH_END_OF_2ND_ADDR_TRF: STD_LOGIC := '1';
	signal MC_BUFFER_END_OF_TRANSFER: STD_LOGIC := '1';
	signal UNNAMED_26_DOT_00_DOT_01_DOT_0: STD_LOGIC := '0';
	signal PS_E_CH_EXT_END_OF_TRF_STAR_1412_19: STD_LOGIC := '0';
	signal PS_E_CH_EXT_END_OF_TRF_STAR_SIF: STD_LOGIC := '0';
	signal PS_E_CH_EXT_END_OF_TRF_STAR_1311: STD_LOGIC := '0';
	signal MS_E_CH_SELECT_ANY_BUFFER: STD_LOGIC := '1';
	signal MS_1401_MODE: STD_LOGIC := '1';
	signal PS_E_CH_IN_PROCESS: STD_LOGIC := '0';
	signal PS_CONS_RELEASE_OR_CANCEL: STD_LOGIC := '0';
	signal MC_1405_END_OF_OP_STAR_E_CH: STD_LOGIC := '1';
	signal MC_1301_END_OF_OP_STAR_E_CH: STD_LOGIC := '1';
	signal MS_E_CH_SELECT_UNIT_F: STD_LOGIC := '1';
	signal MC_TAPE_IN_PROCESS: STD_LOGIC := '1';
	signal PS_E_CH_SELECT_TAPE_DATA: STD_LOGIC := '0';
	signal PS_E_CH_INPUT_MODE: STD_LOGIC := '0';
	signal PS_CONS_MX_32_POS: STD_LOGIC := '0';
	signal MS_E_CH_READY_BUS: STD_LOGIC := '1';
	signal PS_E_CH_SELECT_UNIT_F: STD_LOGIC := '0';
	signal PS_E_CH_SELECT_UNIT_T_DOT_INPUT: STD_LOGIC := '0';
	signal PS_1ST_CLOCK_PULSE_21: STD_LOGIC := '0';
	signal PS_E_CH_SELECT_UNIT_T_DOT_OUTPUT: STD_LOGIC := '0';
	signal PS_GATE_OFF_E_CH_EXT_END_OF_TRF: STD_LOGIC := '0';

	-- Outputs

	signal PS_E_CH_DISCON_LATCH: STD_LOGIC;
	signal PS_E_CH_DISCON_LATCH_JRJ: STD_LOGIC;
	signal MC_E_CH_DISCON_TO_1301: STD_LOGIC;
	signal MC_E_CH_DISCON_TO_1405: STD_LOGIC;
	signal PS_E_CH_END_ADDR_TRF_STAR_1301_STAR: STD_LOGIC;
	signal MS_E_CH_EXT_END_OF_TRANSFER: STD_LOGIC;
	signal PS_E_CH_EXT_END_OF_TRANSFER: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_13_42_11_1_E_CH_EX_END_OF_TRAN_DISC_LATCH port map(
		FPGA_CLK => FPGA_CLK,
		PS_E_CH_INT_END_OF_TRF_DELAYED => PS_E_CH_INT_END_OF_TRF_DELAYED,
		MS_E1_REG_FULL => MS_E1_REG_FULL,
		PS_E2_REG_FULL => PS_E2_REG_FULL,
		PS_E_CH_2ND_ADDR_TRF => PS_E_CH_2ND_ADDR_TRF,
		PS_E_CH_OUTPUT_MODE => PS_E_CH_OUTPUT_MODE,
		MS_E2_REG_FULL => MS_E2_REG_FULL,
		PS_2ND_CLOCK_PULSE_2 => PS_2ND_CLOCK_PULSE_2,
		MS_E_CH_FILE_ADDR_TRANSFER => MS_E_CH_FILE_ADDR_TRANSFER,
		MS_MASTER_ERROR => MS_MASTER_ERROR,
		MC_1301_END_ADDR_TRF_E_CH => MC_1301_END_ADDR_TRF_E_CH,
		PS_E_CH_STROBE_TRIGGER => PS_E_CH_STROBE_TRIGGER,
		MS_E_CH_RESET => MS_E_CH_RESET,
		MS_E_CH_END_OF_2ND_ADDR_TRF => MS_E_CH_END_OF_2ND_ADDR_TRF,
		MC_BUFFER_END_OF_TRANSFER => MC_BUFFER_END_OF_TRANSFER,
		UNNAMED_26_DOT_00_DOT_01_DOT_0 => UNNAMED_26_DOT_00_DOT_01_DOT_0,
		PS_E_CH_EXT_END_OF_TRF_STAR_1412_19 => PS_E_CH_EXT_END_OF_TRF_STAR_1412_19,
		PS_E_CH_EXT_END_OF_TRF_STAR_SIF => PS_E_CH_EXT_END_OF_TRF_STAR_SIF,
		PS_E_CH_EXT_END_OF_TRF_STAR_1311 => PS_E_CH_EXT_END_OF_TRF_STAR_1311,
		MS_E_CH_SELECT_ANY_BUFFER => MS_E_CH_SELECT_ANY_BUFFER,
		MS_1401_MODE => MS_1401_MODE,
		PS_E_CH_IN_PROCESS => PS_E_CH_IN_PROCESS,
		PS_CONS_RELEASE_OR_CANCEL => PS_CONS_RELEASE_OR_CANCEL,
		MC_1405_END_OF_OP_STAR_E_CH => MC_1405_END_OF_OP_STAR_E_CH,
		MC_1301_END_OF_OP_STAR_E_CH => MC_1301_END_OF_OP_STAR_E_CH,
		MS_E_CH_SELECT_UNIT_F => MS_E_CH_SELECT_UNIT_F,
		MC_TAPE_IN_PROCESS => MC_TAPE_IN_PROCESS,
		PS_E_CH_SELECT_TAPE_DATA => PS_E_CH_SELECT_TAPE_DATA,
		PS_E_CH_INPUT_MODE => PS_E_CH_INPUT_MODE,
		PS_CONS_MX_32_POS => PS_CONS_MX_32_POS,
		MS_E_CH_READY_BUS => MS_E_CH_READY_BUS,
		PS_E_CH_SELECT_UNIT_F => PS_E_CH_SELECT_UNIT_F,
		PS_E_CH_SELECT_UNIT_T_DOT_INPUT => PS_E_CH_SELECT_UNIT_T_DOT_INPUT,
		PS_1ST_CLOCK_PULSE_21 => PS_1ST_CLOCK_PULSE_21,
		PS_E_CH_SELECT_UNIT_T_DOT_OUTPUT => PS_E_CH_SELECT_UNIT_T_DOT_OUTPUT,
		PS_GATE_OFF_E_CH_EXT_END_OF_TRF => PS_GATE_OFF_E_CH_EXT_END_OF_TRF,
		PS_E_CH_DISCON_LATCH => PS_E_CH_DISCON_LATCH,
		PS_E_CH_DISCON_LATCH_JRJ => PS_E_CH_DISCON_LATCH_JRJ,
		MC_E_CH_DISCON_TO_1301 => MC_E_CH_DISCON_TO_1301,
		MC_E_CH_DISCON_TO_1405 => MC_E_CH_DISCON_TO_1405,
		PS_E_CH_END_ADDR_TRF_STAR_1301_STAR => PS_E_CH_END_ADDR_TRF_STAR_1301_STAR,
		MS_E_CH_EXT_END_OF_TRANSFER => MS_E_CH_EXT_END_OF_TRANSFER,
		PS_E_CH_EXT_END_OF_TRANSFER => PS_E_CH_EXT_END_OF_TRANSFER);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin
   
   testName := "13.42.11.1        ";
   
   -- Reset the latches
   MS_E_CH_RESET <= '0';
   wait for 60 ns;
   MS_E_CH_RESET <= '1';
   
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'0',testName,"1A");
   check1(PS_E_CH_DISCON_LATCH_JRJ,'0',testName,"1B");
   check1(PS_E_CH_END_ADDR_TRF_STAR_1301_STAR,'0',testName,"1C");
   
   MC_1301_END_ADDR_TRF_E_CH <= '0';
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'0',testName,"1D");
   check1(PS_E_CH_DISCON_LATCH_JRJ,'0',testName,"1E");
   check1(PS_E_CH_END_ADDR_TRF_STAR_1301_STAR,'1',testName,"1F");
   check1(MC_E_CH_DISCON_TO_1301,'1',testName,"1G");
   check1(MC_E_CH_DISCON_TO_1405,'1',testName,"1H");
   PS_E2_REG_FULL <= '1';
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'0',testName,"1I");
   check1(PS_E_CH_DISCON_LATCH_JRJ,'0',testName,"1J");
   PS_E_CH_2ND_ADDR_TRF <= '1';   
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'1',testName,"1K");
   check1(PS_E_CH_DISCON_LATCH_JRJ,'1',testName,"1L");
   check1(MC_E_CH_DISCON_TO_1301,'0',testName,"1M");
   check1(MC_E_CH_DISCON_TO_1405,'0',testName,"1N");
   -- In spite of what the ILD says, this does latch, apparently
   MC_1301_END_ADDR_TRF_E_CH <= '1';
   PS_E2_REG_FULL <= '0';
   PS_E_CH_2ND_ADDR_TRF <= '0';   
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'1',testName,"1O");
   check1(PS_E_CH_DISCON_LATCH_JRJ,'1',testName,"1P");
   
   -- Reset the latches
   MS_E_CH_RESET <= '0';
   wait for 60 ns;
   MS_E_CH_RESET <= '1';
   wait for 30 ns;
   MS_E1_REG_FULL <= '0';
   MS_E2_REG_FULL <= '0';
   check1(PS_E_CH_DISCON_LATCH,'0',testName,"2A");
   check1(PS_E_CH_DISCON_LATCH_JRJ,'0',testName,"2B");
   PS_E_CH_2ND_ADDR_TRF <= '1';   
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'0',testName,"2C");
   MS_E1_REG_FULL <= '1';  -- NOT E1 reg full   
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'0',testName,"2D");
   MS_E2_REG_FULL <= '1'; -- NOT E2 reg Full
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'0',testName,"2E");
   PS_2ND_CLOCK_PULSE_2 <= '1';
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'0',testName,"2F");
   PS_E_CH_STROBE_TRIGGER <= '1';
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'0',testName,"2G");
   PS_E_CH_INT_END_OF_TRF_DELAYED <= '1';
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'1',testName,"2H");
   MS_E1_REG_FULL <= '0';
   MS_E2_REG_FULL <= '0';
   PS_E_CH_2ND_ADDR_TRF <= '0';   
   PS_2ND_CLOCK_PULSE_2 <= '0';
   PS_E_CH_STROBE_TRIGGER <= '0';
   PS_E_CH_INT_END_OF_TRF_DELAYED <= '0';
   -- Should stay latched
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'1',testName,"2I");
   check1(PS_E_CH_DISCON_LATCH_JRJ,'1',testName,"2J");
   
   -- Reset the latches
   MS_E_CH_RESET <= '0';
   wait for 60 ns;
   MS_E_CH_RESET <= '1';
   PS_E_CH_INT_END_OF_TRF_DELAYED <= '1';
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'0',testName,"3A");
   PS_E_CH_INPUT_MODE <= '1';
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'0',testName,"3B");
   PS_E_CH_SELECT_UNIT_F <= '1';
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'1',testName,"3C");
   PS_E_CH_INT_END_OF_TRF_DELAYED <= '0';
   PS_E_CH_INPUT_MODE <= '0';
   PS_E_CH_SELECT_UNIT_F <= '0';
   -- Should stay latched
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'1',testName,"3D");
   MS_E_CH_END_OF_2ND_ADDR_TRF <= '0';  -- Different reset this time
   wait for 30 ns;
   MS_E_CH_END_OF_2ND_ADDR_TRF <= '1';
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'0',testName,"3E");
   
   MS_E_CH_FILE_ADDR_TRANSFER <= '0';
   MS_E1_REG_FULL <= '0';
   MS_E2_REG_FULL <= '0';

   PS_E_CH_OUTPUT_MODE <= '1';
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'0',testName,"4A");
   PS_E_CH_INT_END_OF_TRF_DELAYED <= '1';
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'0',testName,"4B");
   MS_E_CH_FILE_ADDR_TRANSFER <= '1'; -- NOT ...
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'0',testName,"4C");
   MS_E1_REG_FULL <= '1';
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'0',testName,"4D");
   MS_E2_REG_FULL <= '1';
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'0',testName,"4E");
   PS_2ND_CLOCK_PULSE_2 <= '1';
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'1',testName,"4F");
   MS_E_CH_FILE_ADDR_TRANSFER <= '0';
   MS_E1_REG_FULL <= '0';
   MS_E2_REG_FULL <= '0';
   PS_E_CH_INT_END_OF_TRF_DELAYED <= '0';
   PS_2ND_CLOCK_PULSE_2 <= '0';
   PS_E_CH_OUTPUT_MODE <= '1';
   wait for 30 ns;
   -- Should stay latched   
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'1',testName,"4G");

   -- Reset the latches
   MS_E_CH_RESET <= '0';
   wait for 60 ns;
   MS_E_CH_RESET <= '1';
   wait for 30 ns;
   MS_MASTER_ERROR <= '0';
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'1',testName,"5A");
   MS_MASTER_ERROR <= '1';   
   wait for 30 ns;
   check1(PS_E_CH_DISCON_LATCH,'1',testName,"5B");

   -- Leave latch set for beginning of next test  
   
   check1(PS_E_CH_EXT_END_OF_TRANSFER,'0',testname,"6A"); 
   check1(MS_E_CH_EXT_END_OF_TRANSFER,'1',testname,"6B");
   PS_E_CH_SELECT_UNIT_T_DOT_OUTPUT <= '1';
   wait for 30 ns; 
   PS_1ST_CLOCK_PULSE_21 <= '1';
   wait for 90ns; -- Trigger setup time
   check1(PS_E_CH_EXT_END_OF_TRANSFER,'1',testname,"6C"); 
   check1(MS_E_CH_EXT_END_OF_TRANSFER,'0',testname,"6D");


   -- Reset the latches
   MS_E_CH_RESET <= '0';
   wait for 60 ns;
   MS_E_CH_RESET <= '1';
   wait for 30 ns;
   PS_E_CH_SELECT_UNIT_T_DOT_OUTPUT <= '1';  -- Should not set by itself
   wait for 30 ns;
   check1(PS_E_CH_EXT_END_OF_TRANSFER,'0',testname,"6G"); 
   check1(MS_E_CH_EXT_END_OF_TRANSFER,'1',testname,"6H");
   PS_E_CH_SELECT_UNIT_T_DOT_OUTPUT <= '0';

   
   -- Your test bench code

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS

end;
