-- VHDL for IBM SMS ALD page 12.12.41.1
-- Title: A CYCLE CONTROL-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 6/22/2020 11:23:08 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_12_12_41_1_A_CYCLE_CONTROL_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_LAST_INSN_RO_CYCLE_1:	 in STD_LOGIC;
		PS_A_CY_FIRST_OP_CODES:	 in STD_LOGIC;
		PS_B_CYCLE_1:	 in STD_LOGIC;
		PS_DATA_MOVE_TAKE_A_CYCLE:	 in STD_LOGIC;
		PS_DATA_MOVE_OP_CODE:	 in STD_LOGIC;
		MS_DATA_MOVE_LAST_EX_CYCLE:	 in STD_LOGIC;
		PS_SET_A_CYCLE_CTRL_STAR_ARITH_STAR:	 in STD_LOGIC;
		PS_B_CH_NOT_WM_BIT:	 in STD_LOGIC;
		PS_A_CH_NOT_WM_BIT:	 in STD_LOGIC;
		PS_EDIT_USE_A_CH_NU:	 in STD_LOGIC;
		PS_MOVE_ZERO_SUP_OP_CODE:	 in STD_LOGIC;
		MS_TLU_SET_A_CYCLE_CTRL_B:	 in STD_LOGIC;
		MS_CMP_MODE_SET_A_CYCLE_CTRL_A:	 in STD_LOGIC;
		PS_C_CYCLE_1:	 in STD_LOGIC;
		PS_BODY_LATCH:	 in STD_LOGIC;
		PS_1401_STORE_AR_OP_CODES:	 in STD_LOGIC;
		PS_A_CYCLE:	 in STD_LOGIC;
		PS_A_RING_2_OR_3_TIME:	 in STD_LOGIC;
		PS_SET_A_CYCLE_CTRL:	 out STD_LOGIC;
		MS_DATA_MOVE_A_CYCLE_CTRL_SET:	 out STD_LOGIC;
		MS_EDIT_SET_A_CYCLE_CTRL:	 out STD_LOGIC;
		MS_SET_A_CYCLE_CTRL_ON_Z_OP:	 out STD_LOGIC;
		MS_STORE_AR_SET_A_CYCLE_CTRL_A:	 out STD_LOGIC;
		MS_STORE_AR_SET_A_CYCLE_CTRL_B:	 out STD_LOGIC);
end ALD_12_12_41_1_A_CYCLE_CONTROL_ACC;

architecture behavioral of ALD_12_12_41_1_A_CYCLE_CONTROL_ACC is 

	signal OUT_4A_C: STD_LOGIC;
	signal OUT_5B_B: STD_LOGIC;
	signal OUT_4B_D: STD_LOGIC;
	signal OUT_2B_G: STD_LOGIC;
	signal OUT_4C_E: STD_LOGIC;
	signal OUT_4E_C: STD_LOGIC;
	signal OUT_2F_G: STD_LOGIC;
	signal OUT_2G_D: STD_LOGIC;
	signal OUT_4H_D: STD_LOGIC;
	signal OUT_3H_L: STD_LOGIC;
	signal OUT_4I_E: STD_LOGIC;
	signal OUT_DOT_4B: STD_LOGIC;
	signal OUT_DOT_2B: STD_LOGIC;

begin

	OUT_4A_C <= NOT(PS_LAST_INSN_RO_CYCLE_1 AND PS_A_CY_FIRST_OP_CODES );
	OUT_5B_B <= NOT MS_DATA_MOVE_LAST_EX_CYCLE;
	OUT_4B_D <= NOT(PS_DATA_MOVE_OP_CODE AND PS_B_CYCLE_1 AND PS_DATA_MOVE_TAKE_A_CYCLE );
	OUT_2B_G <= NOT(OUT_4A_C AND OUT_DOT_4B AND OUT_4C_E );
	OUT_4C_E <= NOT(PS_B_CH_NOT_WM_BIT AND PS_A_CH_NOT_WM_BIT AND PS_EDIT_USE_A_CH_NU );
	OUT_4E_C <= NOT(PS_EDIT_USE_A_CH_NU AND PS_A_CH_NOT_WM_BIT AND PS_MOVE_ZERO_SUP_OP_CODE );
	OUT_2F_G <= NOT(OUT_4E_C AND MS_TLU_SET_A_CYCLE_CTRL_B AND MS_CMP_MODE_SET_A_CYCLE_CTRL_A );
	OUT_2G_D <= NOT(OUT_3H_L AND OUT_4I_E );
	OUT_4H_D <= NOT(PS_C_CYCLE_1 AND PS_BODY_LATCH AND PS_1401_STORE_AR_OP_CODES );
	OUT_3H_L <= OUT_4H_D;
	OUT_4I_E <= NOT(PS_1401_STORE_AR_OP_CODES AND PS_A_CYCLE AND PS_A_RING_2_OR_3_TIME );
	OUT_DOT_4B <= OUT_5B_B OR OUT_4B_D;
	OUT_DOT_2B <= OUT_2B_G OR OUT_2F_G OR OUT_2G_D OR PS_SET_A_CYCLE_CTRL_STAR_ARITH_STAR;

	MS_EDIT_SET_A_CYCLE_CTRL <= OUT_4C_E;
	MS_SET_A_CYCLE_CTRL_ON_Z_OP <= OUT_4E_C;
	MS_STORE_AR_SET_A_CYCLE_CTRL_A <= OUT_3H_L;
	MS_STORE_AR_SET_A_CYCLE_CTRL_B <= OUT_4I_E;
	MS_DATA_MOVE_A_CYCLE_CTRL_SET <= OUT_DOT_4B;
	PS_SET_A_CYCLE_CTRL <= OUT_DOT_2B;


end;
