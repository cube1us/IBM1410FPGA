-- VHDL for IBM SMS ALD page 19.10.03.1
-- Title: INTERRUPT CONTROLS
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/14/2020 5:32:15 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_19_10_03_1_INTERRUPT_CONTROLS is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_I_RING_6_TIME:	 in STD_LOGIC;
		PS_NOT_PERCENT_TYPE_OP_CODES:	 in STD_LOGIC;
		PS_I_CYCLE_1:	 in STD_LOGIC;
		PS_INTERRUPT_REQUEST:	 in STD_LOGIC;
		MS_INTERRUPT_TEST_OP_CODE:	 in STD_LOGIC;
		PS_PRIORITY_ALERT_MODE:	 in STD_LOGIC;
		PS_B_CH_NOT_WM_BIT:	 in STD_LOGIC;
		PS_LOGIC_GATE_Z:	 in STD_LOGIC;
		PS_INTERRUPT_BRANCH:	 in STD_LOGIC;
		PS_INT_OUTQUIRY_REQUEST:	 in STD_LOGIC;
		PS_I_OP_DOT_I_CYCLE_DOT_E:	 in STD_LOGIC;
		PS_B_CYCLE_1:	 in STD_LOGIC;
		MS_PROGRAM_RESET_6:	 in STD_LOGIC;
		MS_I_OP_DOT_I_CYCLE_DOT_C:	 in STD_LOGIC;
		MS_E_CH_IN_PROCESS:	 in STD_LOGIC;
		PS_NO_SCAN_1:	 in STD_LOGIC;
		PS_INTERRUPT_TEST_OP_CODE:	 in STD_LOGIC;
		MS_START_INTERRUPT:	 out STD_LOGIC;
		PS_START_INTERRUPT:	 out STD_LOGIC;
		MS_SET_I_RING_INTERRUPT:	 out STD_LOGIC;
		MS_OUTQUIRY_INTR_COND:	 out STD_LOGIC;
		PS_OUTQUIRY_INTR_COND:	 out STD_LOGIC;
		PS_Y_OP_DOT_TEST_RESET:	 out STD_LOGIC);
end ALD_19_10_03_1_INTERRUPT_CONTROLS;

architecture behavioral of ALD_19_10_03_1_INTERRUPT_CONTROLS is 

	signal OUT_4A_D: STD_LOGIC;
	signal OUT_2A_G: STD_LOGIC;
	signal OUT_4B_E: STD_LOGIC;
	signal OUT_4C_K: STD_LOGIC;
	signal OUT_4D_E: STD_LOGIC;
	signal OUT_4E_NoPin: STD_LOGIC;
	signal OUT_4F_NoPin: STD_LOGIC;
	signal OUT_4F_NoPin_Latch: STD_LOGIC;
	signal OUT_3F_C: STD_LOGIC;
	signal OUT_3F_C_Latch: STD_LOGIC;
	signal OUT_4G_A: STD_LOGIC;
	signal OUT_3G_D: STD_LOGIC;
	signal OUT_4I_NoPin: STD_LOGIC;
	signal OUT_3I_D: STD_LOGIC;
	signal OUT_DOT_4A: STD_LOGIC;

begin

	OUT_4A_D <= NOT(PS_I_RING_6_TIME AND PS_NOT_PERCENT_TYPE_OP_CODES AND PS_I_CYCLE_1 );
	OUT_2A_G <= NOT(OUT_DOT_4A );
	OUT_4B_E <= NOT(PS_INTERRUPT_REQUEST AND MS_INTERRUPT_TEST_OP_CODE AND PS_PRIORITY_ALERT_MODE );
	OUT_4C_K <= NOT PS_B_CH_NOT_WM_BIT;
	OUT_4D_E <= NOT(PS_LOGIC_GATE_Z AND PS_INTERRUPT_BRANCH AND PS_B_CYCLE_1 );
	OUT_4E_NoPin <= NOT(PS_INT_OUTQUIRY_REQUEST AND PS_I_OP_DOT_I_CYCLE_DOT_E );
	OUT_4F_NoPin_Latch <= NOT(MS_PROGRAM_RESET_6 AND MS_I_OP_DOT_I_CYCLE_DOT_C AND OUT_3F_C );
	OUT_3F_C_Latch <= NOT(OUT_4E_NoPin AND OUT_4F_NoPin );
	OUT_4G_A <= NOT(OUT_3F_C AND MS_E_CH_IN_PROCESS );
	OUT_3G_D <= NOT OUT_4G_A;
	OUT_4I_NoPin <= NOT(PS_NO_SCAN_1 AND PS_B_CYCLE_1 AND PS_INTERRUPT_TEST_OP_CODE );
	OUT_3I_D <= NOT OUT_4I_NoPin;
	OUT_DOT_4A <= OUT_4A_D OR OUT_4B_E OR OUT_4C_K;

	PS_START_INTERRUPT <= OUT_2A_G;
	MS_SET_I_RING_INTERRUPT <= OUT_4D_E;
	MS_OUTQUIRY_INTR_COND <= OUT_4G_A;
	PS_OUTQUIRY_INTR_COND <= OUT_3G_D;
	PS_Y_OP_DOT_TEST_RESET <= OUT_3I_D;
	MS_START_INTERRUPT <= OUT_DOT_4A;

	Latch_4F: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4F_NoPin_Latch,
		Q => OUT_4F_NoPin,
		QBar => OPEN );

	Latch_3F: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3F_C_Latch,
		Q => OUT_3F_C,
		QBar => OPEN );


end;
