-- VHDL for IBM SMS ALD page 16.13.01.1
-- Title: ADD MATRIX BINARY CARRY IN-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 9/29/2020 10:58:07 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_16_13_01_1_ADD_MATRIX_BINARY_CARRY_IN_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MB_ADD_AB0:	 in STD_LOGIC;
		MB_ADD_BB0:	 in STD_LOGIC;
		MB_NO_CARRY_LATCH:	 in STD_LOGIC;
		MB_ADD_BB1:	 in STD_LOGIC;
		MB_ADD_AB1:	 in STD_LOGIC;
		MB_CARRY_LATCH:	 in STD_LOGIC;
		PB_AB0_DOT_BB0_DOT_NC:	 out STD_LOGIC;
		PB_AB0_DOT_BB1_DOT_C:	 out STD_LOGIC;
		PB_AB1_DOT_BB0_DOT_C:	 out STD_LOGIC;
		PB_AB1_DOT_BB1_DOT_NC:	 out STD_LOGIC;
		PB_AB0_DOT_BB1_DOT_NC:	 out STD_LOGIC;
		PB_AB1_DOT_BB0_DOT_NC:	 out STD_LOGIC;
		PB_AB0_DOT_BB0_DOT_C:	 out STD_LOGIC;
		PB_AB1_DOT_BB1_DOT_C:	 out STD_LOGIC);
end ALD_16_13_01_1_ADD_MATRIX_BINARY_CARRY_IN_ACC;

architecture behavioral of ALD_16_13_01_1_ADD_MATRIX_BINARY_CARRY_IN_ACC is 

	signal OUT_3A_B: STD_LOGIC;
	signal OUT_3B_C: STD_LOGIC;
	signal OUT_3C_A: STD_LOGIC;
	signal OUT_3D_B: STD_LOGIC;
	signal OUT_3E_C: STD_LOGIC;
	signal OUT_3F_A: STD_LOGIC;
	signal OUT_3G_B: STD_LOGIC;
	signal OUT_3H_C: STD_LOGIC;

begin

	OUT_3A_B <= NOT(MB_ADD_BB0 OR MB_ADD_AB0 OR MB_NO_CARRY_LATCH );
	OUT_3B_C <= NOT(MB_ADD_AB0 OR MB_ADD_BB1 OR MB_CARRY_LATCH );
	OUT_3C_A <= NOT(MB_ADD_BB0 OR MB_ADD_AB1 OR MB_CARRY_LATCH );
	OUT_3D_B <= NOT(MB_ADD_AB1 OR MB_ADD_BB1 OR MB_NO_CARRY_LATCH );
	OUT_3E_C <= NOT(MB_ADD_BB1 OR MB_NO_CARRY_LATCH OR MB_ADD_AB0 );
	OUT_3F_A <= NOT(MB_ADD_AB1 OR MB_NO_CARRY_LATCH OR MB_ADD_BB0 );
	OUT_3G_B <= NOT(MB_CARRY_LATCH OR MB_ADD_AB0 OR MB_ADD_BB0 );
	OUT_3H_C <= NOT(MB_CARRY_LATCH OR MB_ADD_AB1 OR MB_ADD_BB1 );

	PB_AB0_DOT_BB0_DOT_NC <= OUT_3A_B;
	PB_AB0_DOT_BB1_DOT_C <= OUT_3B_C;
	PB_AB1_DOT_BB0_DOT_C <= OUT_3C_A;
	PB_AB1_DOT_BB1_DOT_NC <= OUT_3D_B;
	PB_AB0_DOT_BB1_DOT_NC <= OUT_3E_C;
	PB_AB1_DOT_BB0_DOT_NC <= OUT_3F_A;
	PB_AB0_DOT_BB0_DOT_C <= OUT_3G_B;
	PB_AB1_DOT_BB1_DOT_C <= OUT_3H_C;


end;
