-- VHDL for IBM SMS ALD page 13.50.02.1
-- Title: I-O CHANNEL SELECT REGISTER
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 7/29/2020 3:23:27 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_13_50_02_1_I_O_CHANNEL_SELECT_REGISTER is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_B_CH_A_BIT:	 in STD_LOGIC;
		MS_PROGRAM_RESET_2:	 in STD_LOGIC;
		MS_RESET_I_O_CH_SEL_REG:	 in STD_LOGIC;
		PS_B_CH_B_BIT:	 in STD_LOGIC;
		PS_SET_I_O_CH_SEL_REG:	 in STD_LOGIC;
		PS_B_CH_NOT_A_BIT:	 in STD_LOGIC;
		MS_I_O_LOZENGE_LATCH:	 out STD_LOGIC;
		PS_I_O_LOZENGE_LATCH:	 out STD_LOGIC;
		PS_LOZENGE_OR_ASTERISK:	 out STD_LOGIC;
		MS_I_O_ASTERISK_LATCH:	 out STD_LOGIC;
		PS_I_O_ASTERISK_LATCH:	 out STD_LOGIC;
		MS_LOZENGE_OR_ASTERISK:	 out STD_LOGIC);
end ALD_13_50_02_1_I_O_CHANNEL_SELECT_REGISTER;

architecture behavioral of ALD_13_50_02_1_I_O_CHANNEL_SELECT_REGISTER is 

	signal OUT_4A_P: STD_LOGIC;
	signal OUT_4A_P_Latch: STD_LOGIC;
	signal OUT_3A_NoPin: STD_LOGIC;
	signal OUT_3A_NoPin_Latch: STD_LOGIC;
	signal OUT_2A_B: STD_LOGIC;
	signal OUT_5B_D: STD_LOGIC;
	signal OUT_2B_C: STD_LOGIC;
	signal OUT_1C_A: STD_LOGIC;
	signal OUT_1D_B: STD_LOGIC;
	signal OUT_4E_F: STD_LOGIC;
	signal OUT_4E_F_Latch: STD_LOGIC;
	signal OUT_3E_NoPin: STD_LOGIC;
	signal OUT_3E_NoPin_Latch: STD_LOGIC;
	signal OUT_2E_E: STD_LOGIC;
	signal OUT_5F_E: STD_LOGIC;
	signal OUT_1F_D: STD_LOGIC;
	signal OUT_1G_G: STD_LOGIC;

begin

	OUT_4A_P_Latch <= NOT(MS_RESET_I_O_CH_SEL_REG AND MS_PROGRAM_RESET_2 AND OUT_3A_NoPin );
	OUT_3A_NoPin_Latch <= NOT(OUT_4A_P AND OUT_5B_D );
	OUT_2A_B <= NOT OUT_3A_NoPin;
	OUT_5B_D <= NOT(PS_SET_I_O_CH_SEL_REG AND PS_B_CH_A_BIT AND PS_B_CH_B_BIT );
	OUT_2B_C <= NOT OUT_4A_P;

	SMS_AEK_1C: entity SMS_AEK
	    port map (
		IN1 => OUT_2A_B,	-- Pin F
		IN2 => OUT_1D_B,	-- Pin G
		OUT1 => OUT_1C_A );

	OUT_1D_B <= NOT OUT_2E_E;
	OUT_4E_F_Latch <= NOT(MS_PROGRAM_RESET_2 AND MS_RESET_I_O_CH_SEL_REG AND OUT_3E_NoPin );
	OUT_3E_NoPin_Latch <= NOT(OUT_4E_F AND OUT_5F_E );
	OUT_2E_E <= NOT OUT_3E_NoPin;
	OUT_5F_E <= NOT(PS_SET_I_O_CH_SEL_REG AND PS_B_CH_NOT_A_BIT AND PS_B_CH_B_BIT );
	OUT_1F_D <= NOT OUT_4E_F;
	OUT_1G_G <= NOT(OUT_1C_A );

	MS_I_O_LOZENGE_LATCH <= OUT_2A_B;
	PS_I_O_LOZENGE_LATCH <= OUT_2B_C;
	PS_LOZENGE_OR_ASTERISK <= OUT_1C_A;
	MS_I_O_ASTERISK_LATCH <= OUT_2E_E;
	PS_I_O_ASTERISK_LATCH <= OUT_1F_D;
	MS_LOZENGE_OR_ASTERISK <= OUT_1G_G;

	Latch_4A: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4A_P_Latch,
		Q => OUT_4A_P,
		QBar => OPEN );

	Latch_3A: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3A_NoPin_Latch,
		Q => OUT_3A_NoPin,
		QBar => OPEN );

	Latch_4E: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4E_F_Latch,
		Q => OUT_4E_F,
		QBar => OPEN );

	Latch_3E: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3E_NoPin_Latch,
		Q => OUT_3E_NoPin,
		QBar => OPEN );


end;
