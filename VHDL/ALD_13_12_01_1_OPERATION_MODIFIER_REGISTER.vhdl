-- VHDL for IBM SMS ALD page 13.12.01.1
-- Title: OPERATION MODIFIER REGISTER
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 7/20/2020 12:29:26 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_13_12_01_1_OPERATION_MODIFIER_REGISTER is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_B_CH_NOT_C_BIT:	 in STD_LOGIC;
		PS_B_CH_C_BIT:	 in STD_LOGIC;
		MS_RESET_OP_MOD_REG:	 in STD_LOGIC;
		PS_1401_D_OR_P_OR_Y_OP_CODES:	 in STD_LOGIC;
		PS_1401_DATA_MOVE_SET_OP_MOD:	 in STD_LOGIC;
		PS_SET_OP_MOD_REG:	 in STD_LOGIC;
		PS_OP_REG_1401_C_BIT:	 in STD_LOGIC;
		MS_OP_REG_A_BIT:	 in STD_LOGIC;
		PS_B_CH_NOT_B_BIT:	 in STD_LOGIC;
		PS_B_CH_B_BIT:	 in STD_LOGIC;
		PS_OP_MOD_REG_C_BIT:	 out STD_LOGIC;
		PS_OP_MOD_REG_NOT_C_BIT:	 out STD_LOGIC;
		PS_OP_MOD_REG_B_BIT:	 out STD_LOGIC;
		PS_OP_MOD_REG_NOT_B_BIT:	 out STD_LOGIC;
		LAMP_11C8D08:	 out STD_LOGIC;
		LAMP_11C8E08:	 out STD_LOGIC);
end ALD_13_12_01_1_OPERATION_MODIFIER_REGISTER;

architecture behavioral of ALD_13_12_01_1_OPERATION_MODIFIER_REGISTER is 

	signal OUT_2B_C: STD_LOGIC;
	signal OUT_5C_B: STD_LOGIC;
	signal OUT_4C_D: STD_LOGIC;
	signal OUT_4C_D_Latch: STD_LOGIC;
	signal OUT_3C_E: STD_LOGIC;
	signal OUT_3C_E_Latch: STD_LOGIC;
	signal OUT_2C_A: STD_LOGIC;
	signal OUT_5D_G: STD_LOGIC;
	signal OUT_2D_K: STD_LOGIC;
	signal OUT_5E_B: STD_LOGIC;
	signal OUT_5F_E: STD_LOGIC;
	signal OUT_2F_A: STD_LOGIC;
	signal OUT_5G_F: STD_LOGIC;
	signal OUT_4G_C: STD_LOGIC;
	signal OUT_4G_C_Latch: STD_LOGIC;
	signal OUT_3G_H: STD_LOGIC;
	signal OUT_3G_H_Latch: STD_LOGIC;
	signal OUT_2G_A: STD_LOGIC;
	signal OUT_5H_D: STD_LOGIC;
	signal OUT_2H_E: STD_LOGIC;

begin


	SMS_AEK_2B: entity SMS_AEK
	    port map (
		IN1 => OUT_4C_D,	-- Pin D
		OUT1 => OUT_2B_C,
		IN2 => OPEN );

	OUT_5C_B <= NOT(PS_B_CH_NOT_C_BIT AND PS_SET_OP_MOD_REG );
	OUT_4C_D_Latch <= NOT(OUT_5C_B AND OUT_3C_E AND OUT_5E_B );
	OUT_3C_E_Latch <= NOT(OUT_4C_D AND MS_RESET_OP_MOD_REG AND OUT_5D_G );

	SMS_AEK_2C: entity SMS_AEK
	    port map (
		IN1 => OUT_3C_E,	-- Pin F
		OUT1 => OUT_2C_A,
		IN2 => OPEN );

	OUT_5D_G <= NOT(PS_B_CH_C_BIT AND PS_SET_OP_MOD_REG );
	OUT_2D_K <= NOT OUT_2C_A;
	LAMP_11C8D08 <= OUT_2D_K;
	OUT_5E_B <= NOT(PS_1401_D_OR_P_OR_Y_OP_CODES AND PS_1401_DATA_MOVE_SET_OP_MOD );
	OUT_5F_E <= NOT(PS_OP_REG_1401_C_BIT AND PS_1401_DATA_MOVE_SET_OP_MOD AND MS_OP_REG_A_BIT );

	SMS_AEK_2F: entity SMS_AEK
	    port map (
		IN1 => OUT_4G_C,	-- Pin F
		OUT1 => OUT_2F_A,
		IN2 => OPEN );

	OUT_5G_F <= NOT(PS_B_CH_NOT_B_BIT AND PS_SET_OP_MOD_REG );
	OUT_4G_C_Latch <= NOT(OUT_5G_F AND MS_RESET_OP_MOD_REG AND OUT_3G_H );
	OUT_3G_H_Latch <= NOT(OUT_5F_E AND OUT_4G_C AND OUT_5H_D );
	OUT_2G_A <= NOT OUT_3G_H;
	OUT_5H_D <= NOT(PS_B_CH_B_BIT AND PS_SET_OP_MOD_REG );
	OUT_2H_E <= NOT OUT_2G_A;
	LAMP_11C8E08 <= OUT_2H_E;

	PS_OP_MOD_REG_C_BIT <= OUT_2B_C;
	PS_OP_MOD_REG_NOT_C_BIT <= OUT_2C_A;
	PS_OP_MOD_REG_B_BIT <= OUT_2F_A;
	PS_OP_MOD_REG_NOT_B_BIT <= OUT_2G_A;

	Latch_4C: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4C_D_Latch,
		Q => OUT_4C_D,
		QBar => OPEN );

	Latch_3C: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3C_E_Latch,
		Q => OUT_3C_E,
		QBar => OPEN );

	Latch_4G: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4G_C_Latch,
		Q => OUT_4G_C,
		QBar => OPEN );

	Latch_3G: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3G_H_Latch,
		Q => OUT_3G_H,
		QBar => OPEN );


end;
