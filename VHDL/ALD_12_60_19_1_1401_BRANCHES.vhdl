-- VHDL for IBM SMS ALD page 12.60.19.1
-- Title: 1401 BRANCHES
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 7/14/2020 3:38:10 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_12_60_19_1_1401_BRANCHES is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_NEXT_TO_LAST_LOGIC_GATE:	 in STD_LOGIC;
		PS_1ST_SCAN:	 in STD_LOGIC;
		MS_PROGRAM_RESET_1:	 in STD_LOGIC;
		MS_PROGRAM_SET_BRANCH_CTRL:	 in STD_LOGIC;
		MS_I_RING_OP_TIME:	 in STD_LOGIC;
		PS_B_CYCLE:	 in STD_LOGIC;
		PS_B_OR_W_OR_V_BRANCH_CND:	 in STD_LOGIC;
		PS_1401_MODE:	 in STD_LOGIC;
		PS_1401_NO_EXE_CY_BRANCH_OPS:	 in STD_LOGIC;
		PS_LAST_INSN_RO_CYCLE:	 in STD_LOGIC;
		PS_1401_BRANCH_CONDITION:	 in STD_LOGIC;
		PS_1401_BRANCH_CONDITION_JRJ:	 in STD_LOGIC;
		PS_1401_COND_TEST_OP_CODE:	 in STD_LOGIC;
		MS_1401_CLEAR_DOT_I_RING_11:	 in STD_LOGIC;
		MS_J_TYPE_BRANCH_COND:	 in STD_LOGIC;
		MS_1401_UNCOND_BRANCH:	 in STD_LOGIC;
		PS_I_RING_6_OR_1401_AND_8_TIME:	 in STD_LOGIC;
		PS_1401_I_RING_8_BRANCH_OPS:	 in STD_LOGIC;
		PS_I_RING_9_TIME:	 in STD_LOGIC;
		PS_1401_I_RING_9_BRANCH_OPS:	 in STD_LOGIC;
		MS_1401_TAKE_I_TO_B_CYCLE:	 out STD_LOGIC;
		MS_1401_BRANCH_LATCH:	 out STD_LOGIC;
		PS_1401_BRANCH_LATCH:	 out STD_LOGIC;
		MS_1401_BRANCH_LAST_EX_CYCLE:	 out STD_LOGIC);
end ALD_12_60_19_1_1401_BRANCHES;

architecture behavioral of ALD_12_60_19_1_1401_BRANCHES is 

	signal OUT_5A_G: STD_LOGIC;
	signal OUT_1A_P: STD_LOGIC;
	signal OUT_5B_G: STD_LOGIC;
	signal OUT_3B_C: STD_LOGIC;
	signal OUT_1B_D: STD_LOGIC;
	signal OUT_4C_E: STD_LOGIC;
	signal OUT_3C_G: STD_LOGIC;
	signal OUT_3C_G_Latch: STD_LOGIC;
	signal OUT_2C_C: STD_LOGIC;
	signal OUT_2C_C_Latch: STD_LOGIC;
	signal OUT_1C_D: STD_LOGIC;
	signal OUT_2D_F: STD_LOGIC;
	signal OUT_5E_E: STD_LOGIC;
	signal OUT_2E_C: STD_LOGIC;
	signal OUT_4F_C: STD_LOGIC;
	signal OUT_3F_C: STD_LOGIC;
	signal OUT_2F_C: STD_LOGIC;
	signal OUT_4G_B: STD_LOGIC;
	signal OUT_5H_K: STD_LOGIC;
	signal OUT_4H_K: STD_LOGIC;
	signal OUT_5I_C: STD_LOGIC;
	signal OUT_DOT_1A: STD_LOGIC;
	signal OUT_DOT_5B: STD_LOGIC;
	signal OUT_DOT_3C: STD_LOGIC;
	signal OUT_DOT_1E: STD_LOGIC;
	signal OUT_DOT_4F: STD_LOGIC;
	signal OUT_DOT_5D: STD_LOGIC;

begin

	OUT_5A_G <= NOT(PS_1ST_SCAN AND PS_NEXT_TO_LAST_LOGIC_GATE );
	OUT_1A_P <= NOT(PS_1401_MODE AND OUT_DOT_4F );
	OUT_5B_G <= NOT(PS_B_OR_W_OR_V_BRANCH_CND AND PS_B_CYCLE );
	OUT_3B_C <= NOT(MS_PROGRAM_RESET_1 AND MS_PROGRAM_SET_BRANCH_CTRL AND PS_1401_MODE );
	OUT_1B_D <= NOT(PS_LAST_INSN_RO_CYCLE AND PS_1401_NO_EXE_CY_BRANCH_OPS );
	OUT_4C_E <= NOT(OUT_DOT_4F AND PS_NEXT_TO_LAST_LOGIC_GATE AND PS_LAST_INSN_RO_CYCLE );
	OUT_3C_G_Latch <= NOT(OUT_2C_C AND MS_I_RING_OP_TIME );
	OUT_2C_C_Latch <= NOT(OUT_4C_E AND OUT_DOT_3C AND OUT_DOT_5B );
	OUT_1C_D <= NOT OUT_2C_C;
	OUT_2D_F <= NOT OUT_DOT_3C;
	OUT_5E_E <= NOT(PS_LAST_INSN_RO_CYCLE AND OUT_DOT_5D AND PS_1401_COND_TEST_OP_CODE );
	OUT_2E_C <= NOT(PS_LAST_INSN_RO_CYCLE AND PS_1401_NO_EXE_CY_BRANCH_OPS );
	OUT_4F_C <= NOT(OUT_5E_E AND MS_1401_CLEAR_DOT_I_RING_11 AND MS_J_TYPE_BRANCH_COND );
	OUT_3F_C <= NOT OUT_DOT_4F;
	OUT_2F_C <= NOT(OUT_3F_C AND PS_1401_MODE );
	OUT_4G_B <= NOT MS_1401_UNCOND_BRANCH;
	OUT_5H_K <= NOT(PS_I_RING_6_OR_1401_AND_8_TIME AND PS_1401_I_RING_8_BRANCH_OPS );
	OUT_4H_K <= NOT(OUT_5H_K AND OUT_5I_C );
	OUT_5I_C <= NOT(PS_I_RING_9_TIME AND PS_1401_I_RING_9_BRANCH_OPS );
	OUT_DOT_1A <= OUT_1A_P OR OUT_1B_D;
	OUT_DOT_5B <= OUT_5A_G OR OUT_5B_G;
	OUT_DOT_3C <= OUT_3B_C OR OUT_3C_G;
	OUT_DOT_1E <= OUT_2E_C OR OUT_2F_C;
	OUT_DOT_4F <= OUT_4F_C OR OUT_4G_B OR OUT_4H_K;
	OUT_DOT_5D <= PS_1401_BRANCH_CONDITION OR PS_1401_BRANCH_CONDITION_JRJ;

	MS_1401_BRANCH_LATCH <= OUT_1C_D;
	PS_1401_BRANCH_LATCH <= OUT_2D_F;
	MS_1401_TAKE_I_TO_B_CYCLE <= OUT_DOT_1A;
	MS_1401_BRANCH_LAST_EX_CYCLE <= OUT_DOT_1E;

	Latch_3C: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3C_G_Latch,
		Q => OUT_3C_G,
		QBar => OPEN );

	Latch_2C: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2C_C_Latch,
		Q => OUT_2C_C,
		QBar => OPEN );


end;
