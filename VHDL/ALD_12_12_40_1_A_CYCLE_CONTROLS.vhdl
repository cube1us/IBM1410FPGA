-- VHDL for IBM SMS ALD page 12.12.40.1
-- Title: A CYCLE CONTROLS
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 6/26/2020 2:06:52 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_12_12_40_1_A_CYCLE_CONTROLS is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_OP_MOD_REG_NOT_B_BIT:	 in STD_LOGIC;
		PS_OP_MOD_REG_A_BIT:	 in STD_LOGIC;
		PS_A_CH_NOT_RECORD_MARK:	 in STD_LOGIC;
		PS_OP_MOD_REG_NOT_8_BIT:	 in STD_LOGIC;
		PS_OP_MOD_REG_NOT_A_BIT:	 in STD_LOGIC;
		PS_A_CH_NOT_WM_BIT:	 in STD_LOGIC;
		PS_OP_MOD_REG_8_BIT:	 in STD_LOGIC;
		PS_A_CH_NOT_GROUP_MARK_DOT_WM:	 in STD_LOGIC;
		PS_OP_MOD_REG_B_BIT:	 in STD_LOGIC;
		PS_B_CH_NOT_WM_BIT:	 in STD_LOGIC;
		PS_DATA_MOVE_TAKE_A_CYCLE:	 out STD_LOGIC);
end ALD_12_12_40_1_A_CYCLE_CONTROLS;

architecture behavioral of ALD_12_12_40_1_A_CYCLE_CONTROLS is 

	signal OUT_4A_NoPin: STD_LOGIC;
	signal OUT_4B_NoPin: STD_LOGIC;
	signal OUT_3B_D: STD_LOGIC;
	signal OUT_2B_NoPin: STD_LOGIC;
	signal OUT_4C_NoPin: STD_LOGIC;
	signal OUT_4D_NoPin: STD_LOGIC;
	signal OUT_4E_NoPin: STD_LOGIC;
	signal OUT_3E_D: STD_LOGIC;
	signal OUT_2E_NoPin: STD_LOGIC;
	signal OUT_1E_F: STD_LOGIC;
	signal OUT_4F_NoPin: STD_LOGIC;
	signal OUT_2G_C: STD_LOGIC;
	signal OUT_2H_C: STD_LOGIC;
	signal OUT_DOT_2G: STD_LOGIC;

begin

	OUT_4A_NoPin <= NOT(PS_OP_MOD_REG_NOT_8_BIT AND PS_A_CH_NOT_WM_BIT AND PS_OP_MOD_REG_NOT_B_BIT );
	OUT_4B_NoPin <= NOT(PS_B_CH_NOT_WM_BIT AND PS_OP_MOD_REG_NOT_8_BIT AND PS_A_CH_NOT_WM_BIT );
	OUT_3B_D <= NOT(OUT_4A_NoPin AND OUT_4B_NoPin AND OUT_4C_NoPin );
	OUT_2B_NoPin <= NOT(OUT_3B_D AND PS_OP_MOD_REG_A_BIT );
	OUT_4C_NoPin <= NOT(PS_OP_MOD_REG_NOT_B_BIT AND PS_OP_MOD_REG_8_BIT AND PS_A_CH_NOT_RECORD_MARK );
	OUT_4D_NoPin <= NOT(PS_B_CH_NOT_WM_BIT AND PS_OP_MOD_REG_NOT_8_BIT AND PS_OP_MOD_REG_NOT_A_BIT );
	OUT_4E_NoPin <= NOT(PS_OP_MOD_REG_NOT_A_BIT AND PS_OP_MOD_REG_8_BIT AND PS_A_CH_NOT_GROUP_MARK_DOT_WM );
	OUT_3E_D <= NOT(OUT_4D_NoPin AND OUT_4E_NoPin AND OUT_4F_NoPin );
	OUT_2E_NoPin <= NOT(OUT_3E_D AND PS_OP_MOD_REG_B_BIT );
	OUT_1E_F <= NOT(OUT_2B_NoPin AND OUT_2E_NoPin AND OUT_DOT_2G );
	OUT_4F_NoPin <= NOT(PS_A_CH_NOT_GROUP_MARK_DOT_WM AND PS_A_CH_NOT_RECORD_MARK AND PS_OP_MOD_REG_8_BIT );
	OUT_2G_C <= NOT(PS_OP_MOD_REG_8_BIT AND PS_A_CH_NOT_WM_BIT AND PS_B_CH_NOT_WM_BIT );
	OUT_2H_C <= NOT(PS_OP_MOD_REG_NOT_B_BIT AND PS_OP_MOD_REG_NOT_A_BIT );
	OUT_DOT_2G <= OUT_2G_C OR OUT_2H_C;

	PS_DATA_MOVE_TAKE_A_CYCLE <= OUT_1E_F;


end;
