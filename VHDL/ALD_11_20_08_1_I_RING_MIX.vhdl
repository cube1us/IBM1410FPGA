-- VHDL for IBM SMS ALD page 11.20.08.1
-- Title: I RING MIX
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 6/26/2020 1:04:40 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_11_20_08_1_I_RING_MIX is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_I_RING_3_TIME:	 in STD_LOGIC;
		MS_I_RING_8_TIME:	 in STD_LOGIC;
		MS_I_RING_4_TIME:	 in STD_LOGIC;
		MS_I_RING_9_TIME:	 in STD_LOGIC;
		MS_I_RING_5_TIME:	 in STD_LOGIC;
		MS_I_RING_10_TIME:	 in STD_LOGIC;
		MS_I_RING_1_TIME:	 in STD_LOGIC;
		MS_I_RING_6_TIME:	 in STD_LOGIC;
		MS_I_RING_3_AND_1401_MODE:	 in STD_LOGIC;
		MS_I_RING_RESET_1:	 in STD_LOGIC;
		MS_I_RING_7_TIME:	 in STD_LOGIC;
		PS_1401_MODE_1:	 in STD_LOGIC;
		PS_I_RING_3_OR_8_TIME:	 out STD_LOGIC;
		PS_I_RING_4_OR_9_TIME:	 out STD_LOGIC;
		PS_I_RING_5_OR_10_TIME:	 out STD_LOGIC;
		PS_I_RING_1_OR_6_TIME:	 out STD_LOGIC;
		PS_I_RING_1_OR_5_OR_6_OR_10_OR_1401_DOT_3_OR_8:	 out STD_LOGIC;
		PS_I_RING_7_OR_1401_6_OR_8:	 out STD_LOGIC;
		PS_I_RING_6_OR_1401_AND_8_TIME:	 out STD_LOGIC);
end ALD_11_20_08_1_I_RING_MIX;

architecture behavioral of ALD_11_20_08_1_I_RING_MIX is 

	signal OUT_3B_K: STD_LOGIC;
	signal OUT_3C_C: STD_LOGIC;
	signal OUT_3D_P: STD_LOGIC;
	signal OUT_2D_G: STD_LOGIC;
	signal OUT_3E_C: STD_LOGIC;
	signal OUT_2E_C: STD_LOGIC;
	signal OUT_3F_G: STD_LOGIC;
	signal OUT_3G_G: STD_LOGIC;
	signal OUT_2G_B: STD_LOGIC;
	signal OUT_5H_D: STD_LOGIC;
	signal OUT_5H_D_Latch: STD_LOGIC;
	signal OUT_4H_G: STD_LOGIC;
	signal OUT_4H_G_Latch: STD_LOGIC;
	signal OUT_3H_P: STD_LOGIC;
	signal OUT_2H_K: STD_LOGIC;
	signal OUT_5I_C: STD_LOGIC;
	signal OUT_3I_G: STD_LOGIC;
	signal OUT_2I_A: STD_LOGIC;
	signal OUT_DOT_3G: STD_LOGIC;

begin

	OUT_3B_K <= NOT(MS_I_RING_3_TIME AND MS_I_RING_8_TIME );
	OUT_3C_C <= NOT(MS_I_RING_4_TIME AND MS_I_RING_9_TIME );
	OUT_3D_P <= NOT(MS_I_RING_5_TIME AND MS_I_RING_10_TIME );
	OUT_2D_G <= OUT_3D_P;
	OUT_3E_C <= NOT(MS_I_RING_1_TIME AND MS_I_RING_6_TIME );
	OUT_2E_C <= OUT_3E_C;
	OUT_3F_G <= NOT(MS_I_RING_5_TIME AND MS_I_RING_10_TIME );
	OUT_3G_G <= NOT(MS_I_RING_1_TIME AND MS_I_RING_6_TIME );
	OUT_2G_B <= OUT_DOT_3G;
	OUT_5H_D_Latch <= NOT(OUT_4H_G AND MS_I_RING_9_TIME AND MS_I_RING_RESET_1 );
	OUT_4H_G_Latch <= NOT(OUT_5H_D AND MS_I_RING_6_TIME );
	OUT_3H_P <= NOT(MS_I_RING_3_AND_1401_MODE AND OUT_5I_C );
	OUT_2H_K <= NOT(MS_I_RING_7_TIME AND OUT_5I_C );
	OUT_5I_C <= NOT(PS_1401_MODE_1 AND OUT_4H_G );
	OUT_3I_G <= NOT(OUT_5I_C AND MS_I_RING_6_TIME );
	OUT_2I_A <= OUT_3I_G;
	OUT_DOT_3G <= OUT_3F_G OR OUT_3G_G OR OUT_3H_P;

	PS_I_RING_3_OR_8_TIME <= OUT_3B_K;
	PS_I_RING_4_OR_9_TIME <= OUT_3C_C;
	PS_I_RING_5_OR_10_TIME <= OUT_2D_G;
	PS_I_RING_1_OR_6_TIME <= OUT_2E_C;
	PS_I_RING_1_OR_5_OR_6_OR_10_OR_1401_DOT_3_OR_8 <= OUT_2G_B;
	PS_I_RING_7_OR_1401_6_OR_8 <= OUT_2H_K;
	PS_I_RING_6_OR_1401_AND_8_TIME <= OUT_2I_A;

	Latch_5H: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_5H_D_Latch,
		Q => OUT_5H_D,
		QBar => OPEN );

	Latch_4H: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4H_G_Latch,
		Q => OUT_4H_G,
		QBar => OPEN );


end;
