-- Test BenchVHDL for IBM SMS ALD group MemInhibitDrivers
-- Title: MemInhibitDrivers
-- IBM Machine Name 1411
-- Generated by GenerateHDL on 10/19/2020 4:45:50 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity MemInhibitDrivers_tb is
end MemInhibitDrivers_tb;

architecture behavioral of MemInhibitDrivers_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component MemInhibitDrivers
	    Port (
		FPGA_CLK: in STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_1: in STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_2: in STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_3: in STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_4: in STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_5: in STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_6: in STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_7: in STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_8: in STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_5: in STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_6: in STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_7: in STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_8: in STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_1: in STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_2: in STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_3: in STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_4: in STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_9: in STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_10: in STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_11: in STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_12: in STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_9: in STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_10: in STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_11: in STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_12: in STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_13: in STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_14: in STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_15: in STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_16: in STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_13: in STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_16: in STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_15: in STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_14: in STD_LOGIC;
		MY_INH_CHAR_0_D_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		MY_INH_CHAR_1_D_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		MY_INH_CHAR_2_D_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		MY_INH_CHAR_3_D_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		MV_IN_CHAR_0_D1_BUS: out STD_LOGIC_VECTOR (7 downTo 0);
		MV_IN_CHAR_0_B1_BUS: out STD_LOGIC_VECTOR (7 downTo 0);
		MV_IN_CHAR_1_D1_BUS: out STD_LOGIC_VECTOR (7 downTo 0);
		MV_IN_CHAR_1_B1_BUS: out STD_LOGIC_VECTOR (7 downTo 0);
		MV_IN_CHAR_2_D1_BUS: out STD_LOGIC_VECTOR (7 downTo 0);
		MV_IN_CHAR_2_B1_BUS: out STD_LOGIC_VECTOR (7 downTo 0);
		MV_IN_CHAR_3_D1_BUS: out STD_LOGIC_VECTOR (7 downTo 0);
		MV_IN_CHAR_3_B1_BUS: out STD_LOGIC_VECTOR (7 downTo 0));
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal MY_Z_GATE_FOR_0_4TH_1: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_0_4TH_2: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_0_4TH_3: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_0_4TH_4: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_5_9TH_5: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_5_9TH_6: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_5_9TH_7: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_5_9TH_8: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_0_4TH_5: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_0_4TH_6: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_0_4TH_7: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_0_4TH_8: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_5_9TH_1: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_5_9TH_2: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_5_9TH_3: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_5_9TH_4: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_0_4TH_9: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_0_4TH_10: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_0_4TH_11: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_0_4TH_12: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_5_9TH_9: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_5_9TH_10: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_5_9TH_11: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_5_9TH_12: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_0_4TH_13: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_0_4TH_14: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_5_9TH_15: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_5_9TH_16: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_5_9TH_13: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_0_4TH_16: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_0_4TH_15: STD_LOGIC := '1';
	signal MY_Z_GATE_FOR_5_9TH_14: STD_LOGIC := '1';
	signal MY_INH_CHAR_0_D_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "11111111";
	signal MY_INH_CHAR_1_D_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "11111111";
	signal MY_INH_CHAR_2_D_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "11111111";
	signal MY_INH_CHAR_3_D_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "11111111";

	-- Outputs

	signal MV_IN_CHAR_0_D1_BUS: STD_LOGIC_VECTOR (7 downTo 0);
	signal MV_IN_CHAR_0_B1_BUS: STD_LOGIC_VECTOR (7 downTo 0);
	signal MV_IN_CHAR_1_D1_BUS: STD_LOGIC_VECTOR (7 downTo 0);
	signal MV_IN_CHAR_1_B1_BUS: STD_LOGIC_VECTOR (7 downTo 0);
	signal MV_IN_CHAR_2_D1_BUS: STD_LOGIC_VECTOR (7 downTo 0);
	signal MV_IN_CHAR_2_B1_BUS: STD_LOGIC_VECTOR (7 downTo 0);
	signal MV_IN_CHAR_3_D1_BUS: STD_LOGIC_VECTOR (7 downTo 0);
	signal MV_IN_CHAR_3_B1_BUS: STD_LOGIC_VECTOR (7 downTo 0);

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

   constant MX_X1A_POS: integer := 7;
   constant MX_X6A_POS: integer := 8;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: MemInhibitDrivers port map(
		FPGA_CLK => FPGA_CLK,
		MY_Z_GATE_FOR_0_4TH_1 => MY_Z_GATE_FOR_0_4TH_1,
		MY_Z_GATE_FOR_0_4TH_2 => MY_Z_GATE_FOR_0_4TH_2,
		MY_Z_GATE_FOR_0_4TH_3 => MY_Z_GATE_FOR_0_4TH_3,
		MY_Z_GATE_FOR_0_4TH_4 => MY_Z_GATE_FOR_0_4TH_4,
		MY_Z_GATE_FOR_5_9TH_5 => MY_Z_GATE_FOR_5_9TH_5,
		MY_Z_GATE_FOR_5_9TH_6 => MY_Z_GATE_FOR_5_9TH_6,
		MY_Z_GATE_FOR_5_9TH_7 => MY_Z_GATE_FOR_5_9TH_7,
		MY_Z_GATE_FOR_5_9TH_8 => MY_Z_GATE_FOR_5_9TH_8,
		MY_Z_GATE_FOR_0_4TH_5 => MY_Z_GATE_FOR_0_4TH_5,
		MY_Z_GATE_FOR_0_4TH_6 => MY_Z_GATE_FOR_0_4TH_6,
		MY_Z_GATE_FOR_0_4TH_7 => MY_Z_GATE_FOR_0_4TH_7,
		MY_Z_GATE_FOR_0_4TH_8 => MY_Z_GATE_FOR_0_4TH_8,
		MY_Z_GATE_FOR_5_9TH_1 => MY_Z_GATE_FOR_5_9TH_1,
		MY_Z_GATE_FOR_5_9TH_2 => MY_Z_GATE_FOR_5_9TH_2,
		MY_Z_GATE_FOR_5_9TH_3 => MY_Z_GATE_FOR_5_9TH_3,
		MY_Z_GATE_FOR_5_9TH_4 => MY_Z_GATE_FOR_5_9TH_4,
		MY_Z_GATE_FOR_0_4TH_9 => MY_Z_GATE_FOR_0_4TH_9,
		MY_Z_GATE_FOR_0_4TH_10 => MY_Z_GATE_FOR_0_4TH_10,
		MY_Z_GATE_FOR_0_4TH_11 => MY_Z_GATE_FOR_0_4TH_11,
		MY_Z_GATE_FOR_0_4TH_12 => MY_Z_GATE_FOR_0_4TH_12,
		MY_Z_GATE_FOR_5_9TH_9 => MY_Z_GATE_FOR_5_9TH_9,
		MY_Z_GATE_FOR_5_9TH_10 => MY_Z_GATE_FOR_5_9TH_10,
		MY_Z_GATE_FOR_5_9TH_11 => MY_Z_GATE_FOR_5_9TH_11,
		MY_Z_GATE_FOR_5_9TH_12 => MY_Z_GATE_FOR_5_9TH_12,
		MY_Z_GATE_FOR_0_4TH_13 => MY_Z_GATE_FOR_0_4TH_13,
		MY_Z_GATE_FOR_0_4TH_14 => MY_Z_GATE_FOR_0_4TH_14,
		MY_Z_GATE_FOR_5_9TH_15 => MY_Z_GATE_FOR_5_9TH_15,
		MY_Z_GATE_FOR_5_9TH_16 => MY_Z_GATE_FOR_5_9TH_16,
		MY_Z_GATE_FOR_5_9TH_13 => MY_Z_GATE_FOR_5_9TH_13,
		MY_Z_GATE_FOR_0_4TH_16 => MY_Z_GATE_FOR_0_4TH_16,
		MY_Z_GATE_FOR_0_4TH_15 => MY_Z_GATE_FOR_0_4TH_15,
		MY_Z_GATE_FOR_5_9TH_14 => MY_Z_GATE_FOR_5_9TH_14,
		MY_INH_CHAR_0_D_BUS => MY_INH_CHAR_0_D_BUS,
		MY_INH_CHAR_1_D_BUS => MY_INH_CHAR_1_D_BUS,
		MY_INH_CHAR_2_D_BUS => MY_INH_CHAR_2_D_BUS,
		MY_INH_CHAR_3_D_BUS => MY_INH_CHAR_3_D_BUS,
		MV_IN_CHAR_0_D1_BUS => MV_IN_CHAR_0_D1_BUS,
		MV_IN_CHAR_0_B1_BUS => MV_IN_CHAR_0_B1_BUS,
		MV_IN_CHAR_1_D1_BUS => MV_IN_CHAR_1_D1_BUS,
		MV_IN_CHAR_1_B1_BUS => MV_IN_CHAR_1_B1_BUS,
		MV_IN_CHAR_2_D1_BUS => MV_IN_CHAR_2_D1_BUS,
		MV_IN_CHAR_2_B1_BUS => MV_IN_CHAR_2_B1_BUS,
		MV_IN_CHAR_3_D1_BUS => MV_IN_CHAR_3_D1_BUS,
		MV_IN_CHAR_3_B1_BUS => MV_IN_CHAR_3_B1_BUS);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;
   variable tv: std_logic_vector(25 downto 0);
   variable a,b,c,d,e,f,g,h,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z: std_logic;
   variable g1, g2, g3, g4, g5, g6, g7, g8, g9, g10: std_logic;

   begin

   -- Your test bench code

   testName := "15.49.04.1        X";  -- NOTE:  Remove X when editing to set correct length!

   for tt in 0 to 2**25 loop
      tv := std_logic_vector(to_unsigned(tt,tv'Length));
      a := tv(0);
      b := tv(1);
      c := tv(2);
      d := tv(3);
      e := tv(4);
      f := tv(5);
      g := tv(6);
      h := tv(7);
      j := tv(8);
      k := tv(9);
      l := tv(10);
      m := tv(11);
      n := tv(12);
      o := tv(13);
      p := tv(14);
      q := tv(15);
      r := tv(16);
      s := tv(17);
      t := tv(18);
      u := tv(19);
      v := tv(20);
      w := tv(21);
      x := tv(22);
      y := tv(23);
      z := tv(24);

      
      wait for 30 ns;
      
      
   end loop;

   assert false report "Simulation Ended NORMALLY" severity failure;

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 2 ms;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY (TIMEOUT)" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

END;
