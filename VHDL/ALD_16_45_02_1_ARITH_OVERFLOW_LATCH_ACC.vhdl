-- VHDL for IBM SMS ALD page 16.45.02.1
-- Title: ARITH OVERFLOW LATCH-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/5/2020 4:58:43 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_16_45_02_1_ARITH_OVERFLOW_LATCH_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_LAST_LOGIC_GATE_1:	 in STD_LOGIC;
		MS_SET_NO_OVERFLOW:	 in STD_LOGIC;
		MS_1401_DIVIDE_OVERFLOW:	 in STD_LOGIC;
		MB_A_OR_S_DOT_B_DOT_1_DOT_T_DOT_BW_DOT_RC:	 in STD_LOGIC;
		MS_COMPUTER_RESET_1:	 in STD_LOGIC;
		PS_LAST_LOGIC_GATE_2:	 in STD_LOGIC;
		MS_RESET_OVERFLOW:	 in STD_LOGIC;
		PS_NO_OVERFLOW:	 out STD_LOGIC;
		PS_OVERFLOW:	 out STD_LOGIC;
		LAMP_15A1F12:	 out STD_LOGIC);
end ALD_16_45_02_1_ARITH_OVERFLOW_LATCH_ACC;

architecture behavioral of ALD_16_45_02_1_ARITH_OVERFLOW_LATCH_ACC is 

	signal OUT_4A_NoPin: STD_LOGIC;
	signal OUT_3A_D: STD_LOGIC;
	signal OUT_3A_D_Latch: STD_LOGIC;
	signal OUT_2A_E: STD_LOGIC;
	signal OUT_2A_E_Latch: STD_LOGIC;
	signal OUT_5B_P: STD_LOGIC;
	signal OUT_5D_E: STD_LOGIC;
	signal OUT_4E_K: STD_LOGIC;
	signal OUT_3F_C: STD_LOGIC;
	signal OUT_3F_C_Latch: STD_LOGIC;
	signal OUT_2F_K: STD_LOGIC;
	signal OUT_2F_K_Latch: STD_LOGIC;
	signal OUT_2H_B: STD_LOGIC;
	signal OUT_DOT_5B: STD_LOGIC;

begin

	OUT_4A_NoPin <= NOT(PS_LAST_LOGIC_GATE_1 AND OUT_DOT_5B );
	OUT_3A_D_Latch <= NOT(OUT_4A_NoPin AND OUT_2A_E );
	OUT_2A_E_Latch <= NOT(OUT_3A_D AND MS_SET_NO_OVERFLOW AND MS_COMPUTER_RESET_1 );
	OUT_5B_P <= NOT(MS_1401_DIVIDE_OVERFLOW );
	OUT_5D_E <= NOT MB_A_OR_S_DOT_B_DOT_1_DOT_T_DOT_BW_DOT_RC;
	OUT_4E_K <= NOT(OUT_DOT_5B AND PS_LAST_LOGIC_GATE_2 );
	OUT_3F_C_Latch <= NOT(OUT_2F_K AND MS_COMPUTER_RESET_1 AND MS_RESET_OVERFLOW );
	OUT_2F_K_Latch <= NOT(OUT_4E_K AND OUT_3F_C );
	OUT_2H_B <= NOT OUT_3F_C;
	LAMP_15A1F12 <= OUT_2H_B;
	OUT_DOT_5B <= OUT_5B_P OR OUT_5D_E;

	PS_NO_OVERFLOW <= OUT_2A_E;
	PS_OVERFLOW <= OUT_2F_K;

	Latch_3A: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3A_D_Latch,
		Q => OUT_3A_D,
		QBar => OPEN );

	Latch_2A: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2A_E_Latch,
		Q => OUT_2A_E,
		QBar => OPEN );

	Latch_3F: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3F_C_Latch,
		Q => OUT_3F_C,
		QBar => OPEN );

	Latch_2F: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2F_K_Latch,
		Q => OUT_2F_K,
		QBar => OPEN );


end;
