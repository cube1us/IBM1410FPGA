-- VHDL for IBM SMS ALD page 13.50.04.1
-- Title: E CH UNIT SELECTION OPTIONAL
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 7/29/2020 3:51:59 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_13_50_04_1_E_CH_UNIT_SELECTION_OPTIONAL is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_E_CH_U_SEL_REG_NOT_A_BIT:	 in STD_LOGIC;
		PS_E_CH_U_SEL_REG_C_BIT:	 in STD_LOGIC;
		PS_E_CH_U_SEL_REG_NOT_8_BIT:	 in STD_LOGIC;
		PS_E_CH_U_SEL_REG_B_DOT_NOT_A_BIT:	 in STD_LOGIC;
		PS_E_CH_U_SEL_REG_4_BIT:	 in STD_LOGIC;
		PS_E_CH_U_SEL_REG_1_BIT:	 in STD_LOGIC;
		MS_E_CH_SELECT_UNIT_N:	 in STD_LOGIC;
		PS_E_CH_U_SEL_REG_NOT_C_BIT:	 in STD_LOGIC;
		MS_E_CH_SELECT_UNIT_R:	 in STD_LOGIC;
		PS_E_CH_U_SEL_REG_B_BIT:	 in STD_LOGIC;
		MS_E_CH_SELECT_UNIT_L:	 in STD_LOGIC;
		MS_E_CH_SELECT_UNIT_M:	 in STD_LOGIC;
		PS_E_CH_U_SEL_REG_2_BIT:	 in STD_LOGIC;
		PS_E_CH_U_SEL_A_DOT_NOT_8_DOT_NOT_1:	 in STD_LOGIC;
		PS_E_CH_U_SEL_REG_NOT_4_BIT:	 in STD_LOGIC;
		PS_E_CH_U_SEL_REG_NOT_1_BIT:	 in STD_LOGIC;
		PS_E_CH_U_SEL_REG_8_BIT:	 in STD_LOGIC;
		PS_E_CH_U_SEL_REG_NOT_2_BIT:	 in STD_LOGIC;
		MC_UNIT_8_SEL_TO_I_O:	 out STD_LOGIC;
		PS_E_CH_SELECT_UNIT_8:	 out STD_LOGIC;
		MC_SELECT_UNIT_P:	 out STD_LOGIC;
		PS_E_CH_BUFFER_SELECT:	 out STD_LOGIC;
		MC_SELECT_UNIT_D:	 out STD_LOGIC;
		MS_E_CH_SELECT_UNIT_K:	 out STD_LOGIC;
		MC_SELECT_UNIT_Q:	 out STD_LOGIC);
end ALD_13_50_04_1_E_CH_UNIT_SELECTION_OPTIONAL;

architecture behavioral of ALD_13_50_04_1_E_CH_UNIT_SELECTION_OPTIONAL is 

	signal OUT_4A_D: STD_LOGIC;
	signal OUT_3A_C: STD_LOGIC;
	signal OUT_2A_A: STD_LOGIC;
	signal OUT_4B_D: STD_LOGIC;
	signal OUT_3B_A: STD_LOGIC;
	signal OUT_2B_B: STD_LOGIC;
	signal OUT_4C_C: STD_LOGIC;
	signal OUT_3C_F: STD_LOGIC;
	signal OUT_2C_R: STD_LOGIC;
	signal OUT_4D_C: STD_LOGIC;
	signal OUT_3D_D: STD_LOGIC;
	signal OUT_2D_C: STD_LOGIC;
	signal OUT_4E_C: STD_LOGIC;
	signal OUT_3E_G: STD_LOGIC;
	signal OUT_2E_A: STD_LOGIC;
	signal OUT_4F_D: STD_LOGIC;
	signal OUT_2F_K: STD_LOGIC;
	signal OUT_4G_C: STD_LOGIC;
	signal OUT_4H_E: STD_LOGIC;
	signal OUT_2H_H: STD_LOGIC;
	signal OUT_4I_D: STD_LOGIC;
	signal OUT_DOT_3A: STD_LOGIC;
	signal OUT_DOT_4B: STD_LOGIC;
	signal OUT_DOT_2C: STD_LOGIC;
	signal OUT_DOT_3D: STD_LOGIC;
	signal OUT_DOT_4F: STD_LOGIC;
	signal OUT_DOT_4H: STD_LOGIC;

begin

	OUT_4A_D <= NOT(PS_E_CH_U_SEL_REG_NOT_1_BIT AND PS_E_CH_U_SEL_REG_NOT_4_BIT AND PS_E_CH_U_SEL_REG_NOT_2_BIT );
	OUT_3A_C <= NOT(PS_E_CH_U_SEL_REG_NOT_A_BIT AND PS_E_CH_U_SEL_REG_B_BIT AND PS_E_CH_U_SEL_REG_NOT_C_BIT );
	OUT_2A_A <= OUT_DOT_3A;
	OUT_4B_D <= NOT(PS_E_CH_U_SEL_REG_C_BIT AND PS_E_CH_U_SEL_REG_B_DOT_NOT_A_BIT AND PS_E_CH_U_SEL_REG_NOT_8_BIT );
	OUT_3B_A <= OUT_DOT_4B;
	OUT_2B_B <= NOT OUT_DOT_3A;
	OUT_4C_C <= NOT(PS_E_CH_U_SEL_REG_4_BIT AND PS_E_CH_U_SEL_REG_2_BIT AND PS_E_CH_U_SEL_REG_1_BIT );
	OUT_3C_F <= NOT PS_E_CH_U_SEL_REG_8_BIT;
	OUT_2C_R <= NOT OUT_DOT_3A;
	OUT_4D_C <= NOT(MS_E_CH_SELECT_UNIT_R AND MS_E_CH_SELECT_UNIT_N AND OUT_DOT_4B );
	OUT_3D_D <= NOT(PS_E_CH_U_SEL_REG_NOT_C_BIT AND PS_E_CH_U_SEL_REG_B_BIT AND PS_E_CH_U_SEL_REG_NOT_2_BIT );
	OUT_2D_C <= NOT(OUT_DOT_3D );
	OUT_4E_C <= NOT(MS_E_CH_SELECT_UNIT_L AND MS_E_CH_SELECT_UNIT_M AND OUT_DOT_4H );
	OUT_3E_G <= NOT(PS_E_CH_U_SEL_A_DOT_NOT_8_DOT_NOT_1 AND PS_E_CH_U_SEL_REG_4_BIT );
	OUT_2E_A <= OUT_DOT_3D;
	OUT_4F_D <= NOT(PS_E_CH_U_SEL_REG_C_BIT AND PS_E_CH_U_SEL_REG_B_DOT_NOT_A_BIT AND PS_E_CH_U_SEL_REG_NOT_8_BIT );
	OUT_2F_K <= OUT_DOT_4F;
	OUT_4G_C <= NOT(PS_E_CH_U_SEL_REG_NOT_4_BIT AND PS_E_CH_U_SEL_REG_2_BIT AND PS_E_CH_U_SEL_REG_NOT_1_BIT );
	OUT_4H_E <= NOT(PS_E_CH_U_SEL_REG_B_DOT_NOT_A_BIT AND PS_E_CH_U_SEL_REG_C_BIT AND PS_E_CH_U_SEL_REG_8_BIT );
	OUT_2H_H <= OUT_DOT_4H;
	OUT_4I_D <= NOT(PS_E_CH_U_SEL_REG_NOT_4_BIT AND PS_E_CH_U_SEL_REG_NOT_1_BIT AND PS_E_CH_U_SEL_REG_NOT_2_BIT );
	OUT_DOT_3A <= OUT_4A_D OR OUT_3A_C OR OUT_3C_F;
	OUT_DOT_4B <= OUT_4B_D OR OUT_4C_C;
	OUT_DOT_2C <= OUT_2C_R OR OUT_4D_C OR OUT_2D_C OR OUT_4E_C;
	OUT_DOT_3D <= OUT_3D_D OR OUT_3E_G;
	OUT_DOT_4F <= OUT_4F_D OR OUT_4G_C;
	OUT_DOT_4H <= OUT_4H_E OR OUT_4I_D;

	MC_UNIT_8_SEL_TO_I_O <= OUT_2A_A;
	MC_SELECT_UNIT_P <= OUT_3B_A;
	PS_E_CH_SELECT_UNIT_8 <= OUT_2B_B;
	MC_SELECT_UNIT_D <= OUT_2E_A;
	MS_E_CH_SELECT_UNIT_K <= OUT_2F_K;
	MC_SELECT_UNIT_Q <= OUT_2H_H;
	PS_E_CH_BUFFER_SELECT <= OUT_DOT_2C;


end;
