-- Test Bench VHDL for IBM SMS ALD page 45.50.05.1
-- Title: CONSOLE PRINTER SHIFT CONTROLS
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 11/1/2020 4:58:20 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_45_50_05_1_CONSOLE_PRINTER_SHIFT_CONTROLS_tb is
end ALD_45_50_05_1_CONSOLE_PRINTER_SHIFT_CONTROLS_tb;

architecture behavioral of ALD_45_50_05_1_CONSOLE_PRINTER_SHIFT_CONTROLS_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_45_50_05_1_CONSOLE_PRINTER_SHIFT_CONTROLS
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_CONSOLE_OUTPUT_8_BIT:	 in STD_LOGIC;
		MS_CONSOLE_OUTPUT_4_BIT:	 in STD_LOGIC;
		MS_CONSOLE_OUTPUT_2_BIT:	 in STD_LOGIC;
		MS_CONSOLE_OUTPUT_1_BIT:	 in STD_LOGIC;
		PS_CONSOLE_OUTPUT_8_BIT:	 in STD_LOGIC;
		PS_CONSOLE_OUTPUT_4_BIT:	 in STD_LOGIC;
		PS_CONS_CHAR_CONTROL:	 in STD_LOGIC;
		MS_CONSOLE_CHECK_STROBE:	 in STD_LOGIC;
		MS_KEYBOARD_UNLOCK:	 in STD_LOGIC;
		MS_ALTER_INQUIRY_UNLOCK:	 in STD_LOGIC;
		MS_CONSOLE_OUTPUT_ERROR:	 in STD_LOGIC;
		MV_CONS_PRINTER_C3_OR_C4_NO:	 in STD_LOGIC;
		PS_CONS_BACK_SPACE_CONTROL:	 in STD_LOGIC;
		PS_CONSOLE_OUTPUT_ERROR:	 in STD_LOGIC;
		MS_CONS_WM_CONTROL:	 in STD_LOGIC;
		PP_SPECIAL_OR_12V_FOR_REL_DRIVERS:	 in STD_LOGIC;
		MV_CONS_PRINTER_UPPER_CASE_STAR_S1NC:	 in STD_LOGIC;
		MS_CONS_BACK_SPACE_CONTROL:	 in STD_LOGIC;
		PS_ALTER_INQUIRY_UNLOCK:	 in STD_LOGIC;
		MV_CONS_PRINTER_LOWER_CASE_STAR_S1NO:	 in STD_LOGIC;
		GROUND:	 in STD_LOGIC;
		MS_8_4_2_1_BIT:	 out STD_LOGIC;
		PW_UPPER_CASE_SHIFT_SOLENOID:	 out STD_LOGIC;
		PS_CONS_PRINTER_SHIFT_COMPLETE:	 out STD_LOGIC;
		PW_LOWER_CASE_SHIFT_SOLENOID:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal MS_CONSOLE_OUTPUT_8_BIT: STD_LOGIC := '1';
	signal MS_CONSOLE_OUTPUT_4_BIT: STD_LOGIC := '1';
	signal MS_CONSOLE_OUTPUT_2_BIT: STD_LOGIC := '1';
	signal MS_CONSOLE_OUTPUT_1_BIT: STD_LOGIC := '1';
	signal PS_CONSOLE_OUTPUT_8_BIT: STD_LOGIC := '0';
	signal PS_CONSOLE_OUTPUT_4_BIT: STD_LOGIC := '0';
	signal PS_CONS_CHAR_CONTROL: STD_LOGIC := '0';
	signal MS_CONSOLE_CHECK_STROBE: STD_LOGIC := '1';
	signal MS_KEYBOARD_UNLOCK: STD_LOGIC := '1';
	signal MS_ALTER_INQUIRY_UNLOCK: STD_LOGIC := '1';
	signal MS_CONSOLE_OUTPUT_ERROR: STD_LOGIC := '1';
	signal MV_CONS_PRINTER_C3_OR_C4_NO: STD_LOGIC := '1';
	signal PS_CONS_BACK_SPACE_CONTROL: STD_LOGIC := '0';
	signal PS_CONSOLE_OUTPUT_ERROR: STD_LOGIC := '0';
	signal MS_CONS_WM_CONTROL: STD_LOGIC := '1';
	signal PP_SPECIAL_OR_12V_FOR_REL_DRIVERS: STD_LOGIC := '0';
	signal MV_CONS_PRINTER_UPPER_CASE_STAR_S1NC: STD_LOGIC := '1';
	signal MS_CONS_BACK_SPACE_CONTROL: STD_LOGIC := '1';
	signal PS_ALTER_INQUIRY_UNLOCK: STD_LOGIC := '0';
	signal MV_CONS_PRINTER_LOWER_CASE_STAR_S1NO: STD_LOGIC := '1';
	signal GROUND: STD_LOGIC := '0';

	-- Outputs

	signal MS_8_4_2_1_BIT: STD_LOGIC;
	signal PW_UPPER_CASE_SHIFT_SOLENOID: STD_LOGIC;
	signal PS_CONS_PRINTER_SHIFT_COMPLETE: STD_LOGIC;
	signal PW_LOWER_CASE_SHIFT_SOLENOID: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

   constant MX_X1A_POS: integer := 7;
   constant MX_X6A_POS: integer := 8;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_45_50_05_1_CONSOLE_PRINTER_SHIFT_CONTROLS port map(
		FPGA_CLK => FPGA_CLK,
		MS_CONSOLE_OUTPUT_8_BIT => MS_CONSOLE_OUTPUT_8_BIT,
		MS_CONSOLE_OUTPUT_4_BIT => MS_CONSOLE_OUTPUT_4_BIT,
		MS_CONSOLE_OUTPUT_2_BIT => MS_CONSOLE_OUTPUT_2_BIT,
		MS_CONSOLE_OUTPUT_1_BIT => MS_CONSOLE_OUTPUT_1_BIT,
		PS_CONSOLE_OUTPUT_8_BIT => PS_CONSOLE_OUTPUT_8_BIT,
		PS_CONSOLE_OUTPUT_4_BIT => PS_CONSOLE_OUTPUT_4_BIT,
		PS_CONS_CHAR_CONTROL => PS_CONS_CHAR_CONTROL,
		MS_CONSOLE_CHECK_STROBE => MS_CONSOLE_CHECK_STROBE,
		MS_KEYBOARD_UNLOCK => MS_KEYBOARD_UNLOCK,
		MS_ALTER_INQUIRY_UNLOCK => MS_ALTER_INQUIRY_UNLOCK,
		MS_CONSOLE_OUTPUT_ERROR => MS_CONSOLE_OUTPUT_ERROR,
		MV_CONS_PRINTER_C3_OR_C4_NO => MV_CONS_PRINTER_C3_OR_C4_NO,
		PS_CONS_BACK_SPACE_CONTROL => PS_CONS_BACK_SPACE_CONTROL,
		PS_CONSOLE_OUTPUT_ERROR => PS_CONSOLE_OUTPUT_ERROR,
		MS_CONS_WM_CONTROL => MS_CONS_WM_CONTROL,
		PP_SPECIAL_OR_12V_FOR_REL_DRIVERS => PP_SPECIAL_OR_12V_FOR_REL_DRIVERS,
		MV_CONS_PRINTER_UPPER_CASE_STAR_S1NC => MV_CONS_PRINTER_UPPER_CASE_STAR_S1NC,
		MS_CONS_BACK_SPACE_CONTROL => MS_CONS_BACK_SPACE_CONTROL,
		PS_ALTER_INQUIRY_UNLOCK => PS_ALTER_INQUIRY_UNLOCK,
		MV_CONS_PRINTER_LOWER_CASE_STAR_S1NO => MV_CONS_PRINTER_LOWER_CASE_STAR_S1NO,
		GROUND => GROUND,
		MS_8_4_2_1_BIT => MS_8_4_2_1_BIT,
		PW_UPPER_CASE_SHIFT_SOLENOID => PW_UPPER_CASE_SHIFT_SOLENOID,
		PS_CONS_PRINTER_SHIFT_COMPLETE => PS_CONS_PRINTER_SHIFT_COMPLETE,
		PW_LOWER_CASE_SHIFT_SOLENOID => PW_LOWER_CASE_SHIFT_SOLENOID);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;
   variable tv: std_logic_vector(25 downto 0);
   variable a,b,c,d,e,f,g,h,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z: std_logic;
   variable g1, g2, g3, g4, g5, g6, g7, g8, g9, g10: std_logic;

   begin

   -- Your test bench code

   testName := "45.50.05.1        ";

   for tt in 0 to 2**19 loop
      tv := std_logic_vector(to_unsigned(tt,tv'Length));
      a := tv(0);
      b := tv(1);
      c := tv(2);
      d := tv(3);
      e := tv(4);
      f := tv(5);
      g := tv(6);
      h := tv(7);
      j := tv(8);
      k := tv(9);
      l := tv(10);
      m := tv(11);
      n := tv(12);
      o := tv(13);
      p := tv(14);
      r := tv(15);
      s := tv(16);
      t := tv(17);
      u := tv(18);
      
      g1 := (not a and not b and not c and not d) or (e and f);
      g2 := (g and not h and not j) or (not l and n and not k);
      g3 := (n and t) or (not g1 and g2);
      g4 := (g1 and g2) or p or (n and o);

		PP_SPECIAL_OR_12V_FOR_REL_DRIVERS <= '1'; -- Needs a 1 because of how HDL generates
		
		MS_CONSOLE_OUTPUT_8_BIT <= not a;
		MS_CONSOLE_OUTPUT_4_BIT <= not b;
		MS_CONSOLE_OUTPUT_2_BIT <= not c;
		MS_CONSOLE_OUTPUT_1_BIT <= not d;
		PS_CONSOLE_OUTPUT_8_BIT <= e;
		PS_CONSOLE_OUTPUT_4_BIT <= f;
		PS_CONS_CHAR_CONTROL <= g;
		MS_CONSOLE_CHECK_STROBE <= not h;
		MS_KEYBOARD_UNLOCK <= not j;
		MS_ALTER_INQUIRY_UNLOCK <= not k;
		MS_CONSOLE_OUTPUT_ERROR <= not l;
		MV_CONS_PRINTER_C3_OR_C4_NO <= not m;
		PS_CONS_BACK_SPACE_CONTROL <= n;
		PS_CONSOLE_OUTPUT_ERROR <= o;
		MS_CONS_WM_CONTROL <= not p;
		MV_CONS_PRINTER_UPPER_CASE_STAR_S1NC <= not r;
		MS_CONS_BACK_SPACE_CONTROL <= not s;
		PS_ALTER_INQUIRY_UNLOCK <= t;
		MV_CONS_PRINTER_LOWER_CASE_STAR_S1NO <= not u;
      
      wait for 30 ns;

      check1(MS_8_4_2_1_BIT,not(a or b or c or d),testName,"-S 8 4 2 1 Bit");
      check1(PW_UPPER_CASE_SHIFT_SOLENOID,not r and g4 and not m,testName,"UC Shift");
      check1(PS_CONS_PRINTER_SHIFT_COMPLETE,
         (not(not u and g3) and not m and not(not r and g4)) or s,
         testName,"Printer Shift Complete");
      check1(PW_LOWER_CASE_SHIFT_SOLENOID,not m and g3 and not u,testName,"LC Shift");      
      
   end loop;

   assert false report "Simulation Ended NORMALLY" severity failure;

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 20 ms;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY (TIMEOUT)" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

end;
