-- VHDL for IBM SMS ALD page 18.12.01.1
-- Title: CHANNEL B NUMERIC VALIDITY CHECK
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/11/2020 1:26:48 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_18_12_01_1_CHANNEL_B_NUMERIC_VALIDITY_CHECK is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_B_CH_1_BIT:	 in STD_LOGIC;
		MV_1ST_CHECK_TEST_SWITCH:	 in STD_LOGIC;
		PS_B_CH_NOT_1_BIT:	 in STD_LOGIC;
		PS_B_CH_NOT_8_BIT:	 in STD_LOGIC;
		PS_B_CH_8_BIT:	 in STD_LOGIC;
		MV_2ND_CHECK_TEST_SWITCH:	 in STD_LOGIC;
		PS_B_CH_2_BIT:	 in STD_LOGIC;
		PS_B_CH_NOT_2_BIT:	 in STD_LOGIC;
		PS_B_CH_NOT_4_BIT:	 in STD_LOGIC;
		PS_B_CH_4_BIT:	 in STD_LOGIC;
		PS_B_CH_NOT_8_AND_NOT_1_BIT:	 out STD_LOGIC;
		PS_B_CH_8_AND_1_BIT:	 out STD_LOGIC;
		PS_B_CH_VC_NUMERICS_ODD:	 out STD_LOGIC;
		PS_B_CH_8_AND_NOT_1_BIT:	 out STD_LOGIC;
		PS_B_CH_NOT_8_AND_1_BIT:	 out STD_LOGIC;
		PS_B_CH_NOT_4_AND_NOT_2_BIT:	 out STD_LOGIC;
		PS_B_CH_VC_NUMERICS_EVEN:	 out STD_LOGIC;
		PS_B_CH_4_AND_NOT_2_BIT:	 out STD_LOGIC;
		PS_B_CH_NOT_4_AND_2_BIT:	 out STD_LOGIC);
end ALD_18_12_01_1_CHANNEL_B_NUMERIC_VALIDITY_CHECK;

architecture behavioral of ALD_18_12_01_1_CHANNEL_B_NUMERIC_VALIDITY_CHECK is 

	signal OUT_5A_G: STD_LOGIC;
	signal OUT_3A_G: STD_LOGIC;
	signal OUT_2A_L: STD_LOGIC;
	signal OUT_1A_B: STD_LOGIC;
	signal OUT_5B_C: STD_LOGIC;
	signal OUT_3B_G: STD_LOGIC;
	signal OUT_2B_NoPin: STD_LOGIC;
	signal OUT_1B_K: STD_LOGIC;
	signal OUT_5C_F: STD_LOGIC;
	signal OUT_3C_C: STD_LOGIC;
	signal OUT_1C_B: STD_LOGIC;
	signal OUT_5D_R: STD_LOGIC;
	signal OUT_3D_C: STD_LOGIC;
	signal OUT_2D_NoPin: STD_LOGIC;
	signal OUT_1D_A: STD_LOGIC;
	signal OUT_1E_C: STD_LOGIC;
	signal OUT_5F_G: STD_LOGIC;
	signal OUT_3F_Q: STD_LOGIC;
	signal OUT_2F_NoPin: STD_LOGIC;
	signal OUT_1F_P: STD_LOGIC;
	signal OUT_5G_C: STD_LOGIC;
	signal OUT_3G_F: STD_LOGIC;
	signal OUT_1G_C: STD_LOGIC;
	signal OUT_5H_F: STD_LOGIC;
	signal OUT_3H_K: STD_LOGIC;
	signal OUT_2H_NoPin: STD_LOGIC;
	signal OUT_1H_L: STD_LOGIC;
	signal OUT_5I_R: STD_LOGIC;
	signal OUT_3I_R: STD_LOGIC;
	signal OUT_1I_B: STD_LOGIC;
	signal OUT_DOT_3B: STD_LOGIC;
	signal OUT_DOT_3D: STD_LOGIC;
	signal OUT_DOT_1F: STD_LOGIC;
	signal OUT_DOT_1B: STD_LOGIC;

begin

	OUT_5A_G <= NOT(PS_B_CH_1_BIT OR PS_B_CH_8_BIT );
	OUT_3A_G <= NOT(MV_1ST_CHECK_TEST_SWITCH );
	OUT_2A_L <= OUT_5A_G;
	OUT_1A_B <= OUT_5B_C;
	OUT_5B_C <= NOT(PS_B_CH_NOT_1_BIT OR PS_B_CH_NOT_8_BIT );
	OUT_3B_G <= NOT(OUT_2A_L OR OUT_1A_B );
	OUT_2B_NoPin <= OUT_DOT_3B AND OUT_3G_F;
	OUT_1B_K <= NOT(MV_2ND_CHECK_TEST_SWITCH );
	OUT_5C_F <= NOT(PS_B_CH_NOT_8_BIT OR PS_B_CH_1_BIT );
	OUT_3C_C <= NOT(MV_1ST_CHECK_TEST_SWITCH );
	OUT_1C_B <= NOT(OUT_2B_NoPin OR OUT_2D_NoPin );
	OUT_5D_R <= NOT(PS_B_CH_NOT_1_BIT OR PS_B_CH_8_BIT );
	OUT_3D_C <= NOT(OUT_1D_A OR OUT_1E_C );
	OUT_2D_NoPin <= OUT_DOT_3D AND OUT_3I_R;
	OUT_1D_A <= OUT_5C_F;
	OUT_1E_C <= OUT_5D_R;
	OUT_5F_G <= NOT(PS_B_CH_2_BIT OR PS_B_CH_4_BIT );
	OUT_3F_Q <= OUT_5F_G;
	OUT_2F_NoPin <= OUT_DOT_3B AND OUT_3I_R;
	OUT_1F_P <= NOT(MV_2ND_CHECK_TEST_SWITCH );
	OUT_5G_C <= NOT(PS_B_CH_NOT_2_BIT OR PS_B_CH_NOT_4_BIT );
	OUT_3G_F <= NOT(OUT_3F_Q OR OUT_1H_L );
	OUT_1G_C <= NOT(OUT_2F_NoPin OR OUT_2H_NoPin );
	OUT_5H_F <= NOT(PS_B_CH_NOT_4_BIT OR PS_B_CH_2_BIT );
	OUT_3H_K <= OUT_5H_F;
	OUT_2H_NoPin <= OUT_3G_F AND OUT_DOT_3D;
	OUT_1H_L <= OUT_5G_C;
	OUT_5I_R <= NOT(PS_B_CH_NOT_2_BIT OR PS_B_CH_4_BIT );
	OUT_3I_R <= NOT(OUT_3H_K OR OUT_1I_B );
	OUT_1I_B <= OUT_5I_R;
	OUT_DOT_3B <= OUT_3A_G OR OUT_3B_G;
	OUT_DOT_3D <= OUT_3C_C OR OUT_3D_C;
	OUT_DOT_1F <= OUT_1F_P OR OUT_1G_C;
	OUT_DOT_1B <= OUT_1B_K OR OUT_1C_B;

	PS_B_CH_NOT_8_AND_NOT_1_BIT <= OUT_2A_L;
	PS_B_CH_8_AND_1_BIT <= OUT_1A_B;
	PS_B_CH_8_AND_NOT_1_BIT <= OUT_1D_A;
	PS_B_CH_NOT_8_AND_1_BIT <= OUT_1E_C;
	PS_B_CH_NOT_4_AND_NOT_2_BIT <= OUT_3F_Q;
	PS_B_CH_4_AND_NOT_2_BIT <= OUT_3H_K;
	PS_B_CH_NOT_4_AND_2_BIT <= OUT_1I_B;
	PS_B_CH_VC_NUMERICS_EVEN <= OUT_DOT_1F;
	PS_B_CH_VC_NUMERICS_ODD <= OUT_DOT_1B;


end;
