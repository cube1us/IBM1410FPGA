-- Test Bench VHDL for IBM SMS ALD page 13.50.02.1
-- Title: I-O CHANNEL SELECT REGISTER
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 7/29/2020 3:23:27 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_13_50_02_1_I_O_CHANNEL_SELECT_REGISTER_tb is
end ALD_13_50_02_1_I_O_CHANNEL_SELECT_REGISTER_tb;

architecture behavioral of ALD_13_50_02_1_I_O_CHANNEL_SELECT_REGISTER_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_13_50_02_1_I_O_CHANNEL_SELECT_REGISTER
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_B_CH_A_BIT:	 in STD_LOGIC;
		MS_PROGRAM_RESET_2:	 in STD_LOGIC;
		MS_RESET_I_O_CH_SEL_REG:	 in STD_LOGIC;
		PS_B_CH_B_BIT:	 in STD_LOGIC;
		PS_SET_I_O_CH_SEL_REG:	 in STD_LOGIC;
		PS_B_CH_NOT_A_BIT:	 in STD_LOGIC;
		MS_I_O_LOZENGE_LATCH:	 out STD_LOGIC;
		PS_I_O_LOZENGE_LATCH:	 out STD_LOGIC;
		PS_LOZENGE_OR_ASTERISK:	 out STD_LOGIC;
		MS_I_O_ASTERISK_LATCH:	 out STD_LOGIC;
		PS_I_O_ASTERISK_LATCH:	 out STD_LOGIC;
		MS_LOZENGE_OR_ASTERISK:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_B_CH_A_BIT: STD_LOGIC := '0';
	signal MS_PROGRAM_RESET_2: STD_LOGIC := '1';
	signal MS_RESET_I_O_CH_SEL_REG: STD_LOGIC := '1';
	signal PS_B_CH_B_BIT: STD_LOGIC := '0';
	signal PS_SET_I_O_CH_SEL_REG: STD_LOGIC := '0';
	signal PS_B_CH_NOT_A_BIT: STD_LOGIC := '0';

	-- Outputs

	signal MS_I_O_LOZENGE_LATCH: STD_LOGIC;
	signal PS_I_O_LOZENGE_LATCH: STD_LOGIC;
	signal PS_LOZENGE_OR_ASTERISK: STD_LOGIC;
	signal MS_I_O_ASTERISK_LATCH: STD_LOGIC;
	signal PS_I_O_ASTERISK_LATCH: STD_LOGIC;
	signal MS_LOZENGE_OR_ASTERISK: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_13_50_02_1_I_O_CHANNEL_SELECT_REGISTER port map(
		FPGA_CLK => FPGA_CLK,
		PS_B_CH_A_BIT => PS_B_CH_A_BIT,
		MS_PROGRAM_RESET_2 => MS_PROGRAM_RESET_2,
		MS_RESET_I_O_CH_SEL_REG => MS_RESET_I_O_CH_SEL_REG,
		PS_B_CH_B_BIT => PS_B_CH_B_BIT,
		PS_SET_I_O_CH_SEL_REG => PS_SET_I_O_CH_SEL_REG,
		PS_B_CH_NOT_A_BIT => PS_B_CH_NOT_A_BIT,
		MS_I_O_LOZENGE_LATCH => MS_I_O_LOZENGE_LATCH,
		PS_I_O_LOZENGE_LATCH => PS_I_O_LOZENGE_LATCH,
		PS_LOZENGE_OR_ASTERISK => PS_LOZENGE_OR_ASTERISK,
		MS_I_O_ASTERISK_LATCH => MS_I_O_ASTERISK_LATCH,
		PS_I_O_ASTERISK_LATCH => PS_I_O_ASTERISK_LATCH,
		MS_LOZENGE_OR_ASTERISK => MS_LOZENGE_OR_ASTERISK);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code
   
   testName := "13.50.02.1        ";
   
   wait for 30 ns;
   MS_PROGRAM_RESET_2 <= '0';
   wait for 90 ns;
   MS_PROGRAM_RESET_2 <= '1';
   wait for 30 ns;
   
   check1(PS_I_O_LOZENGE_LATCH,'0',testName,"1A");
   check1(MS_I_O_LOZENGE_LATCH,'1',testName,"1B");
   check1(PS_LOZENGE_OR_ASTERISK,'0',testName,"1C");
   check1(MS_LOZENGE_OR_ASTERISK,'1',testName,"1D");
   check1(PS_I_O_ASTERISK_LATCH,'0',testName,"1E");
   
   PS_B_CH_A_BIT <= '1';
   PS_B_CH_B_BIT <= '1';
   wait for 30 ns;
   check1(PS_I_O_LOZENGE_LATCH,'0',testName,"1F");
   check1(MS_I_O_LOZENGE_LATCH,'1',testName,"1G");
   check1(PS_LOZENGE_OR_ASTERISK,'0',testName,"1H");
   check1(MS_LOZENGE_OR_ASTERISK,'1',testName,"1I");
   check1(PS_I_O_ASTERISK_LATCH,'0',testName,"1J");
   PS_SET_I_O_CH_SEL_REG <= '1';
   wait for 30 ns;
   PS_SET_I_O_CH_SEL_REG <= '0';
   PS_B_CH_A_BIT <= '0';
   PS_B_CH_B_BIT <= '0';
   -- Should be latched, even with stimulus removed
   wait for 30 ns;
   check1(PS_I_O_LOZENGE_LATCH,'1',testName,"1K");
   check1(MS_I_O_LOZENGE_LATCH,'0',testName,"1L");
   check1(PS_LOZENGE_OR_ASTERISK,'1',testName,"1M");
   check1(MS_LOZENGE_OR_ASTERISK,'0',testName,"1N");
   check1(PS_I_O_ASTERISK_LATCH,'0',testName,"1O");
   
   
   MS_RESET_I_O_CH_SEL_REG <= '0';
   wait for 30 ns;
   MS_RESET_I_O_CH_SEL_REG <= '1';
   check1(PS_I_O_LOZENGE_LATCH,'0',testName,"1P");
   check1(MS_I_O_LOZENGE_LATCH,'1',testName,"1Q");
   check1(PS_LOZENGE_OR_ASTERISK,'0',testName,"1R");
   check1(MS_LOZENGE_OR_ASTERISK,'1',testName,"1S");
   check1(PS_I_O_ASTERISK_LATCH,'0',testName,"1T");
   check1(MS_I_O_ASTERISK_LATCH,'1',testName,"1U");
   
   PS_B_CH_NOT_A_BIT <= '1';
   PS_B_CH_B_BIT <= '1';
   wait for 30 ns;
   check1(PS_I_O_LOZENGE_LATCH,'0',testName,"2A");
   check1(PS_LOZENGE_OR_ASTERISK,'0',testName,"2B");
   check1(MS_LOZENGE_OR_ASTERISK,'1',testName,"2C");
   check1(PS_I_O_ASTERISK_LATCH,'0',testName,"2D");
   check1(MS_I_O_ASTERISK_LATCH,'1',testName,"2E");
   PS_SET_I_O_CH_SEL_REG <= '1';
   wait for 30 ns;
   PS_SET_I_O_CH_SEL_REG <= '0';
   PS_B_CH_NOT_A_BIT <= '0';
   PS_B_CH_B_BIT <= '0';
   wait for 30 ns;
   -- Should be latched now, even with stimulus removed
   check1(PS_I_O_LOZENGE_LATCH,'0',testName,"2F");
   check1(PS_LOZENGE_OR_ASTERISK,'1',testName,"2G");
   check1(MS_LOZENGE_OR_ASTERISK,'0',testName,"2H");
   check1(PS_I_O_ASTERISK_LATCH,'1',testName,"2I");
   check1(MS_I_O_ASTERISK_LATCH,'0',testName,"2J");

   MS_RESET_I_O_CH_SEL_REG <= '0';
   wait for 30 ns;
   MS_RESET_I_O_CH_SEL_REG <= '1';
   check1(PS_I_O_LOZENGE_LATCH,'0',testName,"2K");
   check1(MS_I_O_LOZENGE_LATCH,'1',testName,"2L");
   check1(PS_LOZENGE_OR_ASTERISK,'0',testName,"2M");
   check1(MS_LOZENGE_OR_ASTERISK,'1',testName,"2N");
   check1(PS_I_O_ASTERISK_LATCH,'0',testName,"2O");
   check1(MS_I_O_ASTERISK_LATCH,'1',testName,"2P");
   
   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

end;
