-- Test BenchVHDL for IBM SMS ALD group ARing
-- Title: ARing
-- IBM Machine Name 1411
-- Generated by GenerateHDL on 9/2/2020 11:14:14 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ARing_tb is
end ARing_tb;

architecture behavioral of ARing_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ARing
	    Port (
		FPGA_CLK: in STD_LOGIC;
		MS_PROGRAM_RESET_1: in STD_LOGIC;
		MS_SET_A_RING_1_TRIG: in STD_LOGIC;
		PS_A_RING_ADV_B: in STD_LOGIC;
		PS_A_CYCLE: in STD_LOGIC;
		PS_1401_STORE_AR_OP_CODES: in STD_LOGIC;
		PS_CONS_MX_Y5_POS: in STD_LOGIC;
		PS_CONS_ADDR_REG_EXIT_GATE: in STD_LOGIC;
		MS_CONS_ADDR_REG_EXIT_GATE: in STD_LOGIC;
		PS_A_RING_ADV_A: in STD_LOGIC;
		PS_CONS_MX_Y4_POS: in STD_LOGIC;
		PS_CONS_MX_Y3_POS: in STD_LOGIC;
		MS_STORE_AR_SET_A_CYCLE_CTRL_A: in STD_LOGIC;
		MS_1401_MODE_1: in STD_LOGIC;
		PS_CONS_MX_Y2_POS: in STD_LOGIC;
		MS_STORE_AR_SET_C_CYCLE_CTRL_B: in STD_LOGIC;
		PS_CONS_MX_Y1_POS: in STD_LOGIC;
		PS_ADDR_SCNR_2_POS: out STD_LOGIC;
		MS_H_OR_Q_OP_DOT_A_CY_DOT_A_RING_2_TIME: out STD_LOGIC;
		PS_ADDR_SCNR_3_POS: out STD_LOGIC;
		PS_ADDR_SCNR_4_POS: out STD_LOGIC;
		MS_H_OR_Q_OP_DOT_A_CY_DOT_A_RING_4_TIME: out STD_LOGIC;
		PS_ADDR_SCNR_5_POS: out STD_LOGIC;
		PS_ADDR_SCNR_6_POS: out STD_LOGIC;
		PS_A_RING_2_OR_3_TIME: out STD_LOGIC;
		PS_A_RING_2_OR_3_OR_4_OR_5_TIME: out STD_LOGIC;
		PS_A_RING_OFF_TIME: out STD_LOGIC;
		PS_A_RING_BUS: out STD_LOGIC_VECTOR (6 downTo 1);
		MS_A_RING_BUS: out STD_LOGIC_VECTOR (6 downTo 1);
		LAMPS_ARING: out STD_LOGIC_VECTOR (6 downTo 1));
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal MS_PROGRAM_RESET_1: STD_LOGIC := '1';
	signal MS_SET_A_RING_1_TRIG: STD_LOGIC := '1';
	signal PS_A_RING_ADV_B: STD_LOGIC := '0';
	signal PS_A_CYCLE: STD_LOGIC := '0';
	signal PS_1401_STORE_AR_OP_CODES: STD_LOGIC := '0';
	signal PS_CONS_MX_Y5_POS: STD_LOGIC := '0';
	signal PS_CONS_ADDR_REG_EXIT_GATE: STD_LOGIC := '0';
	signal MS_CONS_ADDR_REG_EXIT_GATE: STD_LOGIC := '1';
	signal PS_A_RING_ADV_A: STD_LOGIC := '0';
	signal PS_CONS_MX_Y4_POS: STD_LOGIC := '0';
	signal PS_CONS_MX_Y3_POS: STD_LOGIC := '0';
	signal MS_STORE_AR_SET_A_CYCLE_CTRL_A: STD_LOGIC := '1';
	signal MS_1401_MODE_1: STD_LOGIC := '1';
	signal PS_CONS_MX_Y2_POS: STD_LOGIC := '0';
	signal MS_STORE_AR_SET_C_CYCLE_CTRL_B: STD_LOGIC := '1';
	signal PS_CONS_MX_Y1_POS: STD_LOGIC := '0';

	-- Outputs

	signal PS_ADDR_SCNR_2_POS: STD_LOGIC;
	signal MS_H_OR_Q_OP_DOT_A_CY_DOT_A_RING_2_TIME: STD_LOGIC;
	signal PS_ADDR_SCNR_3_POS: STD_LOGIC;
	signal PS_ADDR_SCNR_4_POS: STD_LOGIC;
	signal MS_H_OR_Q_OP_DOT_A_CY_DOT_A_RING_4_TIME: STD_LOGIC;
	signal PS_ADDR_SCNR_5_POS: STD_LOGIC;
	signal PS_ADDR_SCNR_6_POS: STD_LOGIC;
	signal PS_A_RING_2_OR_3_TIME: STD_LOGIC;
	signal PS_A_RING_2_OR_3_OR_4_OR_5_TIME: STD_LOGIC;
	signal PS_A_RING_OFF_TIME: STD_LOGIC;
	signal PS_A_RING_BUS: STD_LOGIC_VECTOR (6 downTo 1);
	signal MS_A_RING_BUS: STD_LOGIC_VECTOR (6 downTo 1);
	signal LAMPS_ARING: STD_LOGIC_VECTOR (6 downTo 1);

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ARing port map(
		FPGA_CLK => FPGA_CLK,
		MS_PROGRAM_RESET_1 => MS_PROGRAM_RESET_1,
		MS_SET_A_RING_1_TRIG => MS_SET_A_RING_1_TRIG,
		PS_A_RING_ADV_B => PS_A_RING_ADV_B,
		PS_A_CYCLE => PS_A_CYCLE,
		PS_1401_STORE_AR_OP_CODES => PS_1401_STORE_AR_OP_CODES,
		PS_CONS_MX_Y5_POS => PS_CONS_MX_Y5_POS,
		PS_CONS_ADDR_REG_EXIT_GATE => PS_CONS_ADDR_REG_EXIT_GATE,
		MS_CONS_ADDR_REG_EXIT_GATE => MS_CONS_ADDR_REG_EXIT_GATE,
		PS_A_RING_ADV_A => PS_A_RING_ADV_A,
		PS_CONS_MX_Y4_POS => PS_CONS_MX_Y4_POS,
		PS_CONS_MX_Y3_POS => PS_CONS_MX_Y3_POS,
		MS_STORE_AR_SET_A_CYCLE_CTRL_A => MS_STORE_AR_SET_A_CYCLE_CTRL_A,
		MS_1401_MODE_1 => MS_1401_MODE_1,
		PS_CONS_MX_Y2_POS => PS_CONS_MX_Y2_POS,
		MS_STORE_AR_SET_C_CYCLE_CTRL_B => MS_STORE_AR_SET_C_CYCLE_CTRL_B,
		PS_CONS_MX_Y1_POS => PS_CONS_MX_Y1_POS,
		PS_ADDR_SCNR_2_POS => PS_ADDR_SCNR_2_POS,
		MS_H_OR_Q_OP_DOT_A_CY_DOT_A_RING_2_TIME => MS_H_OR_Q_OP_DOT_A_CY_DOT_A_RING_2_TIME,
		PS_ADDR_SCNR_3_POS => PS_ADDR_SCNR_3_POS,
		PS_ADDR_SCNR_4_POS => PS_ADDR_SCNR_4_POS,
		MS_H_OR_Q_OP_DOT_A_CY_DOT_A_RING_4_TIME => MS_H_OR_Q_OP_DOT_A_CY_DOT_A_RING_4_TIME,
		PS_ADDR_SCNR_5_POS => PS_ADDR_SCNR_5_POS,
		PS_ADDR_SCNR_6_POS => PS_ADDR_SCNR_6_POS,
		PS_A_RING_2_OR_3_TIME => PS_A_RING_2_OR_3_TIME,
		PS_A_RING_2_OR_3_OR_4_OR_5_TIME => PS_A_RING_2_OR_3_OR_4_OR_5_TIME,
		PS_A_RING_OFF_TIME => PS_A_RING_OFF_TIME,
		PS_A_RING_BUS => PS_A_RING_BUS,
		MS_A_RING_BUS => MS_A_RING_BUS,
		LAMPS_ARING => LAMPS_ARING);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

END;
