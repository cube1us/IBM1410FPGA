-- VHDL for IBM SMS ALD page 16.62.01.1
-- Title: MPLY DIV LAST LATCH-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/6/2020 3:29:57 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_16_62_01_1_MPLY_DIV_LAST_LATCH_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_UNITS_LATCH:	 in STD_LOGIC;
		MB_1401_MPLY_EARLY_END:	 in STD_LOGIC;
		PS_LAST_LOGIC_GATE_1:	 in STD_LOGIC;
		PS_B_CH_B_BIT:	 in STD_LOGIC;
		PS_DIV_OP_CODE:	 in STD_LOGIC;
		MB_MPLY_DOT_MQ_DOT_B_DOT_S_DOT_B9_DOT_BW:	 in STD_LOGIC;
		PS_B_CYCLE:	 in STD_LOGIC;
		PS_TRUE_LATCH:	 in STD_LOGIC;
		MS_PROGRAM_RESET_5:	 in STD_LOGIC;
		MS_1401_DIV_EARLY_END:	 in STD_LOGIC;
		PS_LAST_LOGIC_GATE_2:	 in STD_LOGIC;
		MS_DIV_DOT_LAST_INSN_RO_CYCLE:	 in STD_LOGIC;
		MS_MPLY_DOT_LAST_INSN_RO_CYCLE:	 in STD_LOGIC;
		MS_DIV_DOT_U_DOT_B_DOT_BB_DOT_T:	 out STD_LOGIC;
		PS_MPLY_DIV_LAST_LATCH:	 out STD_LOGIC;
		PS_NOT_MPLY_DIV_LAST_LATCH:	 out STD_LOGIC);
end ALD_16_62_01_1_MPLY_DIV_LAST_LATCH_ACC;

architecture behavioral of ALD_16_62_01_1_MPLY_DIV_LAST_LATCH_ACC is 

	signal OUT_5A_D: STD_LOGIC;
	signal OUT_4A_C: STD_LOGIC;
	signal OUT_2A_K: STD_LOGIC;
	signal OUT_5B_C: STD_LOGIC;
	signal OUT_4B_C: STD_LOGIC;
	signal OUT_2D_C: STD_LOGIC;
	signal OUT_2D_C_Latch: STD_LOGIC;
	signal OUT_1D_C: STD_LOGIC;
	signal OUT_1D_C_Latch: STD_LOGIC;
	signal OUT_4E_B: STD_LOGIC;
	signal OUT_1E_D: STD_LOGIC;
	signal OUT_5G_G: STD_LOGIC;
	signal OUT_4G_D: STD_LOGIC;
	signal OUT_3G_R: STD_LOGIC;
	signal OUT_5H_G: STD_LOGIC;
	signal OUT_2H_E: STD_LOGIC;
	signal OUT_2H_E_Latch: STD_LOGIC;
	signal OUT_1H_C: STD_LOGIC;
	signal OUT_1H_C_Latch: STD_LOGIC;
	signal OUT_4I_C: STD_LOGIC;
	signal OUT_2I_R: STD_LOGIC;
	signal OUT_1I_C: STD_LOGIC;
	signal OUT_DOT_3A: STD_LOGIC;
	signal OUT_DOT_2D: STD_LOGIC;
	signal OUT_DOT_5G: STD_LOGIC;
	signal OUT_DOT_4G: STD_LOGIC;
	signal OUT_DOT_2H: STD_LOGIC;
	signal OUT_DOT_5A: STD_LOGIC;

begin

	OUT_5A_D <= NOT(PS_DIV_OP_CODE AND PS_UNITS_LATCH AND PS_B_CYCLE );
	OUT_4A_C <= NOT(OUT_DOT_5A );
	OUT_2A_K <= NOT(PS_LAST_LOGIC_GATE_1 AND OUT_DOT_3A );
	OUT_5B_C <= NOT(PS_B_CH_B_BIT AND PS_TRUE_LATCH );
	OUT_4B_C <= NOT(MB_MPLY_DOT_MQ_DOT_B_DOT_S_DOT_B9_DOT_BW AND MB_1401_MPLY_EARLY_END );
	OUT_2D_C_Latch <= NOT(OUT_1D_C AND MS_PROGRAM_RESET_5 );
	OUT_1D_C_Latch <= NOT(OUT_2A_K AND OUT_DOT_2D AND MS_1401_DIV_EARLY_END );
	OUT_4E_B <= NOT(MB_MPLY_DOT_MQ_DOT_B_DOT_S_DOT_B9_DOT_BW AND MB_1401_MPLY_EARLY_END );
	OUT_1E_D <= NOT OUT_DOT_2D;
	OUT_5G_G <= NOT(PS_DIV_OP_CODE AND PS_TRUE_LATCH AND PS_B_CYCLE );
	OUT_4G_D <= NOT(OUT_DOT_5G );
	OUT_3G_R <= NOT(PS_LAST_LOGIC_GATE_2 AND OUT_DOT_4G );
	OUT_5H_G <= NOT(PS_B_CH_B_BIT AND PS_UNITS_LATCH );
	OUT_2H_E_Latch <= NOT(OUT_3G_R AND MS_PROGRAM_RESET_5 AND OUT_1H_C );
	OUT_1H_C_Latch <= NOT(OUT_DOT_2H AND MS_MPLY_DOT_LAST_INSN_RO_CYCLE AND MS_DIV_DOT_LAST_INSN_RO_CYCLE );
	OUT_4I_C <= NOT(MS_MPLY_DOT_LAST_INSN_RO_CYCLE AND MS_DIV_DOT_LAST_INSN_RO_CYCLE );
	OUT_2I_R <= NOT MS_1401_DIV_EARLY_END;
	OUT_1I_C <= NOT OUT_DOT_2H;
	OUT_DOT_3A <= OUT_4A_C OR OUT_4B_C;
	OUT_DOT_2D <= OUT_2D_C OR OUT_4I_C;
	OUT_DOT_5G <= OUT_5G_G OR OUT_5H_G;
	OUT_DOT_4G <= OUT_4E_B OR OUT_4G_D;
	OUT_DOT_2H <= OUT_2H_E OR OUT_2I_R;
	OUT_DOT_5A <= OUT_5A_D OR OUT_5B_C;

	PS_MPLY_DIV_LAST_LATCH <= OUT_1E_D;
	PS_NOT_MPLY_DIV_LAST_LATCH <= OUT_1I_C;
	MS_DIV_DOT_U_DOT_B_DOT_BB_DOT_T <= OUT_DOT_5A;

	Latch_2D: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2D_C_Latch,
		Q => OUT_2D_C,
		QBar => OPEN );

	Latch_1D: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_1D_C_Latch,
		Q => OUT_1D_C,
		QBar => OPEN );

	Latch_2H: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2H_E_Latch,
		Q => OUT_2H_E,
		QBar => OPEN );

	Latch_1H: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_1H_C_Latch,
		Q => OUT_1H_C,
		QBar => OPEN );


end;
