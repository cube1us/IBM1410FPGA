-- Test Bench VHDL for IBM SMS ALD page 13.73.04.1
-- Title: F CH NO TRANSFER LATCH
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 8/15/2020 4:42:22 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_13_73_04_1_F_CH_NO_TRANSFER_LATCH_tb is
end ALD_13_73_04_1_F_CH_NO_TRANSFER_LATCH_tb;

architecture behavioral of ALD_13_73_04_1_F_CH_NO_TRANSFER_LATCH_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_13_73_04_1_F_CH_NO_TRANSFER_LATCH
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_F_CH_STATUS_SAMPLE_B:	 in STD_LOGIC;
		PS_F_CH_SELECT_UNIT_F:	 in STD_LOGIC;
		MS_F_CH_FILE_SET_W_DOT_L_DOT_ADDR:	 in STD_LOGIC;
		PS_F_CH_NO_TRF_LATCH_STAR_SIF:	 in STD_LOGIC;
		PS_SET_F_CH_NO_TRANS_LAT_STAR_1414_STAR:	 in STD_LOGIC;
		PS_F_CH_NO_TRANS_LAT_STAR_12_19:	 in STD_LOGIC;
		MS_F_CH_RESET:	 in STD_LOGIC;
		MS_F_CH_FILE_SET_CHECK_AT_A:	 in STD_LOGIC;
		MS_F_CH_END_OF_2ND_ADDR_TRF:	 in STD_LOGIC;
		MS_F_CH_STROBE_TRIGGER:	 in STD_LOGIC;
		MS_F_CH_NOT_READY:	 in STD_LOGIC;
		MS_F_CH_WRITE_INHIBIT:	 in STD_LOGIC;
		MS_F_CH_BUSY:	 in STD_LOGIC;
		MS_F_CH_CORRECT_LENGTH_RECORD:	 in STD_LOGIC;
		MS_F_CH_CONDITION:	 in STD_LOGIC;
		MS_F_CH_WRONG_LENGTH_RECORD:	 in STD_LOGIC;
		MS_FILE_SET_F_CH_NO_TRF_B:	 out STD_LOGIC;
		MS_F_CH_FILE_DOT_NO_TRANSFER_BUS:	 out STD_LOGIC;
		MS_F_CH_NO_TRANSFER_LATCH:	 out STD_LOGIC;
		PS_F_CH_NO_TRANSFER_LATCH:	 out STD_LOGIC;
		MS_1ST_DATA_STROBE_LATCH_CH_F:	 out STD_LOGIC;
		PS_F_CH_ANY_STATUS_ON:	 out STD_LOGIC;
		PS_F_CH_NO_STATUS_ON:	 out STD_LOGIC;
		LAMP_15A1K17:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_F_CH_STATUS_SAMPLE_B: STD_LOGIC := '0';
	signal PS_F_CH_SELECT_UNIT_F: STD_LOGIC := '0';
	signal MS_F_CH_FILE_SET_W_DOT_L_DOT_ADDR: STD_LOGIC := '1';
	signal PS_F_CH_NO_TRF_LATCH_STAR_SIF: STD_LOGIC := '0';
	signal PS_SET_F_CH_NO_TRANS_LAT_STAR_1414_STAR: STD_LOGIC := '0';
	signal PS_F_CH_NO_TRANS_LAT_STAR_12_19: STD_LOGIC := '0';
	signal MS_F_CH_RESET: STD_LOGIC := '1';
	signal MS_F_CH_FILE_SET_CHECK_AT_A: STD_LOGIC := '1';
	signal MS_F_CH_END_OF_2ND_ADDR_TRF: STD_LOGIC := '1';
	signal MS_F_CH_STROBE_TRIGGER: STD_LOGIC := '1';
	signal MS_F_CH_NOT_READY: STD_LOGIC := '1';
	signal MS_F_CH_WRITE_INHIBIT: STD_LOGIC := '1';
	signal MS_F_CH_BUSY: STD_LOGIC := '1';
	signal MS_F_CH_CORRECT_LENGTH_RECORD: STD_LOGIC := '1';
	signal MS_F_CH_CONDITION: STD_LOGIC := '1';
	signal MS_F_CH_WRONG_LENGTH_RECORD: STD_LOGIC := '1';

	-- Outputs

	signal MS_FILE_SET_F_CH_NO_TRF_B: STD_LOGIC;
	signal MS_F_CH_FILE_DOT_NO_TRANSFER_BUS: STD_LOGIC;
	signal MS_F_CH_NO_TRANSFER_LATCH: STD_LOGIC;
	signal PS_F_CH_NO_TRANSFER_LATCH: STD_LOGIC;
	signal MS_1ST_DATA_STROBE_LATCH_CH_F: STD_LOGIC;
	signal PS_F_CH_ANY_STATUS_ON: STD_LOGIC;
	signal PS_F_CH_NO_STATUS_ON: STD_LOGIC;
	signal LAMP_15A1K17: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_13_73_04_1_F_CH_NO_TRANSFER_LATCH port map(
		FPGA_CLK => FPGA_CLK,
		PS_F_CH_STATUS_SAMPLE_B => PS_F_CH_STATUS_SAMPLE_B,
		PS_F_CH_SELECT_UNIT_F => PS_F_CH_SELECT_UNIT_F,
		MS_F_CH_FILE_SET_W_DOT_L_DOT_ADDR => MS_F_CH_FILE_SET_W_DOT_L_DOT_ADDR,
		PS_F_CH_NO_TRF_LATCH_STAR_SIF => PS_F_CH_NO_TRF_LATCH_STAR_SIF,
		PS_SET_F_CH_NO_TRANS_LAT_STAR_1414_STAR => PS_SET_F_CH_NO_TRANS_LAT_STAR_1414_STAR,
		PS_F_CH_NO_TRANS_LAT_STAR_12_19 => PS_F_CH_NO_TRANS_LAT_STAR_12_19,
		MS_F_CH_RESET => MS_F_CH_RESET,
		MS_F_CH_FILE_SET_CHECK_AT_A => MS_F_CH_FILE_SET_CHECK_AT_A,
		MS_F_CH_END_OF_2ND_ADDR_TRF => MS_F_CH_END_OF_2ND_ADDR_TRF,
		MS_F_CH_STROBE_TRIGGER => MS_F_CH_STROBE_TRIGGER,
		MS_F_CH_NOT_READY => MS_F_CH_NOT_READY,
		MS_F_CH_WRITE_INHIBIT => MS_F_CH_WRITE_INHIBIT,
		MS_F_CH_BUSY => MS_F_CH_BUSY,
		MS_F_CH_CORRECT_LENGTH_RECORD => MS_F_CH_CORRECT_LENGTH_RECORD,
		MS_F_CH_CONDITION => MS_F_CH_CONDITION,
		MS_F_CH_WRONG_LENGTH_RECORD => MS_F_CH_WRONG_LENGTH_RECORD,
		MS_FILE_SET_F_CH_NO_TRF_B => MS_FILE_SET_F_CH_NO_TRF_B,
		MS_F_CH_FILE_DOT_NO_TRANSFER_BUS => MS_F_CH_FILE_DOT_NO_TRANSFER_BUS,
		MS_F_CH_NO_TRANSFER_LATCH => MS_F_CH_NO_TRANSFER_LATCH,
		PS_F_CH_NO_TRANSFER_LATCH => PS_F_CH_NO_TRANSFER_LATCH,
		MS_1ST_DATA_STROBE_LATCH_CH_F => MS_1ST_DATA_STROBE_LATCH_CH_F,
		PS_F_CH_ANY_STATUS_ON => PS_F_CH_ANY_STATUS_ON,
		PS_F_CH_NO_STATUS_ON => PS_F_CH_NO_STATUS_ON,
		LAMP_15A1K17 => LAMP_15A1K17);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code

   
   testName := "13.72.04.1        ";
   
   MS_F_CH_RESET <= '0';
   wait for 30 ns;
   MS_F_CH_RESET <= '1';
   wait for 30 ns;

   -- This circuit is a little odd, because Write Inhibit can
   -- RESET the latch
   
   MS_F_CH_WRITE_INHIBIT <= '1';
   check1(MS_1ST_DATA_STROBE_LATCH_CH_F,'1',testName,"1A");   
   MS_F_CH_STROBE_TRIGGER <= '0';
   wait for 30 ns;  -- Latch Sets
   MS_F_CH_STROBE_TRIGGER <= '1';
   wait for 30 ns;  -- Latch Stays set
   check1(MS_1ST_DATA_STROBE_LATCH_CH_F,'0',testName,"1B");
   MS_F_CH_WRITE_INHIBIT <= '0';
   wait for 30 ns; -- Reset
   MS_F_CH_WRITE_INHIBIT <= '1';
   wait for 30 ns; -- Stays Reset
   check1(MS_1ST_DATA_STROBE_LATCH_CH_F,'1',testName,"1C");
   MS_F_CH_STROBE_TRIGGER <= '0';
   wait for 30 ns;  -- Latch Sets
   MS_F_CH_STROBE_TRIGGER <= '1';
   wait for 30 ns;  -- Latch Stays set
   check1(MS_1ST_DATA_STROBE_LATCH_CH_F,'0',testName,"1D");
      
   -- Leave set for the beginning of the next test
   
   PS_F_CH_SELECT_UNIT_F <= '1';
   PS_F_CH_STATUS_SAMPLE_B <= '1';
   wait for 30 ns;
   check1(MS_F_CH_FILE_DOT_NO_TRANSFER_BUS,'1',testName,"2A");
   check1(MS_FILE_SET_F_CH_NO_TRF_B,'1',testName,"2AA");
   PS_F_CH_SELECT_UNIT_F <= '0';   
   -- Reset the previous latch...
   MS_F_CH_END_OF_2ND_ADDR_TRF <= '0';
   wait for 30 ns; -- Resets latch
   MS_F_CH_END_OF_2ND_ADDR_TRF <= '1';
   wait for 30 ns; -- Should stay reset
   check1(MS_1ST_DATA_STROBE_LATCH_CH_F,'1',testName,"2B");   
   check1(MS_FILE_SET_F_CH_NO_TRF_B,'1',testName,"2BA");
   check1(MS_F_CH_FILE_DOT_NO_TRANSFER_BUS,'1',testName,"2C");
   PS_F_CH_SELECT_UNIT_F <= '1';
   PS_F_CH_STATUS_SAMPLE_B <= '0';
   wait for 30 ns;   
   check1(MS_F_CH_FILE_DOT_NO_TRANSFER_BUS,'0',testName,"2D");
   check1(MS_FILE_SET_F_CH_NO_TRF_B,'1',testName,"2DA");
   check1(PS_F_CH_NO_TRANSFER_LATCH,'0',testname,"2E");
   check1(MS_F_CH_NO_TRANSFER_LATCH,'1',testname,"2F");
   PS_F_CH_STATUS_SAMPLE_B <= '1';
   wait for 30 ns;   
   check1(MS_F_CH_FILE_DOT_NO_TRANSFER_BUS,'0',testName,"2G");
   check1(MS_FILE_SET_F_CH_NO_TRF_B,'0',testName,"2GA");
   check1(PS_F_CH_NO_TRANSFER_LATCH,'1',testname,"2H");
   check1(MS_F_CH_NO_TRANSFER_LATCH,'0',testname,"2I");
   
   PS_F_CH_SELECT_UNIT_F <= '0';
   PS_F_CH_STATUS_SAMPLE_B <= '0';
   MS_F_CH_RESET <= '0';
   wait for 30 ns;
   MS_F_CH_RESET <= '1';
   wait for 30 ns;
   check1(MS_F_CH_FILE_DOT_NO_TRANSFER_BUS,'1',testName,"2J");
   check1(MS_FILE_SET_F_CH_NO_TRF_B,'1',testName,"2JA");
   check1(PS_F_CH_NO_TRANSFER_LATCH,'0',testname,"2K");
   check1(MS_F_CH_NO_TRANSFER_LATCH,'1',testname,"2L");

   PS_F_CH_NO_TRANS_LAT_STAR_12_19 <= '1';
   wait for 30 ns; -- Set latch
   PS_F_CH_NO_TRANS_LAT_STAR_12_19 <= '0';
   wait for 30 ns; -- Stays set
   check1(PS_F_CH_NO_TRANSFER_LATCH,'1',testname,"3A");
   MS_F_CH_RESET <= '0';
   wait for 30 ns;
   MS_F_CH_RESET <= '1';
   wait for 30 ns;
   
   PS_F_CH_NO_TRF_LATCH_STAR_SIF <= '1';
   wait for 30 ns; -- Set latch
   PS_F_CH_NO_TRF_LATCH_STAR_SIF <= '0';
   wait for 30 ns; -- Stays set
   check1(PS_F_CH_NO_TRANSFER_LATCH,'1',testname,"3B");
   MS_F_CH_RESET <= '0';
   wait for 30 ns;
   MS_F_CH_RESET <= '1';
   wait for 30 ns;

   PS_SET_F_CH_NO_TRANS_LAT_STAR_1414_STAR <= '1';
   wait for 30 ns; -- Set latch
   PS_SET_F_CH_NO_TRANS_LAT_STAR_1414_STAR <= '0';
   wait for 30 ns; -- Stays set
   check1(PS_F_CH_NO_TRANSFER_LATCH,'1',testname,"3C");
   MS_F_CH_RESET <= '0';
   wait for 30 ns;
   MS_F_CH_RESET <= '1';
   wait for 30 ns;
   
   MS_F_CH_FILE_SET_W_DOT_L_DOT_ADDR <= '0';
   wait for 30 ns; -- Set latch
   MS_F_CH_FILE_SET_W_DOT_L_DOT_ADDR <= '1';
   wait for 30 ns; -- Stays set
   check1(PS_F_CH_NO_TRANSFER_LATCH,'1',testname,"3D");
   MS_F_CH_RESET <= '0';
   wait for 30 ns;
   MS_F_CH_RESET <= '1';
   wait for 30 ns;
   
   MS_F_CH_FILE_SET_CHECK_AT_A <= '0';
   wait for 30 ns; -- Set latch
   MS_F_CH_FILE_SET_CHECK_AT_A <= '1';
   wait for 30 ns; -- Stays set
   check1(PS_F_CH_NO_TRANSFER_LATCH,'1',testname,"3E");
   MS_F_CH_RESET <= '0';
   wait for 30 ns;
   MS_F_CH_RESET <= '1';
   wait for 30 ns;
   check1(PS_F_CH_NO_TRANSFER_LATCH,'0',testname,"3F");

   
   MS_F_CH_NOT_READY <= '1';
   MS_F_CH_BUSY <= '1';
   MS_F_CH_CONDITION <= '1';
   -- MS_F_CH_NO_TRANSFER_LATCH <= '1'; -- Reset
   MS_F_CH_WRONG_LENGTH_RECORD <= '1';
   MS_F_CH_CORRECT_LENGTH_RECORD <= '1';
   wait for 30 ns;
   check1(PS_F_CH_ANY_STATUS_ON,'0',testName,"4A");
   MS_F_CH_NOT_READY <= '0';
   wait for 30 ns;
   check1(PS_F_CH_ANY_STATUS_ON,'1',testName,"4B");
   MS_F_CH_NOT_READY <= '1';
   MS_F_CH_BUSY <= '0';
   wait for 30 ns;
   check1(PS_F_CH_ANY_STATUS_ON,'1',testName,"4C");
   MS_F_CH_BUSY <= '1';
   MS_F_CH_CONDITION <= '0';
   wait for 30 ns;
   check1(PS_F_CH_ANY_STATUS_ON,'1',testName,"4D");
   MS_F_CH_CONDITION <= '1';
   -- MS_F_CH_NO_TRANSFER_LATCH <= '0'; -- Set
   MS_F_CH_FILE_SET_CHECK_AT_A <= '0';
   wait for 30 ns; -- Set latch
   MS_F_CH_FILE_SET_CHECK_AT_A <= '1';
   wait for 30 ns; -- Stays set
   check1(PS_F_CH_ANY_STATUS_ON,'1',testName,"4E");
   -- MS_F_CH_NO_TRANSFER_LATCH <= '1'; -- Reset
   MS_F_CH_RESET <= '0';
   wait for 30 ns;
   MS_F_CH_RESET <= '1';
   wait for 30 ns;   
   MS_F_CH_WRONG_LENGTH_RECORD <= '0';
   wait for 30 ns;
   check1(PS_F_CH_ANY_STATUS_ON,'1',testName,"4F");
   MS_F_CH_WRONG_LENGTH_RECORD <= '1';
   MS_F_CH_CORRECT_LENGTH_RECORD <= '0';
   wait for 30 ns;
   check1(PS_F_CH_ANY_STATUS_ON,'1',testName,"4G");
   MS_F_CH_CORRECT_LENGTH_RECORD <= '1';
   wait for 30 ns;
   check1(PS_F_CH_ANY_STATUS_ON,'0',testName,"4H");

   MS_F_CH_NOT_READY <= '0';
   MS_F_CH_BUSY <= '1';
   MS_F_CH_CONDITION <= '1';
   -- MS_E_CH_NO_TRANSFER_LATCH <= '1'; -- Reset
   MS_F_CH_WRONG_LENGTH_RECORD <= '1';
   MS_F_CH_CORRECT_LENGTH_RECORD <= '1';
   wait for 30 ns;
   check1(PS_F_CH_NO_STATUS_ON,'0',testName,"5A");
   MS_F_CH_NOT_READY <= '1';
   MS_F_CH_BUSY <= '0';
   wait for 30 ns;
   check1(PS_F_CH_NO_STATUS_ON,'0',testName,"5B");
   MS_F_CH_BUSY <= '1';
   MS_F_CH_CONDITION <= '0';
   wait for 30 ns;
   check1(PS_F_CH_NO_STATUS_ON,'0',testName,"5C");
   MS_F_CH_CONDITION <= '1';
   -- MS_E_CH_NO_TRANSFER_LATCH <= '0'; -- Set
   MS_F_CH_FILE_SET_CHECK_AT_A <= '0';
   wait for 30 ns; -- Set latch
   MS_F_CH_FILE_SET_CHECK_AT_A <= '1';
   wait for 30 ns; -- Stays set
   check1(PS_F_CH_NO_STATUS_ON,'0',testName,"5D");
   -- MS_F_CH_NO_TRANSFER_LATCH <= '1'; -- Reset
   MS_F_CH_RESET <= '0';
   wait for 30 ns;
   MS_F_CH_RESET <= '1';
   wait for 30 ns;   
   MS_F_CH_WRONG_LENGTH_RECORD <= '0';
   wait for 30 ns;
   check1(PS_F_CH_NO_STATUS_ON,'0',testName,"5E");
   MS_F_CH_WRONG_LENGTH_RECORD <= '1';
   MS_F_CH_CORRECT_LENGTH_RECORD <= '0';
   wait for 30 ns;
   check1(PS_F_CH_NO_STATUS_ON,'0',testName,"5F");
   MS_F_CH_CORRECT_LENGTH_RECORD <= '1';
   wait for 30 ns;
   check1(PS_F_CH_NO_STATUS_ON,'1',testName,"5G");
     
   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

end;
