-- Test BenchVHDL for IBM SMS ALD group BCDToBINABits
-- Title: BCDToBINABits
-- IBM Machine Name 1411
-- Generated by GenerateHDL on 8/24/2020 12:48:22 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity BCDToBINABits_tb is
end BCDToBINABits_tb;

architecture behavioral of BCDToBINABits_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component BCDToBINABits
	    Port (
		FPGA_CLK: in STD_LOGIC;
		PS_LOGIC_GATE_E_2: in STD_LOGIC;
		PS_SET_BIN_REG_A1_DOT_A2_FROM_B_CH: in STD_LOGIC;
		PS_1401_STORE_MAR_DOT_UNITS_DOT_C_CY: in STD_LOGIC;
		MS_RESET_BIN_REG: in STD_LOGIC;
		PS_SET_BIN_REG_A_FROM_TH: in STD_LOGIC;
		PS_SET_BIN_REG_A4_DOT_A8_FROM_B_CH: in STD_LOGIC;
		PS_AR_CH_STAR_TRANSLATOR_STAR_BUS: in STD_LOGIC_VECTOR (3 downTo 0);
		PS_AR_EXIT_CH_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		PS_B_CH_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		MS_BIN_REG_A_4_BIT: out STD_LOGIC;
		MS_BIN_REG_A_8_BIT: out STD_LOGIC;
		PS_BIN_REG_A_BUS: out STD_LOGIC_VECTOR (3 downTo 0));
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_LOGIC_GATE_E_2: STD_LOGIC := '0';
	signal PS_SET_BIN_REG_A1_DOT_A2_FROM_B_CH: STD_LOGIC := '0';
	signal PS_1401_STORE_MAR_DOT_UNITS_DOT_C_CY: STD_LOGIC := '0';
	signal MS_RESET_BIN_REG: STD_LOGIC := '1';
	signal PS_SET_BIN_REG_A_FROM_TH: STD_LOGIC := '0';
	signal PS_SET_BIN_REG_A4_DOT_A8_FROM_B_CH: STD_LOGIC := '0';
	signal PS_AR_CH_STAR_TRANSLATOR_STAR_BUS: STD_LOGIC_VECTOR (3 downTo 0) := "0000";
	signal PS_AR_EXIT_CH_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";
	signal PS_B_CH_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";

	-- Outputs

	signal MS_BIN_REG_A_4_BIT: STD_LOGIC;
	signal MS_BIN_REG_A_8_BIT: STD_LOGIC;
	signal PS_BIN_REG_A_BUS: STD_LOGIC_VECTOR (3 downTo 0);

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: BCDToBINABits port map(
		FPGA_CLK => FPGA_CLK,
		PS_LOGIC_GATE_E_2 => PS_LOGIC_GATE_E_2,
		PS_SET_BIN_REG_A1_DOT_A2_FROM_B_CH => PS_SET_BIN_REG_A1_DOT_A2_FROM_B_CH,
		PS_1401_STORE_MAR_DOT_UNITS_DOT_C_CY => PS_1401_STORE_MAR_DOT_UNITS_DOT_C_CY,
		MS_RESET_BIN_REG => MS_RESET_BIN_REG,
		PS_SET_BIN_REG_A_FROM_TH => PS_SET_BIN_REG_A_FROM_TH,
		PS_SET_BIN_REG_A4_DOT_A8_FROM_B_CH => PS_SET_BIN_REG_A4_DOT_A8_FROM_B_CH,
		PS_AR_CH_STAR_TRANSLATOR_STAR_BUS => PS_AR_CH_STAR_TRANSLATOR_STAR_BUS,
		PS_AR_EXIT_CH_BUS => PS_AR_EXIT_CH_BUS,
		PS_B_CH_BUS => PS_B_CH_BUS,
		MS_BIN_REG_A_4_BIT => MS_BIN_REG_A_4_BIT,
		MS_BIN_REG_A_8_BIT => MS_BIN_REG_A_8_BIT,
		PS_BIN_REG_A_BUS => PS_BIN_REG_A_BUS);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code
   
   -- NOTE:  A better test might have been to set the AR EXIT CH to various
   -- values and then toggle SET BIN REG A FROM TH and check the results.
   -- Oh well...
   
   testName := "14.18.01.1        ";
   
   MS_RESET_BIN_REG <= '0';
   wait for 30 ns;
   MS_RESET_BIN_REG <= '1';
   wait for 30 ns;
   
   check1(PS_BIN_REG_A_BUS(1),'0',testName,"1A");
   check1(PS_BIN_REG_A_BUS(2),'0',testName,"1B"); 
   check1(MS_BIN_REG_A_4_BIT,'1',testName,"1C"); -- No bus - not all bits output
   
   PS_SET_BIN_REG_A1_DOT_A2_FROM_B_CH <= '0';
   PS_B_CH_BUS(HDL_B_BIT) <= '1';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(1),'0',testName,"1D");
   PS_SET_BIN_REG_A1_DOT_A2_FROM_B_CH <= '1';
   PS_B_CH_BUS(HDL_B_BIT) <= '0';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(1),'0',testName,"1E");
   PS_B_CH_BUS(HDL_B_BIT) <= '1';
   wait for 30 ns; -- Set latch
   PS_SET_BIN_REG_A1_DOT_A2_FROM_B_CH <= '0';
   PS_B_CH_BUS(HDL_B_BIT) <= '0';
   wait for 30 ns; -- Latch stays set   
   check1(PS_BIN_REG_A_BUS(1),'1',testName,"1F");
   check1(PS_BIN_REG_A_BUS(2),'0',testName,"1G");
   -- Reset
   MS_RESET_BIN_REG <= '0';
   wait for 30 ns;
   MS_RESET_BIN_REG <= '1';
   wait for 30 ns;

   PS_AR_EXIT_CH_BUS(HDL_1_BIT) <= '0';
   PS_LOGIC_GATE_E_2 <= '1';
   PS_1401_STORE_MAR_DOT_UNITS_DOT_C_CY <= '1';
   wait for 30 ns;   
   check1(PS_BIN_REG_A_BUS(1),'0',testName,"2A");
   PS_AR_EXIT_CH_BUS(HDL_1_BIT) <= '1';
   PS_LOGIC_GATE_E_2 <= '0';
   wait for 30 ns;   
   check1(PS_BIN_REG_A_BUS(1),'0',testName,"2B");
   PS_LOGIC_GATE_E_2 <= '1';
   PS_1401_STORE_MAR_DOT_UNITS_DOT_C_CY <= '0';
   wait for 30 ns;   
   check1(PS_BIN_REG_A_BUS(1),'0',testName,"2C");
   PS_1401_STORE_MAR_DOT_UNITS_DOT_C_CY <= '1';
   wait for 30 ns; -- Sets Latch   
   PS_AR_EXIT_CH_BUS(HDL_1_BIT) <= '0';
   PS_LOGIC_GATE_E_2 <= '0';
   PS_1401_STORE_MAR_DOT_UNITS_DOT_C_CY <= '0';
   wait for 30 ns; -- Latch stays set
   check1(PS_BIN_REG_A_BUS(1),'1',testName,"2D");
   check1(PS_BIN_REG_A_BUS(2),'0',testName,"2E");
   check1(PS_BIN_REG_A_BUS(3),'1',testName,"2F"); -- Also sets A8 Bit
   -- Reset
   MS_RESET_BIN_REG <= '0';
   wait for 30 ns;
   MS_RESET_BIN_REG <= '1';
   wait for 30 ns;
   
   -- MS_BIN_REG_A_8_BIT is '1' due to reset of latches in previous test
   check1(MS_BIN_REG_A_8_BIT,'1',testName,"3A");   

   PS_AR_EXIT_CH_BUS(HDL_2_BIT) <= '0';
   PS_AR_EXIT_CH_BUS(HDL_8_BIT) <= '0';
   PS_SET_BIN_REG_A_FROM_TH <= '1';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(1),'0',testName,"3B");
   PS_AR_EXIT_CH_BUS(HDL_2_BIT) <= '1';
   PS_AR_EXIT_CH_BUS(HDL_8_BIT) <= '1';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(1),'0',testName,"3C");
   PS_AR_EXIT_CH_BUS(HDL_8_BIT) <= '0';
   PS_SET_BIN_REG_A_FROM_TH <= '0';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(1),'0',testName,"3D");
   PS_SET_BIN_REG_A_FROM_TH <= '1';
   wait for 30 ns; -- Sets Latch
   PS_AR_EXIT_CH_BUS(HDL_2_BIT) <= '0';
   PS_AR_EXIT_CH_BUS(HDL_8_BIT) <= '0';
   PS_SET_BIN_REG_A_FROM_TH <= '0';
   wait for 30 ns; -- Latch stays set
   check1(PS_BIN_REG_A_BUS(1),'1',testName,"3E");
   check1(PS_BIN_REG_A_BUS(2),'0',testName,"3F");
   
   -- Do not reset - next test sets 4 bit and clears 2 bit
   
   -- Set the BIN Reg 8 bit
   
   PS_AR_EXIT_CH_BUS(HDL_2_BIT) <= '0';
   PS_AR_EXIT_CH_BUS(HDL_8_BIT) <= '1';
   PS_SET_BIN_REG_A_FROM_TH <= '1';
   wait for 30 ns; 
   PS_AR_EXIT_CH_BUS(HDL_2_BIT) <= '0';
   PS_AR_EXIT_CH_BUS(HDL_8_BIT) <= '1';
   PS_SET_BIN_REG_A_FROM_TH <= '1';
   wait for 30 ns; -- Set 8 bit
   PS_AR_EXIT_CH_BUS(HDL_2_BIT) <= '0';
   PS_AR_EXIT_CH_BUS(HDL_8_BIT) <= '0';
   PS_SET_BIN_REG_A_FROM_TH <= '0';
   wait for 30 ns; -- Should stay set
   check1(PS_BIN_REG_A_BUS(1),'1',testName,"4A");
   check1(PS_BIN_REG_A_BUS(2),'0',testName,"4B");
   check1(PS_BIN_REG_A_BUS(3),'1',testName,"4C");
   
   PS_SET_BIN_REG_A_FROM_TH <= '1';
   PS_AR_EXIT_CH_BUS(HDL_2_BIT) <= '0';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(1),'1',testName,"4D");
   check1(PS_BIN_REG_A_BUS(2),'0',testName,"4E");
   check1(PS_BIN_REG_A_BUS(3),'1',testName,"4F");
   PS_SET_BIN_REG_A_FROM_TH <= '0';
   PS_AR_EXIT_CH_BUS(HDL_8_BIT) <= '0';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(1),'1',testName,"4G");
   check1(PS_BIN_REG_A_BUS(2),'0',testName,"4H");
   check1(PS_BIN_REG_A_BUS(3),'1',testName,"4I");
   PS_SET_BIN_REG_A_FROM_TH <= '1';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(1),'1',testName,"4J");
   check1(PS_BIN_REG_A_BUS(2),'0',testName,"4K");
   check1(PS_BIN_REG_A_BUS(3),'1',testName,"4L");
   -- With 2 and 8 both set, 2 should reset and 4 should set
   -- 8 will stay set because nothing resets it
   PS_AR_EXIT_CH_BUS(HDL_2_BIT) <= '1';
   wait for 30 ns;
   PS_AR_EXIT_CH_BUS(HDL_2_BIT) <= '0';
   PS_SET_BIN_REG_A_FROM_TH <= '0';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(1),'0',testName,"4M");
   check1(PS_BIN_REG_A_BUS(2),'1',testName,"4N");
   check1(PS_BIN_REG_A_BUS(3),'1',testName,"4O");
   check1(MS_BIN_REG_A_4_BIT,'0',testName,"4P");
   
   -- Reset
   MS_RESET_BIN_REG <= '0';
   wait for 30 ns;
   MS_RESET_BIN_REG <= '1';
   wait for 30 ns;

   check1(PS_BIN_REG_A_BUS(1),'0',testName,"5A");
   check1(PS_BIN_REG_A_BUS(2),'0',testName,"5B");
   check1(PS_BIN_REG_A_BUS(3),'0',testName,"5C");
   check1(MS_BIN_REG_A_4_BIT,'1',testName,"5D");
   
   PS_AR_CH_STAR_TRANSLATOR_STAR_BUS(2) <= '0';
   PS_SET_BIN_REG_A_FROM_TH <= '1';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(1),'0',testName,"5E");
   check1(PS_BIN_REG_A_BUS(2),'0',testName,"5F");
   PS_AR_CH_STAR_TRANSLATOR_STAR_BUS(2) <= '1';
   PS_SET_BIN_REG_A_FROM_TH <= '0';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(1),'0',testName,"5G");
   check1(PS_BIN_REG_A_BUS(2),'0',testName,"5H");
   PS_SET_BIN_REG_A_FROM_TH <= '1';
   wait for 30 ns; -- Set the latch
   PS_AR_CH_STAR_TRANSLATOR_STAR_BUS(2) <= '0';
   PS_SET_BIN_REG_A_FROM_TH <= '0';
   wait for 30 ns; -- Latch stays set   
   check1(PS_BIN_REG_A_BUS(1),'0',testName,"5I");
   check1(PS_BIN_REG_A_BUS(2),'1',testName,"5J");
   check1(MS_BIN_REG_A_4_BIT,'0',testName,"5K");
      
   -- Reset
   MS_RESET_BIN_REG <= '0';
   wait for 30 ns;
   MS_RESET_BIN_REG <= '1';
   wait for 30 ns;

   PS_B_CH_BUS(HDL_A_BIT) <= '0';
   PS_SET_BIN_REG_A4_DOT_A8_FROM_B_CH <= '1';
   wait for 30 ns;   
   check1(PS_BIN_REG_A_BUS(1),'0',testName,"6A");
   check1(PS_BIN_REG_A_BUS(2),'0',testName,"6B");
   PS_B_CH_BUS(HDL_A_BIT) <= '1';
   PS_SET_BIN_REG_A4_DOT_A8_FROM_B_CH <= '0';
   wait for 30 ns;   
   check1(PS_BIN_REG_A_BUS(1),'0',testName,"6C");
   check1(PS_BIN_REG_A_BUS(2),'0',testName,"6D");
   PS_B_CH_BUS(HDL_A_BIT) <= '1';
   PS_SET_BIN_REG_A4_DOT_A8_FROM_B_CH <= '1';
   wait for 30 ns; -- Set the latch   
   PS_B_CH_BUS(HDL_A_BIT) <= '1';
   PS_SET_BIN_REG_A4_DOT_A8_FROM_B_CH <= '1';
   wait for 30 ns; -- Latch stays set
   check1(PS_BIN_REG_A_BUS(1),'0',testName,"6E");
   check1(PS_BIN_REG_A_BUS(2),'1',testName,"6F");

   -- Reset
   MS_RESET_BIN_REG <= '0';
   wait for 30 ns;
   MS_RESET_BIN_REG <= '1';
   wait for 30 ns;
   
   testName := "14.18.02.1        ";
   
   PS_AR_EXIT_CH_BUS(HDL_1_BIT) <= '0';
   PS_SET_BIN_REG_A_FROM_TH <= '1';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(0),'0',testName,"1A");
   check1(PS_BIN_REG_A_BUS(3),'0',testname,"1B");
   check1(MS_BIN_REG_A_8_BIT,'1',testname,"1C");   
   PS_AR_EXIT_CH_BUS(HDL_1_BIT) <= '1';
   PS_SET_BIN_REG_A_FROM_TH <= '0';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(0),'0',testName,"1D");
   check1(PS_BIN_REG_A_BUS(3),'0',testname,"1E");
   PS_AR_EXIT_CH_BUS(HDL_1_BIT) <= '1';
   PS_SET_BIN_REG_A_FROM_TH <= '1';
   wait for 30 ns;
   PS_AR_EXIT_CH_BUS(HDL_1_BIT) <= '0';
   PS_SET_BIN_REG_A_FROM_TH <= '0';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(0),'1',testName,"1F");
   check1(PS_BIN_REG_A_BUS(3),'0',testname,"1G");
   
   -- Reset
   MS_RESET_BIN_REG <= '0';
   wait for 30 ns;
   MS_RESET_BIN_REG <= '1';
   wait for 30 ns;
   
   PS_B_CH_BUS(HDL_A_BIT) <= '0';
   PS_SET_BIN_REG_A1_DOT_A2_FROM_B_CH <= '1';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(0),'0',testName,"2A");
   check1(PS_BIN_REG_A_BUS(3),'0',testname,"2B");
   PS_B_CH_BUS(HDL_A_BIT) <= '1';
   PS_SET_BIN_REG_A1_DOT_A2_FROM_B_CH <= '0';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(0),'0',testName,"2C");
   check1(PS_BIN_REG_A_BUS(3),'0',testname,"2D");
   PS_SET_BIN_REG_A1_DOT_A2_FROM_B_CH <= '1';
   wait for 30 ns;  -- Sets latch
   PS_B_CH_BUS(HDL_A_BIT) <= '0';
   PS_SET_BIN_REG_A1_DOT_A2_FROM_B_CH <= '0';
   wait for 30 ns; -- Latch stays set
   check1(PS_BIN_REG_A_BUS(0),'1',testName,"2E");
   check1(PS_BIN_REG_A_BUS(3),'0',testname,"2F");
   -- Reset
   MS_RESET_BIN_REG <= '0';
   wait for 30 ns;
   MS_RESET_BIN_REG <= '1';
   wait for 30 ns;
   
   PS_B_CH_BUS(HDL_B_BIT) <= '0';
   PS_SET_BIN_REG_A4_DOT_A8_FROM_B_CH <= '1';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(0),'0',testName,"3A");
   check1(PS_BIN_REG_A_BUS(3),'0',testname,"3B");
   PS_B_CH_BUS(HDL_B_BIT) <= '1';
   PS_SET_BIN_REG_A4_DOT_A8_FROM_B_CH <= '0';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(0),'0',testName,"3C");
   check1(PS_BIN_REG_A_BUS(3),'0',testname,"3D");
   PS_SET_BIN_REG_A4_DOT_A8_FROM_B_CH <= '1';
   wait for 30 ns; -- Sets latch
   PS_B_CH_BUS(HDL_B_BIT) <= '0';
   PS_SET_BIN_REG_A4_DOT_A8_FROM_B_CH <= '0';
   wait for 30 ns; -- Latch stays set
   check1(PS_BIN_REG_A_BUS(0),'0',testName,"3E");
   check1(PS_BIN_REG_A_BUS(3),'1',testname,"3F");
   check1(MS_BIN_REG_A_8_BIT,'0',testName,"3G");   
   -- Reset
   MS_RESET_BIN_REG <= '0';
   wait for 30 ns;
   MS_RESET_BIN_REG <= '1';
   wait for 30 ns;

   PS_AR_EXIT_CH_BUS(HDL_2_BIT) <= '1';
   PS_AR_EXIT_CH_BUS(HDL_8_BIT) <= '1';
   PS_SET_BIN_REG_A_FROM_TH <= '1';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(0),'0',testName,"4A");
   check1(PS_BIN_REG_A_BUS(3),'0',testname,"4B");
   PS_AR_EXIT_CH_BUS(HDL_2_BIT) <= '0';
   PS_AR_EXIT_CH_BUS(HDL_8_BIT) <= '0';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(0),'0',testName,"4C");
   check1(PS_BIN_REG_A_BUS(3),'0',testname,"4D");
   PS_AR_EXIT_CH_BUS(HDL_8_BIT) <= '1';
   PS_SET_BIN_REG_A_FROM_TH <= '0';
   wait for 30 ns;
   check1(PS_BIN_REG_A_BUS(0),'0',testName,"4E");
   check1(PS_BIN_REG_A_BUS(3),'0',testname,"4F");
   PS_SET_BIN_REG_A_FROM_TH <= '1';
   wait for 30 ns; -- Sets latch
   PS_AR_EXIT_CH_BUS(HDL_2_BIT) <= '0';
   PS_AR_EXIT_CH_BUS(HDL_8_BIT) <= '0';
   PS_SET_BIN_REG_A_FROM_TH <= '0';
   wait for 30 ns; -- Latch stays set
   check1(PS_BIN_REG_A_BUS(0),'0',testName,"4G");
   check1(PS_BIN_REG_A_BUS(3),'1',testname,"4H");
   
   
   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

END;
