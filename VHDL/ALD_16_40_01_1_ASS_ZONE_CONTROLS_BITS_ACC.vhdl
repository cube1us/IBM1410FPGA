-- VHDL for IBM SMS ALD page 16.40.01.1
-- Title: ASS ZONE CONTROLS BITS-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/4/2020 5:55:32 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_16_40_01_1_ASS_ZONE_CONTROLS_BITS_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_MPLY_DOT_U_OR_Y_OR_X_DOT_B_DOT_3:	 in STD_LOGIC;
		MS_DIV_DOT_U_OR_Y_OR_X_DOT_B:	 in STD_LOGIC;
		MS_DIV_DOT_2_DOT_D:	 in STD_LOGIC;
		MS_DIV_DOT_MQ_DOT_B_DOT_NOT_MDL:	 in STD_LOGIC;
		MS_A_OR_S_DOT_B_DOT_1_DOT_T_DOT_U_DOT_1401:	 in STD_LOGIC;
		MS_A_OR_S_DOT_B_DOT_Y_OR_X_DOT_NOT_1401:	 in STD_LOGIC;
		MS_A_OR_S_DOT_B_DOT_U_DOT_1_DOT_NOT_1401:	 in STD_LOGIC;
		PS_B_CH_MINUS:	 in STD_LOGIC;
		PS_A_CH_MINUS:	 in STD_LOGIC;
		PS_UNITS_LATCH:	 in STD_LOGIC;
		PS_B_CH_PLUS:	 in STD_LOGIC;
		MS_DIV_DOT_LAST_INSN_RO_CYCLE:	 in STD_LOGIC;
		PS_B_CYCLE:	 in STD_LOGIC;
		PS_DIV_OP_CODE:	 in STD_LOGIC;
		PS_LOGIC_GATE_E_1:	 in STD_LOGIC;
		PS_1401_MODE_1:	 in STD_LOGIC;
		PS_B_CH_B_BIT:	 in STD_LOGIC;
		MS_MPLY_DOT_U_OR_Y_OR_X_DOT_B_DOT_1:	 in STD_LOGIC;
		MS_MPLY_DOT_MQ_DOT_B:	 in STD_LOGIC;
		MS_RA_OR_RS_DOT_1_DOT_B_DOT_X_OR_Y:	 in STD_LOGIC;
		MS_MPLY_DOT_N_DOT_C:	 in STD_LOGIC;
		PS_LOGIC_GATE_C_1:	 in STD_LOGIC;
		PS_MPLY_DIV_LAST_LATCH:	 in STD_LOGIC;
		PS_USE_B_CH_ZONES_STAR_ARITH:	 out STD_LOGIC;
		MS_1401_MINUS_SIGN:	 out STD_LOGIC;
		MS_1401_PLUS_SIGN:	 out STD_LOGIC;
		MS_1401_DIV_EARLY_END:	 out STD_LOGIC;
		PS_USE_NO_ZONES_STAR_ARITH:	 out STD_LOGIC);
end ALD_16_40_01_1_ASS_ZONE_CONTROLS_BITS_ACC;

architecture behavioral of ALD_16_40_01_1_ASS_ZONE_CONTROLS_BITS_ACC is 

	signal OUT_3A_D: STD_LOGIC;
	signal OUT_1A_G: STD_LOGIC;
	signal OUT_3B_E: STD_LOGIC;
	signal OUT_2B_P: STD_LOGIC;
	signal OUT_5C_NoPin: STD_LOGIC;
	signal OUT_3C_NoPin: STD_LOGIC;
	signal OUT_2C_F: STD_LOGIC;
	signal OUT_1C_D: STD_LOGIC;
	signal OUT_5D_C: STD_LOGIC;
	signal OUT_5D_C_Latch: STD_LOGIC;
	signal OUT_4D_D: STD_LOGIC;
	signal OUT_4D_D_Latch: STD_LOGIC;
	signal OUT_3D_R: STD_LOGIC;
	signal OUT_1D_E: STD_LOGIC;
	signal OUT_4E_C: STD_LOGIC;
	signal OUT_3E_C: STD_LOGIC;
	signal OUT_4F_D: STD_LOGIC;
	signal OUT_2G_E: STD_LOGIC;
	signal OUT_5H_R: STD_LOGIC;
	signal OUT_5H_R_Latch: STD_LOGIC;
	signal OUT_4H_G: STD_LOGIC;
	signal OUT_4H_G_Latch: STD_LOGIC;
	signal OUT_2H_P: STD_LOGIC;
	signal OUT_5I_NoPin: STD_LOGIC;
	signal OUT_DOT_4E: STD_LOGIC;
	signal OUT_DOT_1A: STD_LOGIC;
	signal OUT_DOT_1G: STD_LOGIC;

begin

	OUT_3A_D <= NOT(MS_MPLY_DOT_U_OR_Y_OR_X_DOT_B_DOT_3 AND MS_DIV_DOT_U_OR_Y_OR_X_DOT_B AND MS_DIV_DOT_2_DOT_D );
	OUT_1A_G <= NOT(MS_DIV_DOT_MQ_DOT_B_DOT_NOT_MDL );
	OUT_3B_E <= NOT(MS_A_OR_S_DOT_B_DOT_Y_OR_X_DOT_NOT_1401 AND MS_A_OR_S_DOT_B_DOT_1_DOT_T_DOT_U_DOT_1401 AND MS_A_OR_S_DOT_B_DOT_U_DOT_1_DOT_NOT_1401 );
	OUT_2B_P <= NOT(OUT_2C_F );
	OUT_5C_NoPin <= NOT(PS_A_CH_MINUS AND PS_B_CYCLE AND PS_UNITS_LATCH );
	OUT_3C_NoPin <= NOT(PS_B_CH_MINUS AND OUT_4D_D );
	OUT_2C_F <= NOT(OUT_3C_NoPin AND OUT_3D_R );
	OUT_1C_D <= NOT(OUT_2B_P AND PS_1401_MODE_1 AND OUT_3E_C );
	OUT_5D_C_Latch <= NOT(MS_DIV_DOT_LAST_INSN_RO_CYCLE AND OUT_4D_D );
	OUT_4D_D_Latch <= NOT(OUT_5C_NoPin AND OUT_5D_C );
	OUT_3D_R <= NOT(OUT_5D_C AND PS_B_CH_PLUS );
	OUT_1D_E <= NOT(OUT_2C_F AND PS_1401_MODE_1 AND OUT_3E_C );
	OUT_4E_C <= NOT(PS_B_CYCLE AND PS_DIV_OP_CODE AND PS_LOGIC_GATE_E_1 );
	OUT_3E_C <= NOT(OUT_DOT_4E );
	OUT_4F_D <= NOT(PS_B_CH_B_BIT AND PS_1401_MODE_1 AND OUT_5H_R );
	OUT_2G_E <= NOT(MS_MPLY_DOT_U_OR_Y_OR_X_DOT_B_DOT_1 AND MS_MPLY_DOT_MQ_DOT_B AND MS_RA_OR_RS_DOT_1_DOT_B_DOT_X_OR_Y );
	OUT_5H_R_Latch <= NOT(MS_DIV_DOT_LAST_INSN_RO_CYCLE AND OUT_4H_G );
	OUT_4H_G_Latch <= NOT(OUT_5H_R AND OUT_5I_NoPin );
	OUT_2H_P <= NOT(MS_MPLY_DOT_N_DOT_C );
	OUT_5I_NoPin <= NOT(PS_LOGIC_GATE_C_1 AND PS_MPLY_DIV_LAST_LATCH );
	OUT_DOT_4E <= OUT_4E_C OR OUT_4F_D;
	OUT_DOT_1A <= OUT_3A_D OR OUT_1A_G OR OUT_3B_E;
	OUT_DOT_1G <= OUT_2G_E OR OUT_2H_P;

	MS_1401_MINUS_SIGN <= OUT_1C_D;
	MS_1401_PLUS_SIGN <= OUT_1D_E;
	MS_1401_DIV_EARLY_END <= OUT_DOT_4E;
	PS_USE_B_CH_ZONES_STAR_ARITH <= OUT_DOT_1A;
	PS_USE_NO_ZONES_STAR_ARITH <= OUT_DOT_1G;

	Latch_5D: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_5D_C_Latch,
		Q => OUT_5D_C,
		QBar => OPEN );

	Latch_4D: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4D_D_Latch,
		Q => OUT_4D_D,
		QBar => OPEN );

	Latch_5H: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_5H_R_Latch,
		Q => OUT_5H_R,
		QBar => OPEN );

	Latch_4H: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4H_G_Latch,
		Q => OUT_4H_G,
		QBar => OPEN );


end;
