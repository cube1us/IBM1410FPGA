-- VHDL for IBM SMS ALD page 16.16.01.1
-- Title: SIGN CONT CHAN SIGNS-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/1/2020 10:29:48 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_16_16_01_1_SIGN_CONT_CHAN_SIGNS_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PB_B_CH_NOT_A_BIT:	 in STD_LOGIC;
		PB_B_CH_A_BIT:	 in STD_LOGIC;
		PB_B_CH_B_BIT:	 in STD_LOGIC;
		PB_A_CH_NOT_A_BIT:	 in STD_LOGIC;
		PB_A_CH_A_BIT:	 in STD_LOGIC;
		PB_A_CH_B_BIT:	 in STD_LOGIC;
		PB_B_CH_MINUS:	 out STD_LOGIC;
		PS_B_CH_PLUS:	 out STD_LOGIC;
		PS_B_CH_MINUS:	 out STD_LOGIC;
		PB_B_CH_PLUS:	 out STD_LOGIC;
		PB_A_CH_MINUS:	 out STD_LOGIC;
		PS_A_CH_MINUS:	 out STD_LOGIC;
		PS_A_CH_PLUS:	 out STD_LOGIC;
		PB_A_CH_PLUS:	 out STD_LOGIC);
end ALD_16_16_01_1_SIGN_CONT_CHAN_SIGNS_ACC;

architecture behavioral of ALD_16_16_01_1_SIGN_CONT_CHAN_SIGNS_ACC is 

	signal OUT_4A_B: STD_LOGIC;
	signal OUT_3A_E: STD_LOGIC;
	signal OUT_3B_A: STD_LOGIC;
	signal OUT_2B_F: STD_LOGIC;
	signal OUT_4C_C: STD_LOGIC;
	signal OUT_2C_D: STD_LOGIC;
	signal OUT_3D_D: STD_LOGIC;
	signal OUT_4F_E: STD_LOGIC;
	signal OUT_3F_F: STD_LOGIC;
	signal OUT_3G_C: STD_LOGIC;
	signal OUT_2G_K: STD_LOGIC;
	signal OUT_4H_B: STD_LOGIC;
	signal OUT_2H_E: STD_LOGIC;
	signal OUT_3I_C: STD_LOGIC;
	signal OUT_2I_B: STD_LOGIC;
	signal OUT_DOT_1B: STD_LOGIC;
	signal OUT_DOT_1H: STD_LOGIC;

begin

	OUT_4A_B <= NOT(PB_B_CH_NOT_A_BIT AND PB_B_CH_B_BIT );
	OUT_3A_E <= NOT OUT_4A_B;
	OUT_3B_A <= NOT OUT_4A_B;
	OUT_2B_F <= NOT PB_B_CH_B_BIT;
	OUT_4C_C <= NOT(PB_B_CH_A_BIT AND PB_B_CH_B_BIT );
	OUT_2C_D <= NOT OUT_4C_C;
	OUT_3D_D <= NOT(OUT_4C_C AND PB_B_CH_B_BIT );
	OUT_4F_E <= NOT(PB_A_CH_NOT_A_BIT AND PB_A_CH_B_BIT );
	OUT_3F_F <= NOT OUT_4F_E;
	OUT_3G_C <= NOT OUT_4F_E;
	OUT_2G_K <= OUT_3G_C;
	OUT_4H_B <= NOT(PB_A_CH_A_BIT AND PB_A_CH_B_BIT );
	OUT_2H_E <= NOT OUT_4H_B;
	OUT_3I_C <= NOT(OUT_4H_B AND PB_A_CH_B_BIT );
	OUT_2I_B <= NOT PB_A_CH_B_BIT;
	OUT_DOT_1B <= OUT_2B_F OR OUT_2C_D;
	OUT_DOT_1H <= OUT_2H_E OR OUT_2I_B;

	PB_B_CH_MINUS <= OUT_3A_E;
	PS_B_CH_MINUS <= OUT_3B_A;
	PB_B_CH_PLUS <= OUT_3D_D;
	PB_A_CH_MINUS <= OUT_3F_F;
	PS_A_CH_MINUS <= OUT_2G_K;
	PB_A_CH_PLUS <= OUT_3I_C;
	PS_B_CH_PLUS <= OUT_DOT_1B;
	PS_A_CH_PLUS <= OUT_DOT_1H;


end;
