-- Test BenchVHDL for IBM SMS ALD group EChTapeControls
-- Title: EChTapeControls
-- IBM Machine Name 1411
-- Generated by GenerateHDL on 8/14/2020 11:11:50 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity EChTapeControls_tb is
end EChTapeControls_tb;

architecture behavioral of EChTapeControls_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component EChTapeControls
	    Port (
		FPGA_CLK: in STD_LOGIC;
		PS_LOGIC_GATE_F_1: in STD_LOGIC;
		PS_LOGIC_GATE_C_1: in STD_LOGIC;
		PS_I_RING_6_OR_1401_AND_8_TIME: in STD_LOGIC;
		PS_LAST_LOGIC_GATE_1: in STD_LOGIC;
		PS_LAST_INSN_RO_CYCLE: in STD_LOGIC;
		MS_RESET_END_OF_REEL_IND: in STD_LOGIC;
		MS_E_CH_NOT_READY: in STD_LOGIC;
		MS_E_CH_BUSY_BUS: in STD_LOGIC;
		PS_E_CH_BUSY_BUS: in STD_LOGIC;
		MS_E_CH_BUSY: in STD_LOGIC;
		PS_E_CH_TAPE_INDICATOR: in STD_LOGIC;
		MS_PROGRAM_RESET_2: in STD_LOGIC;
		PS_1401_MODE: in STD_LOGIC;
		MS_1401_MODE: in STD_LOGIC;
		MS_B_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		MS_E_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		MS_R_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		MS_Q_OR_V_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_UNIT_CTRL_OP_CODE: in STD_LOGIC;
		PS_M_OR_L_OP_CODES: in STD_LOGIC;
		PS_PERCENT_OR_COML_AT: in STD_LOGIC;
		PS_E_CH_SELECT_TAPE_DATA: in STD_LOGIC;
		PS_E_CH_SECOND_SAMPLE_B: in STD_LOGIC;
		MC_SELECT_AT_LOAD_POINT_STAR_E_CH: in STD_LOGIC;
		PS_I_RING_7_OR_1401_6_OR_8: in STD_LOGIC;
		PS_U_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_B_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_E_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_R_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_M_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_A_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD: in STD_LOGIC;
		PS_W_OR_X_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_E_CH_DISCON_LATCH: in STD_LOGIC;
		MC_WRITE_CONDITION_STAR_E_CH: in STD_LOGIC;
		PS_I_RING_HDL_BUS: in STD_LOGIC_VECTOR (12 downTo 0);
		MS_E_CH_TAPE_CALL: out STD_LOGIC;
		MS_UNIT_CONTROL_INST_RO_DELAY: out STD_LOGIC;
		MS_1401_UNIT_CTRL_DELAY: out STD_LOGIC;
		MS_1401_M_OR_L_TAPE_DELAY: out STD_LOGIC;
		PS_B_OR_R_OR_U_SYMBOL_OP_MODIFIER: out STD_LOGIC;
		MC_TURN_OFF_TAPE_IND_STAR_E_CH: out STD_LOGIC;
		MC_RESET_TAPE_SEL_REG_STAR_E_CH: out STD_LOGIC;
		MC_SET_TAPE_SEL_REG_STAR_E_CH: out STD_LOGIC;
		MC_DISCONNECT_CALL_STAR_E_CH: out STD_LOGIC;
		MC_READ_TAPE_CALL_STAR_E_CH: out STD_LOGIC;
		MC_WRITE_TAPE_CALL_STAR_E_CH: out STD_LOGIC;
		MC_WRITE_TAPE_MK_CALL_STAR_E_CH: out STD_LOGIC;
		MC_ERASE_CALL_STAR_E_CH: out STD_LOGIC;
		MC_REWIND_UNLOAD_STAR_E_CH: out STD_LOGIC;
		MC_REWIND_CALL_STAR_E_CH: out STD_LOGIC;
		MC_BACKSPACE_CALL_STAR_E_CH: out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_LOGIC_GATE_F_1: STD_LOGIC := '0';
	signal PS_LOGIC_GATE_C_1: STD_LOGIC := '0';
	signal PS_I_RING_6_OR_1401_AND_8_TIME: STD_LOGIC := '0';
	signal PS_LAST_LOGIC_GATE_1: STD_LOGIC := '0';
	signal PS_LAST_INSN_RO_CYCLE: STD_LOGIC := '0';
	signal MS_RESET_END_OF_REEL_IND: STD_LOGIC := '1';
	signal MS_E_CH_NOT_READY: STD_LOGIC := '1';
	signal MS_E_CH_BUSY_BUS: STD_LOGIC := '1';
	signal PS_E_CH_BUSY_BUS: STD_LOGIC := '0';
	signal MS_E_CH_BUSY: STD_LOGIC := '1';
	signal PS_E_CH_TAPE_INDICATOR: STD_LOGIC := '0';
	signal MS_PROGRAM_RESET_2: STD_LOGIC := '1';
	signal PS_1401_MODE: STD_LOGIC := '0';
	signal MS_1401_MODE: STD_LOGIC := '1';
	signal MS_B_SYMBOL_OP_MODIFIER: STD_LOGIC := '1';
	signal MS_E_SYMBOL_OP_MODIFIER: STD_LOGIC := '1';
	signal MS_R_SYMBOL_OP_MODIFIER: STD_LOGIC := '1';
	signal MS_Q_OR_V_SYMBOL_OP_MODIFIER: STD_LOGIC := '1';
	signal PS_UNIT_CTRL_OP_CODE: STD_LOGIC := '0';
	signal PS_M_OR_L_OP_CODES: STD_LOGIC := '0';
	signal PS_PERCENT_OR_COML_AT: STD_LOGIC := '0';
	signal PS_E_CH_SELECT_TAPE_DATA: STD_LOGIC := '0';
	signal PS_E_CH_SECOND_SAMPLE_B: STD_LOGIC := '0';
	signal MC_SELECT_AT_LOAD_POINT_STAR_E_CH: STD_LOGIC := '1';
	signal PS_I_RING_7_OR_1401_6_OR_8: STD_LOGIC := '0';
	signal PS_U_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_B_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_E_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_R_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_M_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_A_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD: STD_LOGIC := '0';
	signal PS_W_OR_X_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_E_CH_DISCON_LATCH: STD_LOGIC := '0';
	signal MC_WRITE_CONDITION_STAR_E_CH: STD_LOGIC := '1';
	signal PS_I_RING_HDL_BUS: STD_LOGIC_VECTOR (12 downTo 0) := "0000000000000";

	-- Outputs

	signal MS_E_CH_TAPE_CALL: STD_LOGIC;
	signal MS_UNIT_CONTROL_INST_RO_DELAY: STD_LOGIC;
	signal MS_1401_UNIT_CTRL_DELAY: STD_LOGIC;
	signal MS_1401_M_OR_L_TAPE_DELAY: STD_LOGIC;
	signal PS_B_OR_R_OR_U_SYMBOL_OP_MODIFIER: STD_LOGIC;
	signal MC_TURN_OFF_TAPE_IND_STAR_E_CH: STD_LOGIC;
	signal MC_RESET_TAPE_SEL_REG_STAR_E_CH: STD_LOGIC;
	signal MC_SET_TAPE_SEL_REG_STAR_E_CH: STD_LOGIC;
	signal MC_DISCONNECT_CALL_STAR_E_CH: STD_LOGIC;
	signal MC_READ_TAPE_CALL_STAR_E_CH: STD_LOGIC;
	signal MC_WRITE_TAPE_CALL_STAR_E_CH: STD_LOGIC;
	signal MC_WRITE_TAPE_MK_CALL_STAR_E_CH: STD_LOGIC;
	signal MC_ERASE_CALL_STAR_E_CH: STD_LOGIC;
	signal MC_REWIND_UNLOAD_STAR_E_CH: STD_LOGIC;
	signal MC_REWIND_CALL_STAR_E_CH: STD_LOGIC;
	signal MC_BACKSPACE_CALL_STAR_E_CH: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: EChTapeControls port map(
		FPGA_CLK => FPGA_CLK,
		PS_LOGIC_GATE_F_1 => PS_LOGIC_GATE_F_1,
		PS_LOGIC_GATE_C_1 => PS_LOGIC_GATE_C_1,
		PS_I_RING_6_OR_1401_AND_8_TIME => PS_I_RING_6_OR_1401_AND_8_TIME,
		PS_LAST_LOGIC_GATE_1 => PS_LAST_LOGIC_GATE_1,
		PS_LAST_INSN_RO_CYCLE => PS_LAST_INSN_RO_CYCLE,
		MS_RESET_END_OF_REEL_IND => MS_RESET_END_OF_REEL_IND,
		MS_E_CH_NOT_READY => MS_E_CH_NOT_READY,
		MS_E_CH_BUSY_BUS => MS_E_CH_BUSY_BUS,
		PS_E_CH_BUSY_BUS => PS_E_CH_BUSY_BUS,
		MS_E_CH_BUSY => MS_E_CH_BUSY,
		PS_E_CH_TAPE_INDICATOR => PS_E_CH_TAPE_INDICATOR,
		MS_PROGRAM_RESET_2 => MS_PROGRAM_RESET_2,
		PS_1401_MODE => PS_1401_MODE,
		MS_1401_MODE => MS_1401_MODE,
		MS_B_SYMBOL_OP_MODIFIER => MS_B_SYMBOL_OP_MODIFIER,
		MS_E_SYMBOL_OP_MODIFIER => MS_E_SYMBOL_OP_MODIFIER,
		MS_R_SYMBOL_OP_MODIFIER => MS_R_SYMBOL_OP_MODIFIER,
		MS_Q_OR_V_SYMBOL_OP_MODIFIER => MS_Q_OR_V_SYMBOL_OP_MODIFIER,
		PS_UNIT_CTRL_OP_CODE => PS_UNIT_CTRL_OP_CODE,
		PS_M_OR_L_OP_CODES => PS_M_OR_L_OP_CODES,
		PS_PERCENT_OR_COML_AT => PS_PERCENT_OR_COML_AT,
		PS_E_CH_SELECT_TAPE_DATA => PS_E_CH_SELECT_TAPE_DATA,
		PS_E_CH_SECOND_SAMPLE_B => PS_E_CH_SECOND_SAMPLE_B,
		MC_SELECT_AT_LOAD_POINT_STAR_E_CH => MC_SELECT_AT_LOAD_POINT_STAR_E_CH,
		PS_I_RING_7_OR_1401_6_OR_8 => PS_I_RING_7_OR_1401_6_OR_8,
		PS_U_SYMBOL_OP_MODIFIER => PS_U_SYMBOL_OP_MODIFIER,
		PS_B_SYMBOL_OP_MODIFIER => PS_B_SYMBOL_OP_MODIFIER,
		PS_E_SYMBOL_OP_MODIFIER => PS_E_SYMBOL_OP_MODIFIER,
		PS_R_SYMBOL_OP_MODIFIER => PS_R_SYMBOL_OP_MODIFIER,
		PS_M_SYMBOL_OP_MODIFIER => PS_M_SYMBOL_OP_MODIFIER,
		PS_A_SYMBOL_OP_MODIFIER => PS_A_SYMBOL_OP_MODIFIER,
		PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD => PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD,
		PS_W_OR_X_SYMBOL_OP_MODIFIER => PS_W_OR_X_SYMBOL_OP_MODIFIER,
		PS_E_CH_DISCON_LATCH => PS_E_CH_DISCON_LATCH,
		MC_WRITE_CONDITION_STAR_E_CH => MC_WRITE_CONDITION_STAR_E_CH,
		PS_I_RING_HDL_BUS => PS_I_RING_HDL_BUS,
		MS_E_CH_TAPE_CALL => MS_E_CH_TAPE_CALL,
		MS_UNIT_CONTROL_INST_RO_DELAY => MS_UNIT_CONTROL_INST_RO_DELAY,
		MS_1401_UNIT_CTRL_DELAY => MS_1401_UNIT_CTRL_DELAY,
		MS_1401_M_OR_L_TAPE_DELAY => MS_1401_M_OR_L_TAPE_DELAY,
		PS_B_OR_R_OR_U_SYMBOL_OP_MODIFIER => PS_B_OR_R_OR_U_SYMBOL_OP_MODIFIER,
		MC_TURN_OFF_TAPE_IND_STAR_E_CH => MC_TURN_OFF_TAPE_IND_STAR_E_CH,
		MC_RESET_TAPE_SEL_REG_STAR_E_CH => MC_RESET_TAPE_SEL_REG_STAR_E_CH,
		MC_SET_TAPE_SEL_REG_STAR_E_CH => MC_SET_TAPE_SEL_REG_STAR_E_CH,
		MC_DISCONNECT_CALL_STAR_E_CH => MC_DISCONNECT_CALL_STAR_E_CH,
		MC_READ_TAPE_CALL_STAR_E_CH => MC_READ_TAPE_CALL_STAR_E_CH,
		MC_WRITE_TAPE_CALL_STAR_E_CH => MC_WRITE_TAPE_CALL_STAR_E_CH,
		MC_WRITE_TAPE_MK_CALL_STAR_E_CH => MC_WRITE_TAPE_MK_CALL_STAR_E_CH,
		MC_ERASE_CALL_STAR_E_CH => MC_ERASE_CALL_STAR_E_CH,
		MC_REWIND_UNLOAD_STAR_E_CH => MC_REWIND_UNLOAD_STAR_E_CH,
		MC_REWIND_CALL_STAR_E_CH => MC_REWIND_CALL_STAR_E_CH,
		MC_BACKSPACE_CALL_STAR_E_CH => MC_BACKSPACE_CALL_STAR_E_CH);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code

   testName := "13.71.04.1        ";
   
   wait for 30 ns;
   MS_PROGRAM_RESET_2 <= '0';
   wait for 30 ns;
   MS_PROGRAM_RESET_2 <= '1';
   wait for 30 ns;
   
   
   check1(PS_B_OR_R_OR_U_SYMBOL_OP_MODIFIER,'0',testName,"0A");
   MS_B_SYMBOL_OP_MODIFIER <= '0';
   wait for 30 ns;
   check1(PS_B_OR_R_OR_U_SYMBOL_OP_MODIFIER,'1',testName,"0B");
   MS_B_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns;
   MS_R_SYMBOL_OP_MODIFIER <= '0';
   wait for 30 ns;
   check1(PS_B_OR_R_OR_U_SYMBOL_OP_MODIFIER,'1',testName,"0C");
   MS_B_SYMBOL_OP_MODIFIER <= '1';
   MS_R_SYMBOL_OP_MODIFIER <= '1';
   
   check1(MS_E_CH_TAPE_CALL,'1',testName,"1A");
   
   MS_E_SYMBOL_OP_MODIFIER <= '0'; -- Prevents setting
   
   PS_E_CH_SELECT_TAPE_DATA <= '1';
   PS_LOGIC_GATE_F_1 <= '1';
   PS_LAST_INSN_RO_CYCLE <= '1';
   PS_PERCENT_OR_COML_AT <= '1';
   
   PS_UNIT_CTRL_OP_CODE <= '0';
   MC_SELECT_AT_LOAD_POINT_STAR_E_CH <= '0';
   MS_B_SYMBOL_OP_MODIFIER <= '0';  -- Sets B+R+U Op Mod
   
   MS_E_CH_BUSY <= '1';   
   MS_E_CH_NOT_READY <= '1';
   MS_Q_OR_V_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns;
   check1(MS_E_CH_TAPE_CALL,'1',testName,"1B");
   
   MS_E_SYMBOL_OP_MODIFIER <= '1';   
   PS_E_CH_SELECT_TAPE_DATA <= '0';
   wait for 30 ns;
   check1(MS_E_CH_TAPE_CALL,'1',testName,"1C");
   
   PS_E_CH_SELECT_TAPE_DATA <= '1';
   PS_LOGIC_GATE_F_1 <= '0';
   wait for 30 ns;
   check1(MS_E_CH_TAPE_CALL,'1',testName,"1D");
   
   PS_LOGIC_GATE_F_1 <= '1';
   PS_LAST_INSN_RO_CYCLE <= '0';
   wait for 30 ns;
   check1(MS_E_CH_TAPE_CALL,'1',testName,"1E");
   
   PS_LAST_INSN_RO_CYCLE <= '1';
   PS_PERCENT_OR_COML_AT <= '0';
   wait for 30 ns;
   check1(MS_E_CH_TAPE_CALL,'1',testName,"1F");
   
   PS_PERCENT_OR_COML_AT <= '1';
   PS_UNIT_CTRL_OP_CODE <= '1';
   wait for 30 ns;
   check1(MS_E_CH_TAPE_CALL,'1',testName,"1G");
   
   PS_UNIT_CTRL_OP_CODE <= '0';
   MS_E_CH_BUSY <= '0';   
   wait for 30 ns;
   check1(MS_E_CH_TAPE_CALL,'1',testName,"1H");

   MS_E_CH_BUSY <= '1';   
   MS_E_CH_NOT_READY <= '0';
   wait for 30 ns;
   check1(MS_E_CH_TAPE_CALL,'1',testName,"1I");

   MS_E_CH_NOT_READY <= '1';
   MS_Q_OR_V_SYMBOL_OP_MODIFIER <= '0';
   wait for 30 ns;
   check1(MS_E_CH_TAPE_CALL,'1',testName,"1J");

   MS_Q_OR_V_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns; -- Sets Latch
   PS_UNIT_CTRL_OP_CODE <= '1';
   wait for 30 ns;
   check1(MS_E_CH_TAPE_CALL,'0',testName,"1K");
   MS_E_CH_BUSY_BUS <= '0';
   wait for 30 ns; -- Reset Latch
   MS_E_CH_BUSY_BUS <= '1';
   wait for 30 ns;
   check1(MS_E_CH_TAPE_CALL,'1',testName,"1L");

   MC_SELECT_AT_LOAD_POINT_STAR_E_CH <= '1';
   wait for 30 ns; -- Sets Latch
   MC_SELECT_AT_LOAD_POINT_STAR_E_CH <= '0';
   check1(MS_E_CH_TAPE_CALL,'0',testName,"1M");
   MS_E_CH_BUSY_BUS <= '0';
   wait for 30 ns; -- Reset Latch
   MS_E_CH_BUSY_BUS <= '1';
   wait for 30 ns;
   check1(MS_E_CH_TAPE_CALL,'1',testName,"1N");

   MS_B_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns; -- Sets Latch
   MS_B_SYMBOL_OP_MODIFIER <= '0';
   check1(MS_E_CH_TAPE_CALL,'0',testName,"1O");
   MS_E_CH_BUSY_BUS <= '0';
   wait for 30 ns; -- Reset Latch
   MS_E_CH_BUSY_BUS <= '1';
   wait for 30 ns;
   check1(MS_E_CH_TAPE_CALL,'1',testName,"1P");
   PS_UNIT_CTRL_OP_CODE <= '0';
   
   testName := "13.71.05.1        ";

   -- Set tape call again for the following tests

   MS_B_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns;
   check1(MS_E_CH_TAPE_CALL,'0',testName,"SA");
   
   check1(MC_READ_TAPE_CALL_STAR_E_CH,'1',testName,"SB");
   check1(MC_WRITE_TAPE_CALL_STAR_E_CH,'1',testName,"SC");
   check1(MC_WRITE_TAPE_MK_CALL_STAR_E_CH,'1',testName,"SD");
   check1(MC_ERASE_CALL_STAR_E_CH,'1',testName,"SE");
   check1(MC_REWIND_UNLOAD_STAR_E_CH,'1',testName,"SF");
   check1(MC_REWIND_CALL_STAR_E_CH,'1',testName,"SG");
   check1(MC_BACKSPACE_CALL_STAR_E_CH,'1',testName,"1H");
   
   -- Set the various calls one at a time
   
   PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD <= '1';
   PS_A_SYMBOL_OP_MODIFIER <= '1'; -- Two for one test sale. ;)
   
   wait for 30 ns;
   check1(MC_READ_TAPE_CALL_STAR_E_CH,'1',testName,"1A");
   PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD <= '0';
   PS_M_OR_L_OP_CODES <= '1';
   wait for 30 ns;
   check1(MC_READ_TAPE_CALL_STAR_E_CH,'1',testName,"1AA");
   PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD <= '1';
   wait for 30 ns;
   check1(MC_READ_TAPE_CALL_STAR_E_CH,'0',testName,"1B");
   check1(MC_WRITE_TAPE_CALL_STAR_E_CH,'1',testName,"1C");
   check1(MC_WRITE_TAPE_MK_CALL_STAR_E_CH,'1',testName,"1D");
   check1(MC_ERASE_CALL_STAR_E_CH,'1',testName,"1E");
   check1(MC_REWIND_UNLOAD_STAR_E_CH,'1',testName,"1F");
   check1(MC_REWIND_CALL_STAR_E_CH,'1',testName,"1G");
   check1(MC_BACKSPACE_CALL_STAR_E_CH,'1',testName,"1H");

   PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD <= '0';
   wait for 30 ns;
   check1(MC_READ_TAPE_CALL_STAR_E_CH,'1',testName,"1I");
   
   PS_UNIT_CTRL_OP_CODE <= '1';
   wait for 30 ns;
   check1(MC_READ_TAPE_CALL_STAR_E_CH,'0',testName,"1J");
   check1(MC_WRITE_TAPE_CALL_STAR_E_CH,'1',testName,"1K");
   check1(MC_WRITE_TAPE_MK_CALL_STAR_E_CH,'1',testName,"1L");
   check1(MC_ERASE_CALL_STAR_E_CH,'1',testName,"1M");
   check1(MC_REWIND_UNLOAD_STAR_E_CH,'1',testName,"1N");
   check1(MC_REWIND_CALL_STAR_E_CH,'1',testName,"1O");
   check1(MC_BACKSPACE_CALL_STAR_E_CH,'1',testName,"1P");

   PS_UNIT_CTRL_OP_CODE <= '0';
   wait for 30 ns;
   check1(MC_READ_TAPE_CALL_STAR_E_CH,'1',testName,"1Q");
   PS_A_SYMBOL_OP_MODIFIER <= '0';
   PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD <= '0';
      
   PS_M_OR_L_OP_CODES <= '1';
   wait for 30 ns;
   check1(MC_WRITE_TAPE_CALL_STAR_E_CH,'1',testName,"2A");
   PS_M_OR_L_OP_CODES <= '0';
   PS_W_OR_X_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns;
   check1(MC_WRITE_TAPE_CALL_STAR_E_CH,'1',testName,"2AA");
   PS_M_OR_L_OP_CODES <= '1';
   wait for 30 ns;
   check1(MC_WRITE_TAPE_CALL_STAR_E_CH,'0',testName,"2B");
   check1(MC_READ_TAPE_CALL_STAR_E_CH,'1',testName,"2C");
   check1(MC_WRITE_TAPE_MK_CALL_STAR_E_CH,'1',testName,"2D");
   check1(MC_ERASE_CALL_STAR_E_CH,'1',testName,"2E");
   check1(MC_REWIND_UNLOAD_STAR_E_CH,'1',testName,"2F");
   check1(MC_REWIND_CALL_STAR_E_CH,'1',testName,"2G");
   check1(MC_BACKSPACE_CALL_STAR_E_CH,'1',testName,"2H");
   PS_M_OR_L_OP_CODES <= '0';
   PS_W_OR_X_SYMBOL_OP_MODIFIER <= '0';
   
   PS_M_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns;
   check1(MC_WRITE_TAPE_MK_CALL_STAR_E_CH,'1',testName,"3A");
   PS_M_SYMBOL_OP_MODIFIER <= '0';
   PS_UNIT_CTRL_OP_CODE <= '1';
   wait for 30 ns;
   check1(MC_WRITE_TAPE_MK_CALL_STAR_E_CH,'1',testName,"3AA");
   PS_M_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns;
   check1(MC_READ_TAPE_CALL_STAR_E_CH,'1',testName,"3B");
   check1(MC_WRITE_TAPE_CALL_STAR_E_CH,'1',testName,"3C");
   check1(MC_WRITE_TAPE_MK_CALL_STAR_E_CH,'0',testName,"3D");
   check1(MC_ERASE_CALL_STAR_E_CH,'1',testName,"3E");
   check1(MC_REWIND_UNLOAD_STAR_E_CH,'1',testName,"3F");
   check1(MC_REWIND_CALL_STAR_E_CH,'1',testName,"3G");
   check1(MC_BACKSPACE_CALL_STAR_E_CH,'1',testName,"3H");
   PS_M_SYMBOL_OP_MODIFIER <= '0';
   PS_UNIT_CTRL_OP_CODE <= '0';
   
   PS_I_RING_7_OR_1401_6_OR_8 <= '1';
   PS_UNIT_CTRL_OP_CODE <= '1';
   PS_E_SYMBOL_OP_MODIFIER <= '1';
   MS_E_CH_BUSY_BUS <= '1';
   PS_PERCENT_OR_COML_AT <= '1';
   wait for 30 ns;
   check1(MC_READ_TAPE_CALL_STAR_E_CH,'1',testName,"4B");
   check1(MC_WRITE_TAPE_CALL_STAR_E_CH,'1',testName,"4C");
   check1(MC_WRITE_TAPE_MK_CALL_STAR_E_CH,'1',testName,"4D");
   check1(MC_ERASE_CALL_STAR_E_CH,'0',testName,"4E");
   check1(MC_REWIND_UNLOAD_STAR_E_CH,'1',testName,"4F");
   check1(MC_REWIND_CALL_STAR_E_CH,'1',testName,"4G");
   check1(MC_BACKSPACE_CALL_STAR_E_CH,'1',testName,"4H");
   PS_I_RING_7_OR_1401_6_OR_8 <= '0';
   wait for 30 ns;      
   check1(MC_ERASE_CALL_STAR_E_CH,'1',testName,"4I");
   PS_I_RING_7_OR_1401_6_OR_8 <= '1';
   PS_UNIT_CTRL_OP_CODE <= '0';
   wait for 30 ns;      
   check1(MC_ERASE_CALL_STAR_E_CH,'1',testName,"4J");
   PS_UNIT_CTRL_OP_CODE <= '1';
   PS_E_SYMBOL_OP_MODIFIER <= '0';
   wait for 30 ns;      
   check1(MC_ERASE_CALL_STAR_E_CH,'1',testName,"4K");
   PS_E_SYMBOL_OP_MODIFIER <= '1';
   MS_E_CH_BUSY_BUS <= '0';
   wait for 30 ns;      
   check1(MC_ERASE_CALL_STAR_E_CH,'1',testName,"4L");
   MS_E_CH_BUSY_BUS <= '1';
   PS_PERCENT_OR_COML_AT <= '0';
   wait for 30 ns;      
   check1(MC_ERASE_CALL_STAR_E_CH,'1',testName,"4M");
   PS_PERCENT_OR_COML_AT <= '1';
   wait for 30 ns;      
   check1(MC_ERASE_CALL_STAR_E_CH,'0',testName,"4N");
   PS_I_RING_HDL_BUS(7) <= '0';
   PS_UNIT_CTRL_OP_CODE <= '0';
   PS_E_SYMBOL_OP_MODIFIER <= '0';
   MS_E_CH_BUSY_BUS <= '1';
   PS_PERCENT_OR_COML_AT <= '0';

   PS_UNIT_CTRL_OP_CODE <= '1';
   wait for 30 ns;
   check1(MC_REWIND_UNLOAD_STAR_E_CH,'1',testName,"5A");
   PS_UNIT_CTRL_OP_CODE <= '0';
   wait for 30 ns;
   PS_U_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns;
   check1(MC_REWIND_UNLOAD_STAR_E_CH,'1',testName,"5AA");
   PS_UNIT_CTRL_OP_CODE <= '1';
   wait for 30 ns;
   check1(MC_READ_TAPE_CALL_STAR_E_CH,'1',testName,"5B");
   check1(MC_WRITE_TAPE_CALL_STAR_E_CH,'1',testName,"5C");
   check1(MC_WRITE_TAPE_MK_CALL_STAR_E_CH,'1',testName,"5D");
   check1(MC_ERASE_CALL_STAR_E_CH,'1',testName,"5E");
   check1(MC_REWIND_UNLOAD_STAR_E_CH,'0',testName,"5F");
   check1(MC_REWIND_CALL_STAR_E_CH,'1',testName,"5G");
   check1(MC_BACKSPACE_CALL_STAR_E_CH,'1',testName,"5H");
   PS_UNIT_CTRL_OP_CODE <= '0';
   PS_U_SYMBOL_OP_MODIFIER <= '0';
   
   PS_UNIT_CTRL_OP_CODE <= '1';
   wait for 30 ns;
   check1(MC_REWIND_CALL_STAR_E_CH,'1',testName,"6A");
   PS_UNIT_CTRL_OP_CODE <= '0';
   wait for 30 ns;
   PS_R_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns;
   check1(MC_REWIND_CALL_STAR_E_CH,'1',testName,"6AA");
   PS_UNIT_CTRL_OP_CODE <= '1';
   wait for 30 ns;
   check1(MC_READ_TAPE_CALL_STAR_E_CH,'1',testName,"6B");
   check1(MC_WRITE_TAPE_CALL_STAR_E_CH,'1',testName,"6C");
   check1(MC_WRITE_TAPE_MK_CALL_STAR_E_CH,'1',testName,"6D");
   check1(MC_ERASE_CALL_STAR_E_CH,'1',testName,"6E");
   check1(MC_REWIND_UNLOAD_STAR_E_CH,'1',testName,"6F");
   check1(MC_REWIND_CALL_STAR_E_CH,'0',testName,"6G");
   check1(MC_BACKSPACE_CALL_STAR_E_CH,'1',testName,"6H");
   PS_UNIT_CTRL_OP_CODE <= '0';
   PS_R_SYMBOL_OP_MODIFIER <= '0';

   PS_UNIT_CTRL_OP_CODE <= '1';
   wait for 30 ns;
   check1(MC_BACKSPACE_CALL_STAR_E_CH,'1',testName,"7A");
   PS_UNIT_CTRL_OP_CODE <= '0';
   wait for 30 ns;
   PS_B_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns;
   check1(MC_BACKSPACE_CALL_STAR_E_CH,'1',testName,"7AA");
   PS_UNIT_CTRL_OP_CODE <= '1';
   wait for 30 ns;
   check1(MC_READ_TAPE_CALL_STAR_E_CH,'1',testName,"7B");
   check1(MC_WRITE_TAPE_CALL_STAR_E_CH,'1',testName,"7C");
   check1(MC_WRITE_TAPE_MK_CALL_STAR_E_CH,'1',testName,"7D");
   check1(MC_ERASE_CALL_STAR_E_CH,'1',testName,"7E");
   check1(MC_REWIND_UNLOAD_STAR_E_CH,'1',testName,"7F");
   check1(MC_REWIND_CALL_STAR_E_CH,'1',testName,"7G");
   check1(MC_BACKSPACE_CALL_STAR_E_CH,'0',testName,"7H");
   PS_UNIT_CTRL_OP_CODE <= '0';
   PS_B_SYMBOL_OP_MODIFIER <= '0';

   -- Turn them ALL on (which could never really happen, of course)

   PS_DOLLAR_SIGN_OR_R_SYMBOL_OP_MOD <= '1';
   PS_M_OR_L_OP_CODES <= '1';
   PS_A_SYMBOL_OP_MODIFIER <= '1';
   PS_W_OR_X_SYMBOL_OP_MODIFIER <= '1';
   PS_M_SYMBOL_OP_MODIFIER <= '1';
   MS_E_CH_BUSY_BUS <= '1';
   PS_I_RING_7_OR_1401_6_OR_8 <= '1';
   PS_E_SYMBOL_OP_MODIFIER <= '1';
   PS_PERCENT_OR_COML_AT <= '1';
   PS_U_SYMBOL_OP_MODIFIER <= '1';
   PS_UNIT_CTRL_OP_CODE <= '1';
   PS_R_SYMBOL_OP_MODIFIER <= '1';
   PS_B_SYMBOL_OP_MODIFIER <= '1';
   wait for 30 ns;

   check1(MC_READ_TAPE_CALL_STAR_E_CH,'0',testName,"8A");
   check1(MC_WRITE_TAPE_CALL_STAR_E_CH,'0',testName,"8C");
   check1(MC_WRITE_TAPE_MK_CALL_STAR_E_CH,'0',testName,"8D");
   check1(MC_ERASE_CALL_STAR_E_CH,'0',testName,"8E");
   check1(MC_REWIND_UNLOAD_STAR_E_CH,'0',testName,"8F");
   check1(MC_REWIND_CALL_STAR_E_CH,'0',testName,"8G");
   check1(MC_BACKSPACE_CALL_STAR_E_CH,'0',testName,"8H");
   
   -- Then turn off Tape Call and all be Erase should turn off
   
   PS_E_CH_SELECT_TAPE_DATA <= '0';
   PS_LOGIC_GATE_F_1 <= '0';
   PS_LAST_INSN_RO_CYCLE <= '0';
   PS_B_SYMBOL_OP_MODIFIER <= '0';
   MS_E_CH_BUSY_BUS <= '0';
   wait for 30 ns;      
   MS_E_CH_BUSY_BUS <= '1';
   wait for 30 ns;      
   check1(MS_E_CH_TAPE_CALL,'1',testName,"9A");
   check1(MC_READ_TAPE_CALL_STAR_E_CH,'1',testName,"9B");
   check1(MC_WRITE_TAPE_CALL_STAR_E_CH,'1',testName,"9C");
   check1(MC_WRITE_TAPE_MK_CALL_STAR_E_CH,'1',testName,"9D");
   check1(MC_ERASE_CALL_STAR_E_CH,'0',testName,"9E");
   check1(MC_REWIND_UNLOAD_STAR_E_CH,'1',testName,"9F");
   check1(MC_REWIND_CALL_STAR_E_CH,'1',testName,"9G");
   check1(MC_BACKSPACE_CALL_STAR_E_CH,'1',testName,"9H");
   PS_B_SYMBOL_OP_MODIFIER <= '0';
   
   check1(MC_DISCONNECT_CALL_STAR_E_CH,'1',testName,"10A");
   MC_WRITE_CONDITION_STAR_E_CH <= '1';
   PS_E_CH_DISCON_LATCH <= '1';
   PS_E_CH_SELECT_TAPE_DATA <= '1';
   wait for 30 ns;
   check1(MC_DISCONNECT_CALL_STAR_E_CH,'1',testName,"1B");
   MC_WRITE_CONDITION_STAR_E_CH <= '0';
   PS_E_CH_DISCON_LATCH <= '0';
   wait for 30 ns;
   check1(MC_DISCONNECT_CALL_STAR_E_CH,'1',testName,"1C");
   PS_E_CH_DISCON_LATCH <= '1';
   PS_E_CH_SELECT_TAPE_DATA <= '0';
   wait for 30 ns;
   check1(MC_DISCONNECT_CALL_STAR_E_CH,'1',testName,"1D");
   PS_E_CH_SELECT_TAPE_DATA <= '1';
   wait for 30 ns;
   check1(MC_DISCONNECT_CALL_STAR_E_CH,'0',testName,"1E");
   MC_WRITE_CONDITION_STAR_E_CH <= '1';
   PS_E_CH_DISCON_LATCH <= '0';
   PS_E_CH_SELECT_TAPE_DATA <= '0';
   
   testName := "13.74.04.1 PART 2 ";
   
   PS_E_CH_TAPE_INDICATOR <= '0'; -- Reset Latch
   wait for 30 ns;
   PS_E_CH_TAPE_INDICATOR <= '1';
   wait for 30 ns;      
   check1(MC_TURN_OFF_TAPE_IND_STAR_E_CH,'1',testName,"2A");
   PS_E_CH_SECOND_SAMPLE_B <= '0';
   PS_E_CH_SELECT_TAPE_DATA <= '1';
   MS_1401_MODE <= '1';
   wait for 30 ns;   
   check1(MC_TURN_OFF_TAPE_IND_STAR_E_CH,'1',testName,"2B");
   PS_E_CH_SECOND_SAMPLE_B <= '1';
   PS_E_CH_SELECT_TAPE_DATA <= '0';
   wait for 30 ns;   
   check1(MC_TURN_OFF_TAPE_IND_STAR_E_CH,'1',testName,"2C");
   PS_E_CH_SELECT_TAPE_DATA <= '1';
   MS_1401_MODE <= '0';
   wait for 30 ns;
   check1(MC_TURN_OFF_TAPE_IND_STAR_E_CH,'1',testName,"2E");
   MS_1401_MODE <= '1';
   wait for 30 ns;      
   check1(MC_TURN_OFF_TAPE_IND_STAR_E_CH,'0',testName,"2F");
   PS_E_CH_SELECT_TAPE_DATA <= '0'; -- Remove set criteria
   PS_E_CH_SECOND_SAMPLE_B <= '0';
   -- Reset
   PS_E_CH_TAPE_INDICATOR <= '0';
   wait for 30 ns;
   PS_E_CH_TAPE_INDICATOR <= '1';
   wait for 30 ns;   
   check1(MC_TURN_OFF_TAPE_IND_STAR_E_CH,'1',testName,"2G");
   MS_RESET_END_OF_REEL_IND <= '0';
   wait for 30 ns;   
   MS_RESET_END_OF_REEL_IND <= '1';
   wait for 30 ns;   
   check1(MC_TURN_OFF_TAPE_IND_STAR_E_CH,'0',testName,"2H");
   PS_E_CH_TAPE_INDICATOR <= '0';
   wait for 30 ns;   
   PS_E_CH_TAPE_INDICATOR <= '1';
   wait for 30 ns;
   check1(MC_TURN_OFF_TAPE_IND_STAR_E_CH,'1',testName,"2I");
      
   check1(MC_RESET_TAPE_SEL_REG_STAR_E_CH,'1',testName,"3A");
   PS_LOGIC_GATE_C_1 <= '1';
   wait for 30 ns;
   check1(MC_RESET_TAPE_SEL_REG_STAR_E_CH,'1',testName,"3B");
   PS_LOGIC_GATE_C_1 <= '0';
   PS_I_RING_6_OR_1401_AND_8_TIME <= '1';
   wait for 30 ns;
   check1(MC_RESET_TAPE_SEL_REG_STAR_E_CH,'1',testName,"3C");
   PS_LOGIC_GATE_C_1 <= '1';
   wait for 30 ns;
   check1(MC_RESET_TAPE_SEL_REG_STAR_E_CH,'1',testName,"3D");
   
   PS_E_CH_SELECT_TAPE_DATA <= '0';
   MS_E_CH_BUSY <= '1';
   PS_PERCENT_OR_COML_AT <= '1';   
   PS_LOGIC_GATE_C_1 <= '1';
   PS_I_RING_6_OR_1401_AND_8_TIME <= '1';
   wait for 30 ns;
   check1(MC_RESET_TAPE_SEL_REG_STAR_E_CH,'1',testName,"3E");
   PS_E_CH_SELECT_TAPE_DATA <= '1';
   MS_E_CH_BUSY <= '0';
   wait for 30 ns;
   check1(MC_RESET_TAPE_SEL_REG_STAR_E_CH,'1',testName,"3F");
   MS_E_CH_BUSY <= '1';
   PS_PERCENT_OR_COML_AT <= '0';
   wait for 30 ns;
   check1(MC_RESET_TAPE_SEL_REG_STAR_E_CH,'1',testName,"3G");
   PS_PERCENT_OR_COML_AT <= '1';
   PS_LOGIC_GATE_C_1 <= '0';
   wait for 30 ns;
   check1(MC_RESET_TAPE_SEL_REG_STAR_E_CH,'1',testName,"3H");
   PS_LOGIC_GATE_C_1 <= '1';
   PS_I_RING_6_OR_1401_AND_8_TIME <= '0';
   wait for 30 ns;
   check1(MC_RESET_TAPE_SEL_REG_STAR_E_CH,'1',testName,"3I");
   PS_I_RING_6_OR_1401_AND_8_TIME <= '1';
   wait for 30 ns;   
   check1(MC_RESET_TAPE_SEL_REG_STAR_E_CH,'0',testName,"3J");
   PS_E_CH_SELECT_TAPE_DATA <= '0';
   MS_E_CH_BUSY <= '1';
   PS_PERCENT_OR_COML_AT <= '0';
   PS_LOGIC_GATE_C_1 <= '0';
   PS_I_RING_6_OR_1401_AND_8_TIME <= '0';
         
   check1(MC_SET_TAPE_SEL_REG_STAR_E_CH,'1',testName,"4A");
   PS_PERCENT_OR_COML_AT <= '0';
   MS_E_CH_BUSY <= '1';
   PS_E_CH_SELECT_TAPE_DATA <= '1';
   PS_I_RING_6_OR_1401_AND_8_TIME <= '1';
   PS_LAST_LOGIC_GATE_1 <= '1';
   wait for 30 ns;
   check1(MC_SET_TAPE_SEL_REG_STAR_E_CH,'1',testName,"4B");
   PS_PERCENT_OR_COML_AT <= '1';
   MS_E_CH_BUSY <= '0';
   wait for 30 ns;
   check1(MC_SET_TAPE_SEL_REG_STAR_E_CH,'1',testName,"4C");
   MS_E_CH_BUSY <= '1';
   PS_E_CH_SELECT_TAPE_DATA <= '0';
   wait for 30 ns;
   check1(MC_SET_TAPE_SEL_REG_STAR_E_CH,'1',testName,"4E");
   PS_E_CH_SELECT_TAPE_DATA <= '1';
   PS_I_RING_6_OR_1401_AND_8_TIME <= '0';
   wait for 30 ns;
   check1(MC_SET_TAPE_SEL_REG_STAR_E_CH,'1',testName,"4F");
   PS_I_RING_6_OR_1401_AND_8_TIME <= '1';
   PS_LAST_LOGIC_GATE_1 <= '0';
   wait for 30 ns;
   check1(MC_SET_TAPE_SEL_REG_STAR_E_CH,'1',testName,"4H");
   PS_LAST_LOGIC_GATE_1 <= '1';
   wait for 30 ns;
   check1(MC_SET_TAPE_SEL_REG_STAR_E_CH,'0',testName,"4I");
   PS_PERCENT_OR_COML_AT <= '0';
   MS_E_CH_BUSY <= '0';
   PS_E_CH_SELECT_TAPE_data <= '0';
   PS_I_RING_6_OR_1401_AND_8_TIME <= '0';
   PS_LAST_LOGIC_GATE_1 <= '0';
   
   check1(MS_UNIT_CONTROL_INST_RO_DELAY,'1',testName,"5A");
   PS_UNIT_CTRL_OP_CODE <= '0';
   PS_I_RING_HDL_BUS(6) <= '1';
   wait for 90 ns;
   check1(MS_UNIT_CONTROL_INST_RO_DELAY,'1',testName,"5B");
   PS_UNIT_CTRL_OP_CODE <= '1';
   PS_I_RING_HDL_BUS(6) <= '0';
   wait for 90 ns;
   check1(MS_UNIT_CONTROL_INST_RO_DELAY,'1',testName,"5C");
   PS_I_RING_HDL_BUS(6) <= '1';
   wait for 90 ns; -- Trigger SS
   check1(MS_UNIT_CONTROL_INST_RO_DELAY,'0',testName,"5D");
   wait for 26 us; -- Wait for SS to time out
   check1(MS_UNIT_CONTROL_INST_RO_DELAY,'1',testName,"5E");
   PS_UNIT_CTRL_OP_CODE <= '0';
   PS_I_RING_HDL_BUS(6) <= '0';
   
   MC_SELECT_AT_LOAD_POINT_STAR_E_CH <= '0';
   MS_B_SYMBOL_OP_MODIFIER <= '1';
   MS_R_SYMBOL_OP_MODIFIER <= '1';
   PS_UNIT_CTRL_OP_CODE <= '1';
   
   PS_M_OR_L_OP_CODES <= '0';
   PS_I_RING_HDL_BUS(10) <= '1';
   MS_B_SYMBOL_OP_MODIFIER <= '1';
   PS_E_CH_BUSY_BUS <= '1';
   PS_1401_MODE <= '1';
   wait for 30 ns;
   check1(MS_1401_M_OR_L_TAPE_DELAY,'1',testName,"6A");
   PS_M_OR_L_OP_CODES <= '1';
   PS_I_RING_HDL_BUS(10) <= '0';
   wait for 30 ns;
   check1(MS_1401_M_OR_L_TAPE_DELAY,'1',testName,"6B");
   PS_I_RING_HDL_BUS(10) <= '1';
   MS_B_SYMBOL_OP_MODIFIER <= '0'; -- Want 4B E at 0 now
   wait for 30 ns;
   check1(MS_1401_M_OR_L_TAPE_DELAY,'1',testName,"6C");
   MS_B_SYMBOL_OP_MODIFIER <= '1'; -- 4B E Back to 1
   PS_E_CH_BUSY_BUS <= '0';
   wait for 30 ns;
   check1(MS_1401_M_OR_L_TAPE_DELAY,'1',testName,"6D");
   PS_E_CH_BUSY_BUS <= '1';
   PS_1401_MODE <= '0';
   wait for 30 ns;
   check1(MS_1401_M_OR_L_TAPE_DELAY,'1',testName,"6E");
   PS_1401_MODE <= '1';
   wait for 30 ns;
   check1(MS_1401_M_OR_L_TAPE_DELAY,'0',testName,"6F");
   PS_M_OR_L_OP_CODES <= '0';
   PS_I_RING_HDL_BUS(10) <= '0';
   MS_B_SYMBOL_OP_MODIFIER <= '1';
   PS_E_CH_BUSY_BUS <= '0';
   PS_1401_MODE <= '0';
   
      


   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

END;
