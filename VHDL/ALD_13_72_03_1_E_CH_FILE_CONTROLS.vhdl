-- VHDL for IBM SMS ALD page 13.72.03.1
-- Title: E CH FILE CONTROLS
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 11/8/2020 4:56:45 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_13_72_03_1_E_CH_FILE_CONTROLS is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_E_CH_SELECT_UNIT_F:	 in STD_LOGIC;
		PS_E_CH_OUTPUT_MODE:	 in STD_LOGIC;
		PS_E_CH_STATUS_SAMPLE_B_DELAY:	 in STD_LOGIC;
		MS_E_CH_CHECK:	 in STD_LOGIC;
		MS_E_CH_UNIT_NUMBER_4:	 in STD_LOGIC;
		PS_WR_INHIBIT_STAR_7631_STAR_E_CH:	 in STD_LOGIC;
		PS_FILE_OP:	 in STD_LOGIC;
		PS_PERCENT_OR_COML_AT:	 in STD_LOGIC;
		PS_E_CH_UNIT_NUMBER_3:	 in STD_LOGIC;
		MS_E_CH_UNIT_NUMBER_3:	 in STD_LOGIC;
		PS_I_RING_6_TIME:	 in STD_LOGIC;
		PS_LOGIC_GATE_C_1:	 in STD_LOGIC;
		MS_E_CH_CONDITION:	 in STD_LOGIC;
		MS_E_CH_WRONG_LENGTH_RECORD:	 in STD_LOGIC;
		MS_COMPUTER_RESET_1:	 in STD_LOGIC;
		MS_E_CH_END_OF_2ND_ADDR_TRF:	 in STD_LOGIC;
		MS_E_CH_NO_TRANSFER_LATCH:	 in STD_LOGIC;
		MS_E_CH_1ST_ADDR_TRANSFER:	 in STD_LOGIC;
		MS_E_CH_2ND_ADDR_TRF:	 in STD_LOGIC;
		PS_E_CH_NO_TRF_STAR_7631_INHIBIT:	 out STD_LOGIC;
		MC_E_CH_RBCI_RESET_1405:	 out STD_LOGIC;
		MS_E_CH_SELECT_AND_R_B_C_ON:	 out STD_LOGIC;
		MS_E_CH_FILE_ADDR_TRANSFER:	 out STD_LOGIC;
		MS_E_CH_R_DOT_B_DOT_C_DOT_I_DOT_ON:	 out STD_LOGIC;
		LAMP_15A1B14:	 out STD_LOGIC);
end ALD_13_72_03_1_E_CH_FILE_CONTROLS;

architecture behavioral of ALD_13_72_03_1_E_CH_FILE_CONTROLS is 

	signal OUT_3A_C: STD_LOGIC;
	signal OUT_4B_C: STD_LOGIC;
	signal OUT_3B_C: STD_LOGIC;
	signal OUT_2B_P: STD_LOGIC;
	signal OUT_5C_E: STD_LOGIC;
	signal OUT_2C_C: STD_LOGIC;
	signal OUT_5D_P: STD_LOGIC;
	signal OUT_2D_C: STD_LOGIC;
	signal OUT_1D_A: STD_LOGIC;
	signal OUT_4E_C: STD_LOGIC;
	signal OUT_1E_E: STD_LOGIC;
	signal OUT_3F_D: STD_LOGIC;
	signal OUT_3F_D_Latch: STD_LOGIC;
	signal OUT_2F_K: STD_LOGIC;
	signal OUT_2F_K_Latch: STD_LOGIC;
	signal OUT_1F_D: STD_LOGIC;
	signal OUT_4G_P: STD_LOGIC;
	signal OUT_2G_L: STD_LOGIC;
	signal OUT_4H_B: STD_LOGIC;
	signal OUT_2H_E: STD_LOGIC;
	signal OUT_4I_D: STD_LOGIC;
	signal OUT_2I_R: STD_LOGIC;
	signal OUT_DOT_3B: STD_LOGIC;
	signal OUT_DOT_2C: STD_LOGIC;
	signal OUT_DOT_1F: STD_LOGIC;
	signal OUT_DOT_5D: STD_LOGIC;
	signal OUT_DOT_4I: STD_LOGIC;

begin

	OUT_3A_C <= NOT(PS_E_CH_SELECT_UNIT_F AND MS_E_CH_UNIT_NUMBER_3 AND PS_E_CH_OUTPUT_MODE );
	OUT_4B_C <= NOT(PS_WR_INHIBIT_STAR_7631_STAR_E_CH AND OUT_DOT_1F );
	OUT_3B_C <= NOT(PS_E_CH_STATUS_SAMPLE_B_DELAY AND MS_E_CH_UNIT_NUMBER_4 AND MS_E_CH_CHECK );
	OUT_2B_P <= NOT(OUT_DOT_3B );
	OUT_5C_E <= NOT(PS_PERCENT_OR_COML_AT AND PS_FILE_OP AND PS_E_CH_UNIT_NUMBER_3 );
	OUT_2C_C <= NOT(PS_PERCENT_OR_COML_AT AND PS_FILE_OP AND PS_I_RING_6_TIME );
	OUT_5D_P <= NOT(PS_I_RING_6_TIME AND PS_LOGIC_GATE_C_1 );
	OUT_2D_C <= NOT(MS_E_CH_UNIT_NUMBER_3 AND OUT_2G_L );
	OUT_1D_A <= OUT_DOT_2C;
	OUT_4E_C <= NOT(MS_E_CH_CONDITION AND MS_E_CH_WRONG_LENGTH_RECORD AND OUT_DOT_1F );
	OUT_1E_E <= NOT(PS_PERCENT_OR_COML_AT AND MS_E_CH_UNIT_NUMBER_3 AND OUT_2F_K );
	OUT_3F_D_Latch <= NOT(OUT_DOT_5D AND MS_COMPUTER_RESET_1 AND OUT_2F_K );
	OUT_2F_K_Latch <= NOT(OUT_3F_D AND OUT_DOT_3B );
	OUT_1F_D <= NOT MS_E_CH_END_OF_2ND_ADDR_TRF;
	OUT_4G_P <= NOT(MS_E_CH_NO_TRANSFER_LATCH );
	OUT_2G_L <= OUT_3F_D;
	OUT_4H_B <= NOT MS_E_CH_1ST_ADDR_TRANSFER;
	OUT_2H_E <= NOT OUT_2G_L;
	LAMP_15A1B14 <= OUT_2H_E;
	OUT_4I_D <= NOT MS_E_CH_2ND_ADDR_TRF;
	OUT_2I_R <= NOT OUT_DOT_4I;
	OUT_DOT_3B <= OUT_3A_C OR OUT_4B_C OR OUT_3B_C OR OUT_4E_C OR OUT_4G_P;
	OUT_DOT_2C <= OUT_2C_C OR OUT_2D_C;
	OUT_DOT_1F <= OUT_1F_D OR OUT_2I_R;
	OUT_DOT_5D <= OUT_5C_E OR OUT_5D_P;
	OUT_DOT_4I <= OUT_4H_B OR OUT_4I_D;

	PS_E_CH_NO_TRF_STAR_7631_INHIBIT <= OUT_2B_P;
	MC_E_CH_RBCI_RESET_1405 <= OUT_1D_A;
	MS_E_CH_SELECT_AND_R_B_C_ON <= OUT_1E_E;
	MS_E_CH_R_DOT_B_DOT_C_DOT_I_DOT_ON <= OUT_2G_L;
	MS_E_CH_FILE_ADDR_TRANSFER <= OUT_DOT_1F;

	Latch_3F: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3F_D_Latch,
		Q => OUT_3F_D,
		QBar => OPEN );

	Latch_2F: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2F_K_Latch,
		Q => OUT_2F_K,
		QBar => OPEN );


end;
