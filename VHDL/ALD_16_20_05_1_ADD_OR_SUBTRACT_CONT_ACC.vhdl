-- VHDL for IBM SMS ALD page 16.20.05.1
-- Title: ADD OR SUBTRACT CONT-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/2/2020 1:47:59 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_16_20_05_1_ADD_OR_SUBTRACT_CONT_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_1ST_SCAN:	 in STD_LOGIC;
		PS_COMPLEMENT_LATCH:	 in STD_LOGIC;
		PB_ADDER_NO_CARRY:	 in STD_LOGIC;
		PB_ADDER_CARRY:	 in STD_LOGIC;
		PS_A_OR_S_DOT_B_CYCLE:	 in STD_LOGIC;
		PS_UNITS_LATCH:	 in STD_LOGIC;
		PS_1401_MODE_1:	 in STD_LOGIC;
		PB_B_CH_WM_BIT:	 in STD_LOGIC;
		PS_EXTENSION_LATCH:	 in STD_LOGIC;
		PS_BODY_OR_EXTENSION:	 in STD_LOGIC;
		MS_1401_MODE_1:	 in STD_LOGIC;
		PB_B_CH_NOT_WM_BIT:	 in STD_LOGIC;
		PB_COMPLEMENT_LATCH:	 in STD_LOGIC;
		PB_1401_MODE:	 in STD_LOGIC;
		MB_A_OR_S_DOT_B_DOT_1_DOT_S_DOT_BW_DOT_NOT_RC:	 out STD_LOGIC;
		MB_A_OR_S_DOT_B_DOT_1_DOT_S_DOT_BW_DOT_RC:	 out STD_LOGIC;
		MS_A_OR_S_DOT_B_DOT_1_DOT_S_DOT_U_DOT_1401:	 out STD_LOGIC;
		MS_A_OR_S_DOT_B_DOT_1_DOT_S_DOT_X:	 out STD_LOGIC;
		MS_A_OR_S_DOT_B_DOT_Y_OR_X:	 out STD_LOGIC;
		MS_A_OR_S_DOT_B_DOT_Y_OR_X_DOT_NOT_1401:	 out STD_LOGIC;
		MB_A_OR_S_DOT_B_DOT_Y_OR_X_DOT_S_OR_NOT_BW_DOT_1401:	 out STD_LOGIC);
end ALD_16_20_05_1_ADD_OR_SUBTRACT_CONT_ACC;

architecture behavioral of ALD_16_20_05_1_ADD_OR_SUBTRACT_CONT_ACC is 

	signal OUT_4A_C: STD_LOGIC;
	signal OUT_3A_D: STD_LOGIC;
	signal OUT_4B_Q: STD_LOGIC;
	signal OUT_2B_A: STD_LOGIC;
	signal OUT_2C_K: STD_LOGIC;
	signal OUT_2D_E: STD_LOGIC;
	signal OUT_2E_D: STD_LOGIC;
	signal OUT_4F_H: STD_LOGIC;
	signal OUT_3F_A: STD_LOGIC;
	signal OUT_2G_C: STD_LOGIC;
	signal OUT_3H_A: STD_LOGIC;
	signal OUT_2H_D: STD_LOGIC;
	signal OUT_1H_B: STD_LOGIC;
	signal OUT_3I_A: STD_LOGIC;
	signal OUT_2I_E: STD_LOGIC;

begin

	OUT_4A_C <= NOT(PS_1ST_SCAN AND PS_A_OR_S_DOT_B_CYCLE AND PS_COMPLEMENT_LATCH );
	OUT_3A_D <= NOT OUT_4A_C;
	OUT_4B_Q <= NOT OUT_4A_C;
	OUT_2B_A <= NOT(OUT_4B_Q AND PB_B_CH_WM_BIT AND PB_ADDER_NO_CARRY );
	OUT_2C_K <= NOT(OUT_4B_Q AND PB_B_CH_WM_BIT AND PB_ADDER_CARRY );
	OUT_2D_E <= NOT(OUT_3A_D AND PS_UNITS_LATCH AND PS_1401_MODE_1 );
	OUT_2E_D <= NOT(OUT_3A_D AND PS_EXTENSION_LATCH );
	OUT_4F_H <= NOT(PS_A_OR_S_DOT_B_CYCLE AND PS_BODY_OR_EXTENSION );
	OUT_3F_A <= NOT OUT_4F_H;
	OUT_2G_C <= NOT(OUT_3F_A AND MS_1401_MODE_1 );
	OUT_3H_A <= NOT(PB_B_CH_NOT_WM_BIT OR PB_COMPLEMENT_LATCH );
	OUT_2H_D <= NOT OUT_3H_A;
	OUT_1H_B <= NOT(OUT_2H_D AND PB_1401_MODE AND OUT_2I_E );
	OUT_3I_A <= NOT OUT_3F_A;
	OUT_2I_E <= NOT OUT_3I_A;

	MB_A_OR_S_DOT_B_DOT_1_DOT_S_DOT_BW_DOT_NOT_RC <= OUT_2B_A;
	MB_A_OR_S_DOT_B_DOT_1_DOT_S_DOT_BW_DOT_RC <= OUT_2C_K;
	MS_A_OR_S_DOT_B_DOT_1_DOT_S_DOT_U_DOT_1401 <= OUT_2D_E;
	MS_A_OR_S_DOT_B_DOT_1_DOT_S_DOT_X <= OUT_2E_D;
	MS_A_OR_S_DOT_B_DOT_Y_OR_X <= OUT_4F_H;
	MS_A_OR_S_DOT_B_DOT_Y_OR_X_DOT_NOT_1401 <= OUT_2G_C;
	MB_A_OR_S_DOT_B_DOT_Y_OR_X_DOT_S_OR_NOT_BW_DOT_1401 <= OUT_1H_B;


end;
