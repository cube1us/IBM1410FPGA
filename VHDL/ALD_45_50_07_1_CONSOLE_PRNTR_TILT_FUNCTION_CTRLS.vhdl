-- VHDL for IBM SMS ALD page 45.50.07.1
-- Title: CONSOLE PRNTR TILT+FUNCTION CTRLS
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 11/2/2020 3:49:52 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_45_50_07_1_CONSOLE_PRNTR_TILT_FUNCTION_CTRLS is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PP_SPECIAL_OR_12V_FOR_REL_DRIVERS:	 in STD_LOGIC;
		PS_CONS_CHAR_CONTROL:	 in STD_LOGIC;
		MS_CONS_ERROR_CONTROL:	 in STD_LOGIC;
		MS_CONS_WM_CONTROL:	 in STD_LOGIC;
		PS_CONSOLE_OUTPUT_A_BIT:	 in STD_LOGIC;
		PS_SOLENOID_DRIVER_STROBE:	 in STD_LOGIC;
		PS_CONS_BACK_SPACE_CONTROL:	 in STD_LOGIC;
		PS_CONSOLE_OUTPUT_B_BIT:	 in STD_LOGIC;
		PS_CONSOLE_CARRIAGE_RETURN:	 in STD_LOGIC;
		MS_STOP_PGM_RES_CARRIAGE_RETURN:	 in STD_LOGIC;
		PS_CONSOLE_OUTPUT_C_BIT:	 in STD_LOGIC;
		PS_FUNCTION_CONTROL:	 in STD_LOGIC;
		PS_CONSOLE_SPACE_FUNCTION:	 in STD_LOGIC;
		PS_CONSOLE_OUTPUT_8_BIT:	 in STD_LOGIC;
		MS_CONSOLE_OUTPUT_4_BIT:	 in STD_LOGIC;
		MS_CONS_PRINTER_END_OF_LINE:	 in STD_LOGIC;
		PS_CONSOLE_OUTPUT_2_BIT:	 in STD_LOGIC;
		PS_CONSOLE_OUTPUT_1_BIT:	 in STD_LOGIC;
		PS_KEYBOARD_UNLOCK:	 in STD_LOGIC;
		MS_CONSOLE_OUTPUT_A_BIT:	 out STD_LOGIC;
		PW_CONS_PRINTER_T1_SOLENOID:	 out STD_LOGIC;
		PW_CONS_PRINTER_T2_SOLENOID:	 out STD_LOGIC;
		MS_CONSOLE_OUTPUT_B_BIT:	 out STD_LOGIC;
		PW_CONS_PRINTER_CHK_SOLENOID:	 out STD_LOGIC;
		PW_BACKSPACE_SOLENOID:	 out STD_LOGIC;
		MS_CONS_GATED_CARRIAGE_RETURN:	 out STD_LOGIC;
		PW_CARRIAGE_RETURN_SOLENOID:	 out STD_LOGIC;
		PW_SPACE_SOLENOID:	 out STD_LOGIC;
		MS_CONS_OUTPUT_CBA8_421:	 out STD_LOGIC;
		MW_KEYBOARD_LOCK_SOLENOID:	 out STD_LOGIC);
end ALD_45_50_07_1_CONSOLE_PRNTR_TILT_FUNCTION_CTRLS;

architecture behavioral of ALD_45_50_07_1_CONSOLE_PRNTR_TILT_FUNCTION_CTRLS is 

	signal OUT_5A_G: STD_LOGIC;
	signal OUT_4B_NoPin: STD_LOGIC;
	signal OUT_3B_F: STD_LOGIC;
	signal OUT_2B_G: STD_LOGIC;
	signal OUT_1B_B: STD_LOGIC;
	signal OUT_5C_C: STD_LOGIC;
	signal OUT_4C_NoPin: STD_LOGIC;
	signal OUT_3C_G: STD_LOGIC;
	signal OUT_2C_C: STD_LOGIC;
	signal OUT_1C_G: STD_LOGIC;
	signal OUT_3D_C: STD_LOGIC;
	signal OUT_2D_G: STD_LOGIC;
	signal OUT_1D_A: STD_LOGIC;
	signal OUT_4E_NoPin: STD_LOGIC;
	signal OUT_3E_G: STD_LOGIC;
	signal OUT_2E_C: STD_LOGIC;
	signal OUT_1E_C: STD_LOGIC;
	signal OUT_4F_C: STD_LOGIC;
	signal OUT_3F_P: STD_LOGIC;
	signal OUT_2F_K: STD_LOGIC;
	signal OUT_1F_B: STD_LOGIC;
	signal OUT_5G_D: STD_LOGIC;
	signal OUT_2G_C: STD_LOGIC;
	signal OUT_1G_G: STD_LOGIC;
	signal OUT_5H_D: STD_LOGIC;
	signal OUT_2H_C: STD_LOGIC;
	signal OUT_5I_K: STD_LOGIC;
	signal OUT_2I_P: STD_LOGIC;
	signal OUT_1I_A: STD_LOGIC;
	signal OUT_DOT_5G: STD_LOGIC;
	signal OUT_DOT_2G: STD_LOGIC;

begin

	OUT_5A_G <= NOT(PS_CONSOLE_OUTPUT_A_BIT );
	OUT_4B_NoPin <= NOT(OUT_5A_G AND PS_CONS_CHAR_CONTROL );
	OUT_3B_F <= NOT(OUT_4B_NoPin AND MS_CONS_ERROR_CONTROL );
	OUT_2B_G <= NOT(OUT_3B_F AND PS_SOLENOID_DRIVER_STROBE );
	OUT_1B_B <= NOT(OUT_2B_G AND PP_SPECIAL_OR_12V_FOR_REL_DRIVERS );
	OUT_5C_C <= NOT(PS_CONSOLE_OUTPUT_B_BIT );
	OUT_4C_NoPin <= NOT(OUT_5C_C AND PS_CONS_CHAR_CONTROL );
	OUT_3C_G <= NOT(OUT_4C_NoPin AND MS_CONS_ERROR_CONTROL );
	OUT_2C_C <= NOT(OUT_3C_G AND PS_SOLENOID_DRIVER_STROBE );
	OUT_1C_G <= NOT(OUT_2C_C AND PP_SPECIAL_OR_12V_FOR_REL_DRIVERS );
	OUT_3D_C <= NOT(OUT_3E_G AND MS_CONS_WM_CONTROL AND MS_CONS_ERROR_CONTROL );
	OUT_2D_G <= NOT(OUT_3D_C AND PS_SOLENOID_DRIVER_STROBE );
	OUT_1D_A <= NOT(OUT_2D_G AND PP_SPECIAL_OR_12V_FOR_REL_DRIVERS );
	OUT_4E_NoPin <= NOT(PS_CONSOLE_OUTPUT_C_BIT AND OUT_DOT_5G );
	OUT_3E_G <= NOT(OUT_4E_NoPin AND PS_CONS_CHAR_CONTROL );
	OUT_2E_C <= NOT(PS_SOLENOID_DRIVER_STROBE AND PS_CONS_BACK_SPACE_CONTROL );
	OUT_1E_C <= NOT(OUT_2E_C AND PP_SPECIAL_OR_12V_FOR_REL_DRIVERS );
	OUT_4F_C <= NOT(PS_CONSOLE_CARRIAGE_RETURN AND PS_SOLENOID_DRIVER_STROBE );
	OUT_3F_P <= NOT(OUT_4F_C AND MS_STOP_PGM_RES_CARRIAGE_RETURN );
	OUT_2F_K <= NOT(OUT_3F_P );
	OUT_1F_B <= NOT(OUT_2F_K AND PP_SPECIAL_OR_12V_FOR_REL_DRIVERS );
	OUT_5G_D <= NOT(PS_CONSOLE_OUTPUT_C_BIT AND PS_CONSOLE_OUTPUT_B_BIT );
	OUT_2G_C <= NOT(PS_SOLENOID_DRIVER_STROBE AND PS_FUNCTION_CONTROL AND PS_CONSOLE_SPACE_FUNCTION );
	OUT_1G_G <= NOT(OUT_DOT_2G AND PP_SPECIAL_OR_12V_FOR_REL_DRIVERS );
	OUT_5H_D <= NOT(PS_CONSOLE_OUTPUT_A_BIT AND PS_CONSOLE_OUTPUT_8_BIT AND MS_CONSOLE_OUTPUT_4_BIT );
	OUT_2H_C <= NOT(MS_CONS_PRINTER_END_OF_LINE );
	OUT_5I_K <= NOT(PS_CONSOLE_OUTPUT_2_BIT AND PS_CONSOLE_OUTPUT_1_BIT );
	OUT_2I_P <= NOT(PS_KEYBOARD_UNLOCK );
	OUT_1I_A <= NOT(OUT_2I_P AND PP_SPECIAL_OR_12V_FOR_REL_DRIVERS );
	OUT_DOT_5G <= OUT_5G_D OR OUT_5H_D OR OUT_5I_K;
	OUT_DOT_2G <= OUT_2G_C OR OUT_2H_C;

	MS_CONSOLE_OUTPUT_A_BIT <= OUT_5A_G;
	PW_CONS_PRINTER_T1_SOLENOID <= OUT_1B_B;
	MS_CONSOLE_OUTPUT_B_BIT <= OUT_5C_C;
	PW_CONS_PRINTER_T2_SOLENOID <= OUT_1C_G;
	PW_CONS_PRINTER_CHK_SOLENOID <= OUT_1D_A;
	PW_BACKSPACE_SOLENOID <= OUT_1E_C;
	MS_CONS_GATED_CARRIAGE_RETURN <= OUT_4F_C;
	PW_CARRIAGE_RETURN_SOLENOID <= OUT_1F_B;
	PW_SPACE_SOLENOID <= OUT_1G_G;
	MW_KEYBOARD_LOCK_SOLENOID <= OUT_1I_A;
	MS_CONS_OUTPUT_CBA8_421 <= OUT_DOT_5G;


end;
