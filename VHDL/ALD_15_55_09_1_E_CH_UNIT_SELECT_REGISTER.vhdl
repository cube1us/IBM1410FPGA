-- VHDL for IBM SMS ALD page 15.55.09.1
-- Title: E CH UNIT SELECT REGISTER
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 9/17/2020 10:24:23 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_15_55_09_1_E_CH_UNIT_SELECT_REGISTER is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_1401_PUNCH:	 in STD_LOGIC;
		MS_TEST_PUNCH_ERROR:	 in STD_LOGIC;
		PS_ASSEMBLY_CH_4_BIT:	 in STD_LOGIC;
		MS_E_CH_RESET:	 in STD_LOGIC;
		MS_1401_PRINT:	 in STD_LOGIC;
		MS_TEST_PRINT_ERROR:	 in STD_LOGIC;
		PS_ASSEMBLY_CH_2_BIT:	 in STD_LOGIC;
		PS_E_CH_FORMS_CTRL_OP_CODE:	 in STD_LOGIC;
		PS_I_RING_1_OR_1401_AND_3_TIME:	 in STD_LOGIC;
		PS_LOGIC_GATE_D_1:	 in STD_LOGIC;
		PS_ASSEMBLY_CH_1_BIT:	 in STD_LOGIC;
		MS_1401_READ:	 in STD_LOGIC;
		MS_TEST_READ_E_OR_F:	 in STD_LOGIC;
		PS_E_CH_STACKER_SEL_OP_CODE:	 in STD_LOGIC;
		PS_PERCENT_OR_COML_AT:	 in STD_LOGIC;
		PS_I_RING_4_TIME:	 in STD_LOGIC;
		PS_LAST_LOGIC_GATE_1:	 in STD_LOGIC;
		PS_E_CH_U_SEL_REG_NOT_4_BIT:	 out STD_LOGIC;
		PS_E_CH_U_SEL_REG_4_BIT:	 out STD_LOGIC;
		PS_E_CH_U_SEL_REG_NOT_2_BIT:	 out STD_LOGIC;
		PS_E_CH_U_SEL_REG_2_BIT:	 out STD_LOGIC;
		PS_E_CH_U_SEL_REG_NOT_1_BIT:	 out STD_LOGIC;
		MS_E_CH_FORMS_CTRL_OP_CODE_JRJ:	 out STD_LOGIC;
		PS_E_CH_U_SEL_REG_1_BIT:	 out STD_LOGIC;
		MS_E_CH_STACK_SEL_OP_CODE:	 out STD_LOGIC;
		PS_SET_E_CH_UNIT_SEL_REG:	 out STD_LOGIC);
end ALD_15_55_09_1_E_CH_UNIT_SELECT_REGISTER;

architecture behavioral of ALD_15_55_09_1_E_CH_UNIT_SELECT_REGISTER is 

	signal OUT_4A_NoPin: STD_LOGIC;
	signal OUT_4A_NoPin_Latch: STD_LOGIC;
	signal OUT_3A_P: STD_LOGIC;
	signal OUT_3A_P_Latch: STD_LOGIC;
	signal OUT_1A_C: STD_LOGIC;
	signal OUT_5B_R: STD_LOGIC;
	signal OUT_3B_G: STD_LOGIC;
	signal OUT_1B_B: STD_LOGIC;
	signal OUT_4C_NoPin: STD_LOGIC;
	signal OUT_4C_NoPin_Latch: STD_LOGIC;
	signal OUT_3C_P: STD_LOGIC;
	signal OUT_3C_P_Latch: STD_LOGIC;
	signal OUT_1C_C: STD_LOGIC;
	signal OUT_5D_C: STD_LOGIC;
	signal OUT_3D_C: STD_LOGIC;
	signal OUT_1D_B: STD_LOGIC;
	signal OUT_5E_D: STD_LOGIC;
	signal OUT_4E_NoPin: STD_LOGIC;
	signal OUT_4E_NoPin_Latch: STD_LOGIC;
	signal OUT_3E_P: STD_LOGIC;
	signal OUT_3E_P_Latch: STD_LOGIC;
	signal OUT_1E_C: STD_LOGIC;
	signal OUT_5F_R: STD_LOGIC;
	signal OUT_3F_K: STD_LOGIC;
	signal OUT_1F_B: STD_LOGIC;
	signal OUT_5G_E: STD_LOGIC;
	signal OUT_5I_E: STD_LOGIC;
	signal OUT_4I_B: STD_LOGIC;
	signal OUT_DOT_3A: STD_LOGIC;
	signal OUT_DOT_3C: STD_LOGIC;
	signal OUT_DOT_3E: STD_LOGIC;

begin

	OUT_4A_NoPin_Latch <= NOT(OUT_DOT_3A AND MS_E_CH_RESET );
	OUT_3A_P_Latch <= NOT(OUT_4A_NoPin AND OUT_5B_R );
	OUT_1A_C <= NOT OUT_DOT_3A;
	OUT_5B_R <= NOT(PS_ASSEMBLY_CH_4_BIT AND OUT_4I_B );
	OUT_3B_G <= NOT(MS_1401_PUNCH AND MS_TEST_PUNCH_ERROR );
	OUT_1B_B <= NOT OUT_4A_NoPin;
	OUT_4C_NoPin_Latch <= NOT(OUT_DOT_3C AND MS_E_CH_RESET );
	OUT_3C_P_Latch <= NOT(OUT_4C_NoPin AND OUT_5E_D AND OUT_5D_C );
	OUT_1C_C <= NOT OUT_DOT_3C;
	OUT_5D_C <= NOT(PS_ASSEMBLY_CH_2_BIT AND OUT_4I_B );
	OUT_3D_C <= NOT(MS_1401_PRINT AND MS_TEST_PRINT_ERROR );
	OUT_1D_B <= NOT OUT_4C_NoPin;
	OUT_5E_D <= NOT(PS_E_CH_FORMS_CTRL_OP_CODE AND PS_I_RING_1_OR_1401_AND_3_TIME AND PS_LOGIC_GATE_D_1 );
	OUT_4E_NoPin_Latch <= NOT(OUT_DOT_3E AND MS_E_CH_RESET );
	OUT_3E_P_Latch <= NOT(OUT_4E_NoPin AND OUT_5G_E AND OUT_5F_R );
	OUT_1E_C <= NOT OUT_DOT_3E;
	OUT_5F_R <= NOT(PS_ASSEMBLY_CH_1_BIT AND OUT_4I_B );
	OUT_3F_K <= NOT(MS_1401_READ AND MS_TEST_READ_E_OR_F );
	OUT_1F_B <= NOT OUT_4E_NoPin;
	OUT_5G_E <= NOT(PS_LOGIC_GATE_D_1 AND PS_I_RING_1_OR_1401_AND_3_TIME AND PS_E_CH_STACKER_SEL_OP_CODE );
	OUT_5I_E <= NOT(PS_PERCENT_OR_COML_AT AND PS_I_RING_4_TIME AND PS_LAST_LOGIC_GATE_1 );
	OUT_4I_B <= NOT OUT_5I_E;
	OUT_DOT_3A <= OUT_3A_P OR OUT_3B_G;
	OUT_DOT_3C <= OUT_3C_P OR OUT_3D_C;
	OUT_DOT_3E <= OUT_3E_P OR OUT_3F_K;

	PS_E_CH_U_SEL_REG_NOT_4_BIT <= OUT_1A_C;
	PS_E_CH_U_SEL_REG_4_BIT <= OUT_1B_B;
	PS_E_CH_U_SEL_REG_NOT_2_BIT <= OUT_1C_C;
	PS_E_CH_U_SEL_REG_2_BIT <= OUT_1D_B;
	MS_E_CH_FORMS_CTRL_OP_CODE_JRJ <= OUT_5E_D;
	PS_E_CH_U_SEL_REG_NOT_1_BIT <= OUT_1E_C;
	PS_E_CH_U_SEL_REG_1_BIT <= OUT_1F_B;
	MS_E_CH_STACK_SEL_OP_CODE <= OUT_5G_E;
	PS_SET_E_CH_UNIT_SEL_REG <= OUT_4I_B;

	Latch_4A: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4A_NoPin_Latch,
		Q => OUT_4A_NoPin,
		QBar => OPEN );

	Latch_3A: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3A_P_Latch,
		Q => OUT_3A_P,
		QBar => OPEN );

	Latch_4C: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4C_NoPin_Latch,
		Q => OUT_4C_NoPin,
		QBar => OPEN );

	Latch_3C: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3C_P_Latch,
		Q => OUT_3C_P,
		QBar => OPEN );

	Latch_4E: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4E_NoPin_Latch,
		Q => OUT_4E_NoPin,
		QBar => OPEN );

	Latch_3E: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3E_P_Latch,
		Q => OUT_3E_P,
		QBar => OPEN );


end;
