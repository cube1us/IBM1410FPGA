-- Test Bench VHDL for IBM SMS ALD page 14.18.04.1
-- Title: ZONE ADDER 16K-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 11/7/2020 8:56:00 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_14_18_04_1_ZONE_ADDER_16K_ACC_tb is
end ALD_14_18_04_1_ZONE_ADDER_16K_ACC_tb;

architecture behavioral of ALD_14_18_04_1_ZONE_ADDER_16K_ACC_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_14_18_04_1_ZONE_ADDER_16K_ACC
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_ZONE_ADDER_A_A_DOT_B_A:	 in STD_LOGIC;
		PS_ZONE_ADDER_B_BITS_EVEN:	 in STD_LOGIC;
		PS_ZONE_ADDER_TWO_BIT:	 out STD_LOGIC;
		PS_ZONE_ADDER_NOT_TWO_BIT:	 out STD_LOGIC;
		PS_A_NOT_A_DOT_B_A_DOT_B_BITS_EVEN:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal MS_ZONE_ADDER_A_A_DOT_B_A: STD_LOGIC := '1';
	signal PS_ZONE_ADDER_B_BITS_EVEN: STD_LOGIC := '0';

	-- Outputs

	signal PS_ZONE_ADDER_TWO_BIT: STD_LOGIC;
	signal PS_ZONE_ADDER_NOT_TWO_BIT: STD_LOGIC;
	signal PS_A_NOT_A_DOT_B_A_DOT_B_BITS_EVEN: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_14_18_04_1_ZONE_ADDER_16K_ACC port map(
		FPGA_CLK => FPGA_CLK,
		MS_ZONE_ADDER_A_A_DOT_B_A => MS_ZONE_ADDER_A_A_DOT_B_A,
		PS_ZONE_ADDER_B_BITS_EVEN => PS_ZONE_ADDER_B_BITS_EVEN,
		PS_ZONE_ADDER_TWO_BIT => PS_ZONE_ADDER_TWO_BIT,
		PS_ZONE_ADDER_NOT_TWO_BIT => PS_ZONE_ADDER_NOT_TWO_BIT,
		PS_A_NOT_A_DOT_B_A_DOT_B_BITS_EVEN => PS_A_NOT_A_DOT_B_A_DOT_B_BITS_EVEN);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code
   
   testName := "14.18.04.1        ";
   
   MS_ZONE_ADDER_A_A_DOT_B_A <= '1';
   PS_ZONE_ADDER_B_BITS_EVEN <= '0';  
   wait for 30 ns;
   check1(PS_ZONE_ADDER_TWO_BIT,'1',testName,"1A"); 
   check1(PS_ZONE_ADDER_NOT_TWO_BIT,'0',testName,"1B");
   check1(PS_A_NOT_A_DOT_B_A_DOT_B_BITS_EVEN,'0',testName,"1C");

   MS_ZONE_ADDER_A_A_DOT_B_A <= '0';
   PS_ZONE_ADDER_B_BITS_EVEN <= '0';  
   wait for 30 ns;
   check1(PS_ZONE_ADDER_TWO_BIT,'0',testName,"2A"); 
   check1(PS_ZONE_ADDER_NOT_TWO_BIT,'1',testName,"2B");
   check1(PS_A_NOT_A_DOT_B_A_DOT_B_BITS_EVEN,'1',testName,"2C");

   MS_ZONE_ADDER_A_A_DOT_B_A <= '1';
   PS_ZONE_ADDER_B_BITS_EVEN <= '1';  
   wait for 30 ns;
   check1(PS_ZONE_ADDER_TWO_BIT,'0',testName,"3A"); 
   check1(PS_ZONE_ADDER_NOT_TWO_BIT,'1',testName,"3B");
   check1(PS_A_NOT_A_DOT_B_A_DOT_B_BITS_EVEN,'0',testName,"3C");

   MS_ZONE_ADDER_A_A_DOT_B_A <= '0';
   PS_ZONE_ADDER_B_BITS_EVEN <= '1';  
   wait for 30 ns;
   check1(PS_ZONE_ADDER_TWO_BIT,'1',testName,"4A"); 
   check1(PS_ZONE_ADDER_NOT_TWO_BIT,'0',testName,"4B");
   check1(PS_A_NOT_A_DOT_B_A_DOT_B_BITS_EVEN,'0',testName,"4C");


   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS

end;
