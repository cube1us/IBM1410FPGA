-- Test BenchVHDL for IBM SMS ALD group AChannelDataControl
-- Title: AChannelDataControl
-- IBM Machine Name 1411
-- Generated by GenerateHDL on 9/9/2020 9:43:01 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity AChannelDataControl_tb is
end AChannelDataControl_tb;

architecture behavioral of AChannelDataControl_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component AChannelDataControl
	    Port (
		FPGA_CLK: in STD_LOGIC;
		PS_A_CYCLE: in STD_LOGIC;
		PS_B_CYCLE_1: in STD_LOGIC;
		MS_I_CYCLE_DOT_NOT_CR_DISABLE: in STD_LOGIC;
		MS_X_CYCLE_DOT_NOT_CR_DISABLE: in STD_LOGIC;
		MS_C_CYCLE_DOT_NOT_CR_DISABLE: in STD_LOGIC;
		MS_D_CYCLE_DOT_NOT_CR_DISABLE: in STD_LOGIC;
		PS_CONTROL_REG_DISABLE: in STD_LOGIC;
		MS_CONTROL_REG_DISABLE: in STD_LOGIC;
		MS_1401_STORE_AR_OP_CODES: in STD_LOGIC;
		PS_1401_STORE_AR_OP_CODES: in STD_LOGIC;
		PS_A_REG_TO_A_CH_ON_B_CY_OPS: in STD_LOGIC;
		PS_OP_MOD_TO_A_CH_ON_B_CY_OPS: in STD_LOGIC;
		MS_OUTPUT_CYCLE: in STD_LOGIC;
		MS_INTERRUPT_DOT_B_CYCLE: in STD_LOGIC;
		MS_GATE_CONSOLE_TO_ASSEMBLY: in STD_LOGIC;
		PS_E_CYCLE: in STD_LOGIC;
		PS_E_CH_INPUT_MODE: in STD_LOGIC;
		PS_F_CYCLE: in STD_LOGIC;
		PS_F_CH_INPUT_MODE: in STD_LOGIC;
		PS_GATE_A_DATA_REG_TO_A_CH: out STD_LOGIC;
		PS_GATE_OP_MOD_REG_TO_A_CH: out STD_LOGIC;
		PS_GATE_E2_DATA_REG_TO_A_CH: out STD_LOGIC;
		PS_GATE_F2_DATA_REG_TO_A_CH: out STD_LOGIC;
		LAMP_11C8C14: out STD_LOGIC;
		LAMP_11C8D14: out STD_LOGIC;
		LAMP_11C8E14: out STD_LOGIC;
		LAMP_11C8F14: out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_A_CYCLE: STD_LOGIC := '0';
	signal PS_B_CYCLE_1: STD_LOGIC := '0';
	signal MS_I_CYCLE_DOT_NOT_CR_DISABLE: STD_LOGIC := '1';
	signal MS_X_CYCLE_DOT_NOT_CR_DISABLE: STD_LOGIC := '1';
	signal MS_C_CYCLE_DOT_NOT_CR_DISABLE: STD_LOGIC := '1';
	signal MS_D_CYCLE_DOT_NOT_CR_DISABLE: STD_LOGIC := '1';
	signal PS_CONTROL_REG_DISABLE: STD_LOGIC := '0';
	signal MS_CONTROL_REG_DISABLE: STD_LOGIC := '1';
	signal MS_1401_STORE_AR_OP_CODES: STD_LOGIC := '1';
	signal PS_1401_STORE_AR_OP_CODES: STD_LOGIC := '0';
	signal PS_A_REG_TO_A_CH_ON_B_CY_OPS: STD_LOGIC := '0';
	signal PS_OP_MOD_TO_A_CH_ON_B_CY_OPS: STD_LOGIC := '0';
	signal MS_OUTPUT_CYCLE: STD_LOGIC := '1';
	signal MS_INTERRUPT_DOT_B_CYCLE: STD_LOGIC := '1';
	signal MS_GATE_CONSOLE_TO_ASSEMBLY: STD_LOGIC := '1';
	signal PS_E_CYCLE: STD_LOGIC := '0';
	signal PS_E_CH_INPUT_MODE: STD_LOGIC := '0';
	signal PS_F_CYCLE: STD_LOGIC := '0';
	signal PS_F_CH_INPUT_MODE: STD_LOGIC := '0';

	-- Outputs

	signal PS_GATE_A_DATA_REG_TO_A_CH: STD_LOGIC;
	signal PS_GATE_OP_MOD_REG_TO_A_CH: STD_LOGIC;
	signal PS_GATE_E2_DATA_REG_TO_A_CH: STD_LOGIC;
	signal PS_GATE_F2_DATA_REG_TO_A_CH: STD_LOGIC;
	signal LAMP_11C8C14: STD_LOGIC;
	signal LAMP_11C8D14: STD_LOGIC;
	signal LAMP_11C8E14: STD_LOGIC;
	signal LAMP_11C8F14: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

   constant MX_X1A_POS: integer := 7;
   constant MX_X6A_POS: integer := 8;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: AChannelDataControl port map(
		FPGA_CLK => FPGA_CLK,
		PS_A_CYCLE => PS_A_CYCLE,
		PS_B_CYCLE_1 => PS_B_CYCLE_1,
		MS_I_CYCLE_DOT_NOT_CR_DISABLE => MS_I_CYCLE_DOT_NOT_CR_DISABLE,
		MS_X_CYCLE_DOT_NOT_CR_DISABLE => MS_X_CYCLE_DOT_NOT_CR_DISABLE,
		MS_C_CYCLE_DOT_NOT_CR_DISABLE => MS_C_CYCLE_DOT_NOT_CR_DISABLE,
		MS_D_CYCLE_DOT_NOT_CR_DISABLE => MS_D_CYCLE_DOT_NOT_CR_DISABLE,
		PS_CONTROL_REG_DISABLE => PS_CONTROL_REG_DISABLE,
		MS_CONTROL_REG_DISABLE => MS_CONTROL_REG_DISABLE,
		MS_1401_STORE_AR_OP_CODES => MS_1401_STORE_AR_OP_CODES,
		PS_1401_STORE_AR_OP_CODES => PS_1401_STORE_AR_OP_CODES,
		PS_A_REG_TO_A_CH_ON_B_CY_OPS => PS_A_REG_TO_A_CH_ON_B_CY_OPS,
		PS_OP_MOD_TO_A_CH_ON_B_CY_OPS => PS_OP_MOD_TO_A_CH_ON_B_CY_OPS,
		MS_OUTPUT_CYCLE => MS_OUTPUT_CYCLE,
		MS_INTERRUPT_DOT_B_CYCLE => MS_INTERRUPT_DOT_B_CYCLE,
		MS_GATE_CONSOLE_TO_ASSEMBLY => MS_GATE_CONSOLE_TO_ASSEMBLY,
		PS_E_CYCLE => PS_E_CYCLE,
		PS_E_CH_INPUT_MODE => PS_E_CH_INPUT_MODE,
		PS_F_CYCLE => PS_F_CYCLE,
		PS_F_CH_INPUT_MODE => PS_F_CH_INPUT_MODE,
		PS_GATE_A_DATA_REG_TO_A_CH => PS_GATE_A_DATA_REG_TO_A_CH,
		PS_GATE_OP_MOD_REG_TO_A_CH => PS_GATE_OP_MOD_REG_TO_A_CH,
		PS_GATE_E2_DATA_REG_TO_A_CH => PS_GATE_E2_DATA_REG_TO_A_CH,
		PS_GATE_F2_DATA_REG_TO_A_CH => PS_GATE_F2_DATA_REG_TO_A_CH,
		LAMP_11C8C14 => LAMP_11C8C14,
		LAMP_11C8D14 => LAMP_11C8D14,
		LAMP_11C8E14 => LAMP_11C8E14,
		LAMP_11C8F14 => LAMP_11C8F14);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

--fpga_clk_process: process

--   constant clk_period : time := 10 ns;

--   begin
--      fpga_clk <= '0';
--      wait for clk_period / 2;
--      fpga_clk <= '1';
--      wait for clk_period / 2;
--   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;
   variable tv: std_logic_vector(15 downto 0);
   variable a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p: std_logic;
   variable g1, g2, g3, g4, g5, g6: std_logic;

   begin

   -- Your test bench code
   testName := "15.38.02.1        ";
   
   for tt in 0 to 32768 loop
      tv := std_logic_vector(to_unsigned(tt,tv'Length));
      a := tv(0); 
      b := tv(1);
      c := tv(2);
      d := tv(3);
      e := tv(4);
      f := tv(5);
      g := tv(6);
      h := tv(7);
      i := tv(8);
      j := tv(9);
      k := tv(10);
      l := tv(11);
      m := tv(12);
      n := tv(13);
      o := tv(14);
      
      MS_I_CYCLE_DOT_NOT_CR_DISABLE <= not a;
		MS_C_CYCLE_DOT_NOT_CR_DISABLE <= not b;
      MS_D_CYCLE_DOT_NOT_CR_DISABLE <= not c;
      MS_X_CYCLE_DOT_NOT_CR_DISABLE <= not d;
      MS_OUTPUT_CYCLE <= not e;
      PS_B_CYCLE_1 <= f;
      PS_A_REG_TO_A_CH_ON_B_CY_OPS <= g;
      PS_1401_STORE_AR_OP_CODES <= h;
      PS_A_CYCLE <= i;
      MS_INTERRUPT_DOT_B_CYCLE <= not j;
      PS_CONTROL_REG_DISABLE <= k;
      MS_GATE_CONSOLE_TO_ASSEMBLY <= not l;
      MS_1401_STORE_AR_OP_CODES <= not m;
      MS_CONTROL_REG_DISABLE <= not n;
      PS_OP_MOD_TO_A_CH_ON_B_CY_OPS <= o;
            
      wait for 30 ns;
      
      check1(PS_GATE_A_DATA_REG_TO_A_CH,
         a or b or c or d or e or j or (f and g) or (i and h) or (k and not l),
         testName,"Gate A Reg to A Ch");
      check1(LAMP_11C8C14,PS_GATE_A_DATA_REG_TO_A_CH,testName,"LAMP CH Sel A");
                  
      check1(PS_GATE_OP_MOD_REG_TO_A_CH,(o and f) or (not m and not n and i),testName,
         "Gate Op Mod Reg to A Ch");
      check1(LAMP_11C8D14,PS_GATE_OP_MOD_REG_TO_A_CH,testName,"LAMP CH Sel D");        
                        
   end loop;

   testName := "15.38.02.1        ";
   
   for tt in 0 to 16 loop
      tv := std_logic_vector(to_unsigned(tt,tv'Length));
      a := tv(0); 
      b := tv(1);
      c := tv(2);
      d := tv(3);
            
      MS_GATE_CONSOLE_TO_ASSEMBLY <= not a;
      PS_E_CH_INPUT_MODE <= b;
      MS_CONTROL_REG_DISABLE <= not c;
      PS_E_CYCLE <= d;
                        
      wait for 30 ns;
      
      check1(PS_GATE_E2_DATA_REG_TO_A_CH,a or (b and not c and d),testName,
         "Gate E2 to A CH");
      check1(LAMP_11C8E14,PS_GATE_E2_DATA_REG_TO_A_CH,testName,"E CH SEL");
                              
   end loop;

   testName := "15.38.02.1        ";
   
   for tt in 0 to 8 loop
      tv := std_logic_vector(to_unsigned(tt,tv'Length));
      a := tv(0); 
      b := tv(1);
      c := tv(2);
            
      PS_F_CH_INPUT_MODE <= b;
      MS_CONTROL_REG_DISABLE <= not c;
      PS_F_CYCLE <= A;
                        
      wait for 30 ns;
      
      check1(PS_GATE_F2_DATA_REG_TO_A_CH,b and not c and a,testName,
         "Gate F2 to A CH");
      check1(LAMP_11C8F14,PS_GATE_F2_DATA_REG_TO_A_CH,testName,"F CH SEL");
                              
   end loop;


   assert false report "Simulation Ended NORMALLY" severity failure;

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 2 ms;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY (TIMEOUT)" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

END;
