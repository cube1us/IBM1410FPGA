-- VHDL for IBM SMS ALD page 12.12.23.1
-- Title: I AND X CYCLE CTRL LATCHES-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 5/13/2022 1:46:31 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_12_12_23_1_I_AND_X_CYCLE_CTRL_LATCHES_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_LAST_EXECUTE_CYCLE:	 in STD_LOGIC;
		PS_NEXT_TO_AND_LAST_LOGIC_GATE:	 in STD_LOGIC;
		MS_ANY_CHECK_TEST:	 in STD_LOGIC;
		MS_CONS_RESET_START_CONDITION:	 in STD_LOGIC;
		PS_SET_I_CYCLE_CTRL:	 in STD_LOGIC;
		PS_NOT_INTR_START:	 in STD_LOGIC;
		PS_STORAGE_SCAN_ROUTINE:	 in STD_LOGIC;
		PS_CONS_PRINTER_STROBE:	 in STD_LOGIC;
		MS_CONSOLE_SET_START_CND:	 in STD_LOGIC;
		MS_LOGIC_GATE_D_1:	 in STD_LOGIC;
		PS_LOGIC_GATE_Z:	 in STD_LOGIC;
		PS_I_O_LAST_EX_CYCLE:	 in STD_LOGIC;
		PS_PROCESS_ROUTINE:	 in STD_LOGIC;
		MS_PROGRAM_RESET_1:	 in STD_LOGIC;
		PS_NEXT_TO_LAST_LOGIC_GATE:	 in STD_LOGIC;
		PS_SET_X_CYCLE_CTRL:	 in STD_LOGIC;
		PS_I_CYCLE_CTRL:	 out STD_LOGIC;
		MS_LAST_EX_DOT_NEXT_TO_LAST:	 out STD_LOGIC;
		MS_I_CYCLE_CTRL:	 out STD_LOGIC;
		PS_X_CYCLE_CTRL:	 out STD_LOGIC;
		MS_I_O_LAST_EX_DOT_Z:	 out STD_LOGIC;
		MS_X_CYCLE_CTRL:	 out STD_LOGIC);
end ALD_12_12_23_1_I_AND_X_CYCLE_CTRL_LATCHES_ACC;

architecture behavioral of ALD_12_12_23_1_I_AND_X_CYCLE_CTRL_LATCHES_ACC is 

	signal OUT_4A_C: STD_LOGIC;
	signal OUT_3A_P: STD_LOGIC;
	signal OUT_2A_B: STD_LOGIC;
	signal OUT_1A_C: STD_LOGIC;
	signal OUT_4B_NoPin: STD_LOGIC;
	signal OUT_4B_NoPin_Latch: STD_LOGIC;
	signal OUT_3B_P: STD_LOGIC;
	signal OUT_3B_P_Latch: STD_LOGIC;
	signal OUT_4C_C: STD_LOGIC;
	signal OUT_2C_C: STD_LOGIC;
	signal OUT_2C_C_Latch: STD_LOGIC;
	signal OUT_5D_C: STD_LOGIC;
	signal OUT_3D_C: STD_LOGIC;
	signal OUT_4F_D: STD_LOGIC;
	signal OUT_2F_D: STD_LOGIC;
	signal OUT_4G_F: STD_LOGIC;
	signal OUT_4G_F_Latch: STD_LOGIC;
	signal OUT_3G_NoPin: STD_LOGIC;
	signal OUT_3G_NoPin_Latch: STD_LOGIC;
	signal OUT_4H_P: STD_LOGIC;
	signal OUT_2H_E: STD_LOGIC;
	signal OUT_DOT_3B: STD_LOGIC;

begin

	OUT_4A_C <= NOT(PS_LAST_EXECUTE_CYCLE AND PS_PROCESS_ROUTINE AND PS_NEXT_TO_AND_LAST_LOGIC_GATE );
	OUT_3A_P <= NOT(OUT_4A_C AND MS_ANY_CHECK_TEST );
	OUT_2A_B <= NOT OUT_4B_NoPin;
	OUT_1A_C <= OUT_2A_B;
	OUT_4B_NoPin_Latch <= NOT(OUT_DOT_3B AND MS_CONS_RESET_START_CONDITION AND MS_LOGIC_GATE_D_1 );
	OUT_3B_P_Latch <= NOT(OUT_4B_NoPin AND OUT_4C_C AND MS_PROGRAM_RESET_1 );
	OUT_4C_C <= NOT(PS_SET_I_CYCLE_CTRL AND PS_NEXT_TO_LAST_LOGIC_GATE AND PS_NOT_INTR_START );
	OUT_2C_C_Latch <= NOT OUT_DOT_3B;
	OUT_5D_C <= NOT(PS_STORAGE_SCAN_ROUTINE AND PS_CONS_PRINTER_STROBE );
	OUT_3D_C <= NOT(OUT_5D_C AND OUT_4F_D AND MS_CONSOLE_SET_START_CND );
	OUT_4F_D <= NOT(PS_LOGIC_GATE_Z AND PS_I_O_LAST_EX_CYCLE AND PS_PROCESS_ROUTINE );
	OUT_2F_D <= NOT OUT_4G_F;
	OUT_4G_F_Latch <= NOT(MS_LOGIC_GATE_D_1 AND MS_PROGRAM_RESET_1 AND OUT_3G_NoPin );
	OUT_3G_NoPin_Latch <= NOT(OUT_4G_F AND OUT_4H_P );
	OUT_4H_P <= NOT(PS_NEXT_TO_LAST_LOGIC_GATE AND PS_SET_X_CYCLE_CTRL );
	OUT_2H_E <= NOT OUT_3G_NoPin;
	OUT_DOT_3B <= OUT_3A_P OR OUT_3B_P OR OUT_3D_C;

	MS_LAST_EX_DOT_NEXT_TO_LAST <= OUT_4A_C;
	PS_I_CYCLE_CTRL <= OUT_1A_C;
	MS_I_CYCLE_CTRL <= OUT_2C_C;
	MS_I_O_LAST_EX_DOT_Z <= OUT_4F_D;
	PS_X_CYCLE_CTRL <= OUT_2F_D;
	MS_X_CYCLE_CTRL <= OUT_2H_E;

	Latch_4B: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4B_NoPin_Latch,
		Q => OUT_4B_NoPin,
		QBar => OPEN );

	Latch_3B: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3B_P_Latch,
		Q => OUT_3B_P,
		QBar => OPEN );

	Latch_2C: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2C_C_Latch,
		Q => OUT_2C_C,
		QBar => OPEN );

	Latch_4G: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4G_F_Latch,
		Q => OUT_4G_F,
		QBar => OPEN );

	Latch_3G: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3G_NoPin_Latch,
		Q => OUT_3G_NoPin,
		QBar => OPEN );


end;
