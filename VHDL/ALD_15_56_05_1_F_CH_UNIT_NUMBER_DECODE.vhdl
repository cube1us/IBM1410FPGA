-- VHDL for IBM SMS ALD page 15.56.05.1
-- Title: F CH UNIT NUMBER DECODE
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 9/17/2020 4:41:00 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_15_56_05_1_F_CH_UNIT_NUMBER_DECODE is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_F_CH_UNIT_NU_REG_2_BIT:	 in STD_LOGIC;
		PS_F_CH_UNIT_NU_REG_NOT_4_BIT:	 in STD_LOGIC;
		PS_F_CH_UNIT_NU_REG_C_BIT:	 in STD_LOGIC;
		PS_F_CH_UNIT_NU_REG_NOT_C_BIT:	 in STD_LOGIC;
		PS_F_CH_UNIT_NU_REG_NOT_1_BIT:	 in STD_LOGIC;
		PS_F_CH_UNIT_NU_REG_1_BIT:	 in STD_LOGIC;
		PS_F_CH_UNIT_NU_REG_NOT_8_BIT:	 in STD_LOGIC;
		PS_F_CH_UNIT_NU_REG_4_BIT:	 in STD_LOGIC;
		PS_F_CH_UNIT_NU_REG_NOT_2_BIT:	 in STD_LOGIC;
		MS_F_CH_UNIT_NUMBER_3:	 out STD_LOGIC;
		MC_UNIT_NU_3_TO_TAU_STAR_F_CH:	 out STD_LOGIC;
		MC_WRITE_CHECK_STAR_F_CH_TO_1405:	 out STD_LOGIC;
		PS_F_CH_UNIT_NUMBER_3:	 out STD_LOGIC;
		MS_F_CH_UNIT_NUMBER_4:	 out STD_LOGIC;
		MC_UNIT_NU_4_TO_TAU_STAR_F_CH:	 out STD_LOGIC;
		MC_WRITE_ADDR_STAR_F_CH_TO_1405:	 out STD_LOGIC;
		MC_UNIT_NU_5_TO_TAU_STAR_F_CH:	 out STD_LOGIC);
end ALD_15_56_05_1_F_CH_UNIT_NUMBER_DECODE;

architecture behavioral of ALD_15_56_05_1_F_CH_UNIT_NUMBER_DECODE is 

	signal OUT_4A_G: STD_LOGIC;
	signal OUT_3A_C: STD_LOGIC;
	signal OUT_2A_D: STD_LOGIC;
	signal OUT_1A_A: STD_LOGIC;
	signal OUT_4B_G: STD_LOGIC;
	signal OUT_1B_A: STD_LOGIC;
	signal OUT_1C_P: STD_LOGIC;
	signal OUT_4D_G: STD_LOGIC;
	signal OUT_3D_C: STD_LOGIC;
	signal OUT_2D_C: STD_LOGIC;
	signal OUT_1D_E: STD_LOGIC;
	signal OUT_4E_G: STD_LOGIC;
	signal OUT_1E_E: STD_LOGIC;
	signal OUT_4G_G: STD_LOGIC;
	signal OUT_1G_G: STD_LOGIC;
	signal OUT_4H_G: STD_LOGIC;
	signal OUT_DOT_4A: STD_LOGIC;
	signal OUT_DOT_4D: STD_LOGIC;
	signal OUT_DOT_4G: STD_LOGIC;

begin

	OUT_4A_G <= NOT(PS_F_CH_UNIT_NU_REG_2_BIT AND PS_F_CH_UNIT_NU_REG_NOT_4_BIT AND PS_F_CH_UNIT_NU_REG_C_BIT );
	OUT_3A_C <= NOT(OUT_DOT_4A );
	OUT_2A_D <= NOT OUT_3A_C;
	OUT_1A_A <= OUT_2A_D;
	OUT_4B_G <= NOT(PS_F_CH_UNIT_NU_REG_1_BIT AND PS_F_CH_UNIT_NU_REG_NOT_8_BIT );
	OUT_1B_A <= OUT_2A_D;
	OUT_1C_P <= NOT(OUT_2A_D );
	OUT_4D_G <= NOT(PS_F_CH_UNIT_NU_REG_NOT_C_BIT AND PS_F_CH_UNIT_NU_REG_NOT_1_BIT );
	OUT_3D_C <= NOT(OUT_DOT_4D );
	OUT_2D_C <= NOT OUT_3D_C;
	OUT_1D_E <= OUT_2D_C;
	OUT_4E_G <= NOT(PS_F_CH_UNIT_NU_REG_NOT_8_BIT AND PS_F_CH_UNIT_NU_REG_NOT_2_BIT AND PS_F_CH_UNIT_NU_REG_4_BIT );
	OUT_1E_E <= OUT_2D_C;
	OUT_4G_G <= NOT(PS_F_CH_UNIT_NU_REG_NOT_8_BIT AND PS_F_CH_UNIT_NU_REG_1_BIT );
	OUT_1G_G <= OUT_DOT_4G;
	OUT_4H_G <= NOT(PS_F_CH_UNIT_NU_REG_C_BIT AND PS_F_CH_UNIT_NU_REG_4_BIT AND PS_F_CH_UNIT_NU_REG_NOT_2_BIT );
	OUT_DOT_4A <= OUT_4A_G OR OUT_4B_G;
	OUT_DOT_4D <= OUT_4D_G OR OUT_4E_G;
	OUT_DOT_4G <= OUT_4G_G OR OUT_4H_G;

	MS_F_CH_UNIT_NUMBER_3 <= OUT_2A_D;
	MC_UNIT_NU_3_TO_TAU_STAR_F_CH <= OUT_1A_A;
	MC_WRITE_CHECK_STAR_F_CH_TO_1405 <= OUT_1B_A;
	PS_F_CH_UNIT_NUMBER_3 <= OUT_1C_P;
	MS_F_CH_UNIT_NUMBER_4 <= OUT_2D_C;
	MC_UNIT_NU_4_TO_TAU_STAR_F_CH <= OUT_1D_E;
	MC_WRITE_ADDR_STAR_F_CH_TO_1405 <= OUT_1E_E;
	MC_UNIT_NU_5_TO_TAU_STAR_F_CH <= OUT_1G_G;


end;
