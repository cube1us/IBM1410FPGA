-- VHDL for IBM SMS ALD page 15.50.05.1
-- Title: ZONE ASSEM A.NOT A BITS FEATURE
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 7/1/2023 2:48:55 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_15_50_05_1_ZONE_ASSEM_A_NOT_A_BITS_FEATURE is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_B_CH_NOT_A_BIT:	 in STD_LOGIC;
		MB_B_CH_MIN_OR_INV_PLUS_SIGN_GATED:	 in STD_LOGIC;
		MB_B_CH_PLU_OR_INV_MIN_SIGN_GATED:	 in STD_LOGIC;
		PS_A_CH_NOT_A_BIT:	 in STD_LOGIC;
		PS_ASM_CH_NOT_A_BIT_STAR_ADDER_ZONES:	 in STD_LOGIC;
		MS_SET_ASTERISK:	 in STD_LOGIC;
		MS_SET_DOLLAR_SIGN:	 in STD_LOGIC;
		MB_USE_NO_ZONES:	 in STD_LOGIC;
		PB_USE_B_CH_ZONES:	 in STD_LOGIC;
		PS_USE_A_CH_ZONES:	 in STD_LOGIC;
		MB_ASSEMBLY_CH_A_BIT_INSERT:	 in STD_LOGIC;
		MS_SET_GROUP_MARK:	 in STD_LOGIC;
		MS_PLUS_SIGN_LATCH_GATED:	 in STD_LOGIC;
		PS_ASM_CH_A_BIT_STAR_STERLING:	 in STD_LOGIC;
		PS_ASM_CH_A_BIT_STAR_ADDER_ZONES:	 in STD_LOGIC;
		PS_B_CH_A_BIT:	 in STD_LOGIC;
		MS_A_CH_INV_MINUS_SIGN_GTD:	 in STD_LOGIC;
		PS_A_CH_A_BIT:	 in STD_LOGIC;
		MS_ASSEMBLY_CH_B_BIT:	 in STD_LOGIC;
		PB_B_CH_PL_OR_INV_MIN_SIGN_GATED:	 out STD_LOGIC;
		MS_ASSEMBLY_CH_NOT_A_BIT:	 out STD_LOGIC;
		PS_ASSEMBLY_CH_A_BIT:	 out STD_LOGIC;
		MS_ASSEMBLY_CH_A_BIT:	 out STD_LOGIC;
		MY_ASSEMBLY_CH_A_BIT:	 out STD_LOGIC;
		PS_ASSEMBLY_CH_A_OR_B_BITS:	 out STD_LOGIC;
		LAMP_11C8F10:	 out STD_LOGIC;
		LAMP_11C8F11:	 out STD_LOGIC);
end ALD_15_50_05_1_ZONE_ASSEM_A_NOT_A_BITS_FEATURE;

architecture behavioral of ALD_15_50_05_1_ZONE_ASSEM_A_NOT_A_BITS_FEATURE is 

	signal OUT_5B_C: STD_LOGIC;
	signal OUT_4B_D: STD_LOGIC;
	signal OUT_2B_K: STD_LOGIC;
	signal OUT_5C_D: STD_LOGIC;
	signal OUT_4C_K: STD_LOGIC;
	signal OUT_3C_D: STD_LOGIC;
	signal OUT_2C_D: STD_LOGIC;
	signal OUT_4D_D: STD_LOGIC;
	signal OUT_1D_M: STD_LOGIC;
	signal OUT_5E_C: STD_LOGIC;
	signal OUT_4E_C: STD_LOGIC;
	signal OUT_3E_H: STD_LOGIC;
	signal OUT_5F_G: STD_LOGIC;
	signal OUT_4F_C: STD_LOGIC;
	signal OUT_2F_D: STD_LOGIC;
	signal OUT_5G_C: STD_LOGIC;
	signal OUT_4G_D: STD_LOGIC;
	signal OUT_2G_A: STD_LOGIC;
	signal OUT_5H_D: STD_LOGIC;
	signal OUT_2H_R: STD_LOGIC;
	signal OUT_2I_E: STD_LOGIC;
	signal OUT_DOT_4C: STD_LOGIC;
	signal OUT_DOT_4F: STD_LOGIC;
	signal OUT_DOT_3C: STD_LOGIC;

begin

	OUT_5B_C <= NOT(PB_USE_B_CH_ZONES AND PS_B_CH_NOT_A_BIT );
	OUT_4B_D <= NOT(MB_B_CH_PLU_OR_INV_MIN_SIGN_GATED );
	OUT_2B_K <= NOT MB_B_CH_PLU_OR_INV_MIN_SIGN_GATED;
	OUT_5C_D <= NOT(PS_A_CH_NOT_A_BIT AND PS_USE_A_CH_ZONES );
	OUT_4C_K <= NOT(OUT_5B_C AND OUT_5C_D );
	OUT_3C_D <= NOT OUT_DOT_4C;
	OUT_2C_D <= NOT OUT_DOT_3C;
	LAMP_11C8F10 <= OUT_2C_D;
	OUT_4D_D <= NOT(MS_SET_ASTERISK AND MS_SET_DOLLAR_SIGN AND MB_USE_NO_ZONES );
	OUT_1D_M <= NOT OUT_4E_C;
	OUT_5E_C <= NOT(OUT_5F_G );
	OUT_4E_C <= NOT(MB_B_CH_MIN_OR_INV_PLUS_SIGN_GATED AND OUT_2B_K );
	OUT_3E_H <= OUT_5E_C;
	OUT_5F_G <= NOT(OUT_DOT_4F AND MB_B_CH_MIN_OR_INV_PLUS_SIGN_GATED );
	OUT_4F_C <= NOT(MB_ASSEMBLY_CH_A_BIT_INSERT AND MS_SET_GROUP_MARK AND MS_PLUS_SIGN_LATCH_GATED );
	OUT_2F_D <= NOT OUT_2G_A;
	LAMP_11C8F11 <= OUT_2F_D;
	OUT_5G_C <= NOT(PS_B_CH_A_BIT AND PB_USE_B_CH_ZONES );
	OUT_4G_D <= NOT(OUT_5G_C AND MS_A_CH_INV_MINUS_SIGN_GTD AND OUT_5H_D );

	SMS_AEK_2G: entity SMS_AEK
	    port map (
		IN1 => OUT_3E_H,	-- Pin F
		OUT1 => OUT_2G_A,
		IN2 => OPEN );

	OUT_5H_D <= NOT(PS_USE_A_CH_ZONES AND PS_A_CH_A_BIT );
	OUT_2H_R <= NOT OUT_3E_H;
	OUT_2I_E <= NOT(OUT_2G_A AND MS_ASSEMBLY_CH_B_BIT );
	OUT_DOT_4C <= OUT_4C_K OR PS_ASM_CH_NOT_A_BIT_STAR_ADDER_ZONES OR OUT_4D_D;
	OUT_DOT_4F <= OUT_4F_C OR PS_ASM_CH_A_BIT_STAR_STERLING OR OUT_4G_D OR PS_ASM_CH_A_BIT_STAR_ADDER_ZONES OR OUT_4B_D;
	OUT_DOT_3C <= OUT_3C_D AND MB_B_CH_MIN_OR_INV_PLUS_SIGN_GATED;

	PB_B_CH_PL_OR_INV_MIN_SIGN_GATED <= OUT_1D_M;
	PS_ASSEMBLY_CH_A_BIT <= OUT_3E_H;
	MS_ASSEMBLY_CH_A_BIT <= OUT_2G_A;
	MY_ASSEMBLY_CH_A_BIT <= OUT_2H_R;
	PS_ASSEMBLY_CH_A_OR_B_BITS <= OUT_2I_E;
	MS_ASSEMBLY_CH_NOT_A_BIT <= OUT_DOT_3C;


end;
