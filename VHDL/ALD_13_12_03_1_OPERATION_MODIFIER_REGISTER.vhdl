-- VHDL for IBM SMS ALD page 13.12.03.1
-- Title: OPERATION MODIFIER REGISTER
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 7/20/2020 12:29:48 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_13_12_03_1_OPERATION_MODIFIER_REGISTER is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_B_CH_NOT_2_BIT:	 in STD_LOGIC;
		PS_B_CH_2_BIT:	 in STD_LOGIC;
		MS_1401_D_OP_CODE:	 in STD_LOGIC;
		MS_RESET_OP_MOD_REG:	 in STD_LOGIC;
		PS_SET_OP_MOD_REG:	 in STD_LOGIC;
		PS_1401_DATA_MOVE_SET_OP_MOD:	 in STD_LOGIC;
		PS_B_CH_NOT_1_BIT:	 in STD_LOGIC;
		PS_B_CH_1_BIT:	 in STD_LOGIC;
		MS_1401_Y_OP_CODE:	 in STD_LOGIC;
		PS_OP_MOD_REG_2_BIT:	 out STD_LOGIC;
		PS_OP_MOD_REG_NOT_2_BIT:	 out STD_LOGIC;
		PS_OP_MOD_REG_1_BIT:	 out STD_LOGIC;
		PS_OP_MOD_REG_NOT_1_BIT:	 out STD_LOGIC;
		LAMP_11C8J08:	 out STD_LOGIC;
		LAMP_11C8K08:	 out STD_LOGIC);
end ALD_13_12_03_1_OPERATION_MODIFIER_REGISTER;

architecture behavioral of ALD_13_12_03_1_OPERATION_MODIFIER_REGISTER is 

	signal OUT_2A_C: STD_LOGIC;
	signal OUT_5B_G: STD_LOGIC;
	signal OUT_4B_D: STD_LOGIC;
	signal OUT_4B_D_Latch: STD_LOGIC;
	signal OUT_3B_H: STD_LOGIC;
	signal OUT_3B_H_Latch: STD_LOGIC;
	signal OUT_5C_C: STD_LOGIC;
	signal OUT_2C_A: STD_LOGIC;
	signal OUT_5D_D: STD_LOGIC;
	signal OUT_2D_C: STD_LOGIC;
	signal OUT_2E_A: STD_LOGIC;
	signal OUT_5F_K: STD_LOGIC;
	signal OUT_4F_C: STD_LOGIC;
	signal OUT_4F_C_Latch: STD_LOGIC;
	signal OUT_3F_H: STD_LOGIC;
	signal OUT_3F_H_Latch: STD_LOGIC;
	signal OUT_5G_D: STD_LOGIC;
	signal OUT_2G_A: STD_LOGIC;
	signal OUT_5H_E: STD_LOGIC;
	signal OUT_2H_K: STD_LOGIC;

begin


	SMS_AEK_2A: entity SMS_AEK
	    port map (
		IN1 => OUT_4B_D,	-- Pin D
		OUT1 => OUT_2A_C,
		IN2 => OPEN );

	OUT_5B_G <= NOT(PS_B_CH_NOT_2_BIT AND PS_SET_OP_MOD_REG );
	OUT_4B_D_Latch <= NOT(OUT_5B_G AND MS_RESET_OP_MOD_REG AND OUT_3B_H );
	OUT_3B_H_Latch <= NOT(OUT_4B_D AND OUT_5D_D AND OUT_5C_C );
	OUT_5C_C <= NOT(PS_B_CH_2_BIT AND PS_SET_OP_MOD_REG );
	OUT_2C_A <= NOT OUT_3B_H;
	OUT_5D_D <= NOT(MS_1401_D_OP_CODE AND PS_1401_DATA_MOVE_SET_OP_MOD );
	OUT_2D_C <= NOT OUT_2C_A;
	LAMP_11C8J08 <= OUT_2D_C;

	SMS_AEK_2E: entity SMS_AEK
	    port map (
		IN1 => OUT_4F_C,	-- Pin F
		OUT1 => OUT_2E_A,
		IN2 => OPEN );

	OUT_5F_K <= NOT(PS_B_CH_NOT_1_BIT AND PS_SET_OP_MOD_REG );
	OUT_4F_C_Latch <= NOT(OUT_5F_K AND MS_RESET_OP_MOD_REG AND OUT_3F_H );
	OUT_3F_H_Latch <= NOT(OUT_4F_C AND OUT_5H_E AND OUT_5G_D );
	OUT_5G_D <= NOT(PS_SET_OP_MOD_REG AND PS_B_CH_1_BIT );
	OUT_2G_A <= NOT OUT_3F_H;
	OUT_5H_E <= NOT(MS_1401_Y_OP_CODE AND PS_1401_DATA_MOVE_SET_OP_MOD );
	OUT_2H_K <= NOT OUT_2G_A;
	LAMP_11C8K08 <= OUT_2H_K;

	PS_OP_MOD_REG_2_BIT <= OUT_2A_C;
	PS_OP_MOD_REG_NOT_2_BIT <= OUT_2C_A;
	PS_OP_MOD_REG_1_BIT <= OUT_2E_A;
	PS_OP_MOD_REG_NOT_1_BIT <= OUT_2G_A;

	Latch_4B: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4B_D_Latch,
		Q => OUT_4B_D,
		QBar => OPEN );

	Latch_3B: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3B_H_Latch,
		Q => OUT_3B_H,
		QBar => OPEN );

	Latch_4F: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4F_C_Latch,
		Q => OUT_4F_C,
		QBar => OPEN );

	Latch_3F: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3F_H_Latch,
		Q => OUT_3F_H,
		QBar => OPEN );


end;
