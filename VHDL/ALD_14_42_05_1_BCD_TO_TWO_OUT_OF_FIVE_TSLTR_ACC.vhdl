-- VHDL for IBM SMS ALD page 14.42.05.1
-- Title: BCD TO TWO OUT OF FIVE TSLTR-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 8/30/2020 10:15:47 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_14_42_05_1_BCD_TO_TWO_OUT_OF_FIVE_TSLTR_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_1ST_ADDRESS:	 in STD_LOGIC;
		MS_PERCENT_TYPE_OP_CODES:	 in STD_LOGIC;
		MS_1401_MODE_1:	 in STD_LOGIC;
		PS_ASSEMBLY_CH_4_BIT:	 in STD_LOGIC;
		MS_ASSEMBLY_CH_2_BIT:	 in STD_LOGIC;
		PS_ASSEMBLY_CH_1_BIT:	 in STD_LOGIC;
		PS_SET_NU_TO_ADDR_CH:	 in STD_LOGIC;
		MS_ASSEMBLY_CH_4_BIT:	 in STD_LOGIC;
		MS_ASSEMBLY_CH_1_BIT:	 in STD_LOGIC;
		PS_ASSEMBLY_CH_8_BIT:	 in STD_LOGIC;
		PS_ASSEMBLY_CH_2_BIT:	 in STD_LOGIC;
		PS_ASSEMBLY_CH_NU_C_BIT:	 in STD_LOGIC;
		MS_PERCENT_CONVERSION:	 out STD_LOGIC;
		MS_ADDR_CH_NU_TSLTR_9_LINE:	 out STD_LOGIC;
		MS_ADDR_CH_NU_TSLTR_0_LINE:	 out STD_LOGIC);
end ALD_14_42_05_1_BCD_TO_TWO_OUT_OF_FIVE_TSLTR_ACC;

architecture behavioral of ALD_14_42_05_1_BCD_TO_TWO_OUT_OF_FIVE_TSLTR_ACC is 

	signal OUT_3A_E: STD_LOGIC;
	signal OUT_5B_B: STD_LOGIC;
	signal OUT_3B_D: STD_LOGIC;
	signal OUT_3C_C: STD_LOGIC;
	signal OUT_3D_G: STD_LOGIC;
	signal OUT_3E_G: STD_LOGIC;
	signal OUT_3F_G: STD_LOGIC;
	signal OUT_3G_G: STD_LOGIC;
	signal OUT_DOT_1A: STD_LOGIC;
	signal OUT_DOT_1D: STD_LOGIC;
	signal OUT_DOT_1F: STD_LOGIC;

begin

	OUT_3A_E <= NOT(PS_1ST_ADDRESS AND OUT_5B_B );
	OUT_5B_B <= NOT(MS_PERCENT_TYPE_OP_CODES AND MS_1401_MODE_1 );
	OUT_3B_D <= NOT(PS_ASSEMBLY_CH_4_BIT AND MS_ASSEMBLY_CH_2_BIT AND PS_ASSEMBLY_CH_NU_C_BIT );
	OUT_3C_C <= NOT(PS_ASSEMBLY_CH_8_BIT AND MS_ASSEMBLY_CH_1_BIT AND PS_SET_NU_TO_ADDR_CH );
	OUT_3D_G <= NOT(MS_ASSEMBLY_CH_2_BIT AND PS_ASSEMBLY_CH_1_BIT AND PS_SET_NU_TO_ADDR_CH );
	OUT_3E_G <= NOT(PS_ASSEMBLY_CH_8_BIT AND PS_ASSEMBLY_CH_NU_C_BIT AND MS_ASSEMBLY_CH_4_BIT );
	OUT_3F_G <= NOT(PS_SET_NU_TO_ADDR_CH AND MS_ASSEMBLY_CH_1_BIT AND PS_ASSEMBLY_CH_2_BIT );
	OUT_3G_G <= NOT(PS_ASSEMBLY_CH_8_BIT AND MS_ASSEMBLY_CH_4_BIT AND PS_ASSEMBLY_CH_NU_C_BIT );
	OUT_DOT_1A <= OUT_3A_E OR OUT_3B_D OR OUT_3C_C;
	OUT_DOT_1D <= OUT_3D_G OR OUT_3E_G;
	OUT_DOT_1F <= OUT_3F_G OR OUT_3G_G;

	MS_PERCENT_CONVERSION <= OUT_DOT_1A;
	MS_ADDR_CH_NU_TSLTR_9_LINE <= OUT_DOT_1D;
	MS_ADDR_CH_NU_TSLTR_0_LINE <= OUT_DOT_1F;


end;
