-- VHDL for IBM SMS ALD page 13.72.01.1
-- Title: E CH FILE CONTROLS
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 8/14/2020 4:42:18 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_13_72_01_1_E_CH_FILE_CONTROLS is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_MASTER_ERROR:	 in STD_LOGIC;
		MS_1ST_DATA_STROBE_LATCH:	 in STD_LOGIC;
		PS_E_CH_OUTPUT_MODE:	 in STD_LOGIC;
		MS_E_CH_UNIT_NUMBER_9:	 in STD_LOGIC;
		PS_BLOCK_E_CH_FILE_START_GT:	 in STD_LOGIC;
		PS_E_CH_IN_PROCESS:	 in STD_LOGIC;
		PS_1ST_CLOCK_PULSE_1:	 in STD_LOGIC;
		PS_E_CH_STATUS_SAMPLE_A_DELAY:	 in STD_LOGIC;
		PS_E_CH_NO_STATUS_ON:	 in STD_LOGIC;
		PS_E_CH_SELECT_UNIT_F:	 in STD_LOGIC;
		PS_ANY_LAST_GATE:	 in STD_LOGIC;
		PS_E_CYCLE:	 in STD_LOGIC;
		MS_E_CH_RESET_1:	 in STD_LOGIC;
		PS_LOGIC_GATE_E_OR_V:	 in STD_LOGIC;
		PS_2ND_CLOCK_PULSE_2:	 in STD_LOGIC;
		MS_E_CH_UNIT_NUMBER_4:	 in STD_LOGIC;
		MS_E1_REG_FULL:	 in STD_LOGIC;
		MS_E2_REG_FULL:	 in STD_LOGIC;
		MS_LOGIC_GATE_B_OR_S:	 in STD_LOGIC;
		PS_E_CH_INT_END_OF_TRF_DELAYED:	 in STD_LOGIC;
		PS_GATE_ON_E_CH_END_ADDR_TRF:	 in STD_LOGIC;
		PS_E_CH_END_ADDR_TRF_STAR_1301_STAR:	 in STD_LOGIC;
		PS_E_CH_2ND_ADDR_TRF:	 out STD_LOGIC;
		MS_E_CH_2ND_ADDR_TRF:	 out STD_LOGIC;
		PS_2ND_CLOCK_PULSE_CLAMPED:	 out STD_LOGIC;
		MC_1405_START_GATE_STAR_E_CH:	 out STD_LOGIC;
		MC_1301_START_GATE_STAR_E_CH:	 out STD_LOGIC;
		PS_1ST_CLOCK_PULSE_CLAMPED:	 out STD_LOGIC;
		MS_E_CH_1ST_CHAR_2ND_ADDR:	 out STD_LOGIC;
		MS_E_CH_END_OF_2ND_ADDR_TRF:	 out STD_LOGIC);
end ALD_13_72_01_1_E_CH_FILE_CONTROLS;

architecture behavioral of ALD_13_72_01_1_E_CH_FILE_CONTROLS is 

	signal OUT_5A_G: STD_LOGIC;
	signal OUT_5A_G_Latch: STD_LOGIC;
	signal OUT_4A_E: STD_LOGIC;
	signal OUT_4A_E_Latch: STD_LOGIC;
	signal OUT_3A_E: STD_LOGIC;
	signal OUT_1A_D: STD_LOGIC;
	signal OUT_5B_G: STD_LOGIC;
	signal OUT_4B_F: STD_LOGIC;
	signal OUT_4B_F_Latch: STD_LOGIC;
	signal OUT_3B_G: STD_LOGIC;
	signal OUT_3B_G_Latch: STD_LOGIC;
	signal OUT_1B_C: STD_LOGIC;
	signal OUT_4C_E: STD_LOGIC;
	signal OUT_3C_E: STD_LOGIC;
	signal OUT_2C_B: STD_LOGIC;
	signal OUT_5D_K: STD_LOGIC;
	signal OUT_4D_E: STD_LOGIC;
	signal OUT_4D_E_Latch: STD_LOGIC;
	signal OUT_3D_P: STD_LOGIC;
	signal OUT_3D_P_Latch: STD_LOGIC;
	signal OUT_4E_D: STD_LOGIC;
	signal OUT_3E_G: STD_LOGIC;
	signal OUT_2E_C: STD_LOGIC;
	signal OUT_5F_G: STD_LOGIC;
	signal OUT_4F_D: STD_LOGIC;
	signal OUT_4F_D_Latch: STD_LOGIC;
	signal OUT_3F_R: STD_LOGIC;
	signal OUT_3F_R_Latch: STD_LOGIC;
	signal OUT_5G_G: STD_LOGIC;
	signal OUT_4G_R: STD_LOGIC;
	signal OUT_3G_F: STD_LOGIC;
	signal OUT_5H_K: STD_LOGIC;
	signal OUT_4H_C: STD_LOGIC;
	signal OUT_3H_F: STD_LOGIC;
	signal OUT_3H_B: STD_LOGIC;
	signal OUT_1H_D: STD_LOGIC;
	signal OUT_5I_C: STD_LOGIC;
	signal OUT_5I_C_Latch: STD_LOGIC;
	signal OUT_4I_K: STD_LOGIC;
	signal OUT_4I_K_Latch: STD_LOGIC;
	signal OUT_2I_C: STD_LOGIC;
	signal OUT_DOT_5A: STD_LOGIC;
	signal OUT_DOT_4A: STD_LOGIC;
	signal OUT_DOT_4C: STD_LOGIC;
	signal OUT_DOT_4G: STD_LOGIC;
	signal OUT_DOT_5G: STD_LOGIC;

begin

	OUT_5A_G_Latch <= NOT(MS_MASTER_ERROR AND MS_1ST_DATA_STROBE_LATCH AND OUT_DOT_4A );
	OUT_4A_E_Latch <= NOT(OUT_DOT_5A AND MS_E2_REG_FULL AND PS_E_CH_OUTPUT_MODE );
	OUT_3A_E <= NOT(MS_E_CH_UNIT_NUMBER_9 AND MS_E_CH_UNIT_NUMBER_4 );
	OUT_1A_D <= NOT OUT_4B_F;
	OUT_5B_G <= NOT(PS_E_CH_IN_PROCESS AND PS_E_CH_SELECT_UNIT_F );
	OUT_4B_F_Latch <= NOT(OUT_2I_C AND OUT_3B_G AND MS_E_CH_RESET_1 );
	OUT_3B_G_Latch <= NOT(OUT_4B_F AND OUT_DOT_4C );
	OUT_1B_C <= NOT OUT_3B_G;
	OUT_4C_E <= NOT(PS_E_CH_STATUS_SAMPLE_A_DELAY AND PS_E_CH_NO_STATUS_ON AND PS_E_CH_SELECT_UNIT_F );
	OUT_3C_E <= OUT_DOT_5A;
	OUT_2C_B <= NOT PS_1ST_CLOCK_PULSE_1;
	OUT_5D_K <= NOT(PS_ANY_LAST_GATE AND PS_E_CYCLE );
	OUT_4D_E_Latch <= NOT(OUT_5D_K AND MS_E_CH_RESET_1 AND OUT_3D_P );
	OUT_3D_P_Latch <= NOT(OUT_4D_E AND OUT_DOT_4C );
	OUT_4E_D <= NOT(PS_LOGIC_GATE_E_OR_V AND OUT_3D_P AND PS_E_CYCLE );
	OUT_3E_G <= NOT(MS_E_CH_UNIT_NUMBER_4 );
	OUT_2E_C <= NOT PS_2ND_CLOCK_PULSE_2;
	OUT_5F_G <= NOT(MS_E_CH_UNIT_NUMBER_4 AND MS_E1_REG_FULL AND MS_E2_REG_FULL );
	OUT_4F_D_Latch <= NOT(MS_E_CH_RESET_1 AND MS_LOGIC_GATE_B_OR_S AND OUT_3F_R );
	OUT_3F_R_Latch <= NOT(OUT_4E_D AND OUT_4F_D );
	OUT_5G_G <= NOT(OUT_1A_D AND PS_E_CH_INT_END_OF_TRF_DELAYED AND OUT_4I_K );
	OUT_4G_R <= NOT OUT_2I_C;
	OUT_3G_F <= NOT OUT_DOT_4G;
	OUT_5H_K <= NOT(OUT_2E_C AND PS_E_CH_END_ADDR_TRF_STAR_1301_STAR );
	OUT_4H_C <= NOT(OUT_DOT_5G );

	SMS_DEY_3H: entity SMS_DEY
	    port map (
		FPGA_CLK => FPGA_CLK,
		ACSET => OUT_2E_C,	-- Pin H
		GATEON => OUT_1H_D,	-- Pin K
		DCSFORCE => OUT_3G_F,	-- Pin X
		ACRESET => OUT_2E_C,	-- Pin A
		GATEOFF => OUT_2I_C,	-- Pin E
		OUTON => OUT_3H_F,
		OUTOFF => OUT_3H_B,
		GROUND => OPEN,
		DCRESET => OPEN,
		DCRFORCE => OPEN );

	OUT_1H_D <= NOT OUT_3H_F;
	OUT_5I_C_Latch <= NOT(MS_E_CH_RESET_1 AND OUT_4I_K );
	OUT_4I_K_Latch <= NOT(OUT_5H_K AND OUT_5I_C );
	OUT_2I_C <= NOT OUT_3H_B;
	OUT_DOT_5A <= OUT_5A_G OR PS_BLOCK_E_CH_FILE_START_GT OR OUT_5B_G;
	OUT_DOT_4A <= OUT_4A_E OR OUT_3A_E;
	OUT_DOT_4C <= OUT_4C_E OR OUT_3E_G;
	OUT_DOT_4G <= OUT_4G_R OR PS_GATE_ON_E_CH_END_ADDR_TRF OR OUT_4H_C;
	OUT_DOT_5G <= OUT_5F_G OR OUT_5G_G;

	PS_E_CH_2ND_ADDR_TRF <= OUT_1A_D;
	MS_E_CH_2ND_ADDR_TRF <= OUT_1B_C;
	MC_1301_START_GATE_STAR_E_CH <= OUT_3C_E;
	MC_1405_START_GATE_STAR_E_CH <= OUT_3C_E;
	PS_2ND_CLOCK_PULSE_CLAMPED <= OUT_2C_B;
	PS_1ST_CLOCK_PULSE_CLAMPED <= OUT_2E_C;
	MS_E_CH_1ST_CHAR_2ND_ADDR <= OUT_4F_D;
	MS_E_CH_END_OF_2ND_ADDR_TRF <= OUT_2I_C;

	Latch_5A: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_5A_G_Latch,
		Q => OUT_5A_G,
		QBar => OPEN );

	Latch_4A: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4A_E_Latch,
		Q => OUT_4A_E,
		QBar => OPEN );

	Latch_4B: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4B_F_Latch,
		Q => OUT_4B_F,
		QBar => OPEN );

	Latch_3B: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3B_G_Latch,
		Q => OUT_3B_G,
		QBar => OPEN );

	Latch_4D: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4D_E_Latch,
		Q => OUT_4D_E,
		QBar => OPEN );

	Latch_3D: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3D_P_Latch,
		Q => OUT_3D_P,
		QBar => OPEN );

	Latch_4F: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4F_D_Latch,
		Q => OUT_4F_D,
		QBar => OPEN );

	Latch_3F: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3F_R_Latch,
		Q => OUT_3F_R,
		QBar => OPEN );

	Latch_5I: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_5I_C_Latch,
		Q => OUT_5I_C,
		QBar => OPEN );

	Latch_4I: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4I_K_Latch,
		Q => OUT_4I_K,
		QBar => OPEN );


end;
