-- Test Bench VHDL for IBM SMS ALD page 17.13.01.1
-- Title: EDIT  CONTROLS
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/8/2020 4:03:15 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_17_13_01_1_EDIT_CONTROLS_tb is
end ALD_17_13_01_1_EDIT_CONTROLS_tb;

architecture behavioral of ALD_17_13_01_1_EDIT_CONTROLS_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_17_13_01_1_EDIT_CONTROLS
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_SET_WORD_MARK_OP_CODE:	 in STD_LOGIC;
		PS_A_OR_B_CYCLE:	 in STD_LOGIC;
		PS_1ST_SCAN:	 in STD_LOGIC;
		PS_CONTROL_ZERO:	 in STD_LOGIC;
		PS_NOT_0_SUPPRESS:	 in STD_LOGIC;
		PS_UNITS_LATCH:	 in STD_LOGIC;
		PS_Z_OP_DOT_B_CYCLE:	 in STD_LOGIC;
		PS_E_OP_DOT_B_CYCLE_1:	 in STD_LOGIC;
		PS_ASTERISK_OR_DOLLAR_SIGN:	 in STD_LOGIC;
		PS_BLANK_OR_ZERO:	 in STD_LOGIC;
		PS_BODY_LATCH:	 in STD_LOGIC;
		PS_SET_WM:	 out STD_LOGIC;
		PS_USE_NO_ZONES_STAR_EDIT:	 out STD_LOGIC;
		PS_EDIT_USE_A_CH_NU:	 out STD_LOGIC;
		PS_USE_A_CH_ZONES_STAR_EDIT:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_SET_WORD_MARK_OP_CODE: STD_LOGIC := '0';
	signal PS_A_OR_B_CYCLE: STD_LOGIC := '0';
	signal PS_1ST_SCAN: STD_LOGIC := '0';
	signal PS_CONTROL_ZERO: STD_LOGIC := '0';
	signal PS_NOT_0_SUPPRESS: STD_LOGIC := '0';
	signal PS_UNITS_LATCH: STD_LOGIC := '0';
	signal PS_Z_OP_DOT_B_CYCLE: STD_LOGIC := '0';
	signal PS_E_OP_DOT_B_CYCLE_1: STD_LOGIC := '0';
	signal PS_ASTERISK_OR_DOLLAR_SIGN: STD_LOGIC := '0';
	signal PS_BLANK_OR_ZERO: STD_LOGIC := '0';
	signal PS_BODY_LATCH: STD_LOGIC := '0';

	-- Outputs

	signal PS_SET_WM: STD_LOGIC;
	signal PS_USE_NO_ZONES_STAR_EDIT: STD_LOGIC;
	signal PS_EDIT_USE_A_CH_NU: STD_LOGIC;
	signal PS_USE_A_CH_ZONES_STAR_EDIT: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

   constant MX_X1A_POS: integer := 7;
   constant MX_X6A_POS: integer := 8;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_17_13_01_1_EDIT_CONTROLS port map(
		FPGA_CLK => FPGA_CLK,
		PS_SET_WORD_MARK_OP_CODE => PS_SET_WORD_MARK_OP_CODE,
		PS_A_OR_B_CYCLE => PS_A_OR_B_CYCLE,
		PS_1ST_SCAN => PS_1ST_SCAN,
		PS_CONTROL_ZERO => PS_CONTROL_ZERO,
		PS_NOT_0_SUPPRESS => PS_NOT_0_SUPPRESS,
		PS_UNITS_LATCH => PS_UNITS_LATCH,
		PS_Z_OP_DOT_B_CYCLE => PS_Z_OP_DOT_B_CYCLE,
		PS_E_OP_DOT_B_CYCLE_1 => PS_E_OP_DOT_B_CYCLE_1,
		PS_ASTERISK_OR_DOLLAR_SIGN => PS_ASTERISK_OR_DOLLAR_SIGN,
		PS_BLANK_OR_ZERO => PS_BLANK_OR_ZERO,
		PS_BODY_LATCH => PS_BODY_LATCH,
		PS_SET_WM => PS_SET_WM,
		PS_USE_NO_ZONES_STAR_EDIT => PS_USE_NO_ZONES_STAR_EDIT,
		PS_EDIT_USE_A_CH_NU => PS_EDIT_USE_A_CH_NU,
		PS_USE_A_CH_ZONES_STAR_EDIT => PS_USE_A_CH_ZONES_STAR_EDIT);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;
   variable tv: std_logic_vector(25 downto 0);
   variable a,b,c,d,e,f,g,h,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z: std_logic;
   variable g1, g2, g3, g4, g5, g6, g7, g8, g9, g10: std_logic;

   begin

   -- Your test bench code

   testName := "17.13.01.1        ";

   for tt in 0 to 2**11 loop
      tv := std_logic_vector(to_unsigned(tt,tv'Length));
      a := tv(0);
      b := tv(1);
      c := tv(2);
      d := tv(3);
      e := tv(4);
      f := tv(5);
      g := tv(6);
      h := tv(7);
      j := tv(8);
      k := tv(9);
      l := tv(10);
      
      g1 := g and f;
      g2 := f and k and h;
      g3 := l and k and h;
      g4 := j and l and h;
      g5 := l and g;   
      
      g6 := h and c and d and e;   

		PS_SET_WORD_MARK_OP_CODE <= a;
		PS_A_OR_B_CYCLE <= b;
		PS_1ST_SCAN <= c;
		PS_CONTROL_ZERO <= d;
		PS_NOT_0_SUPPRESS <= e;
		PS_UNITS_LATCH <= f;
		PS_Z_OP_DOT_B_CYCLE <= g;
		PS_E_OP_DOT_B_CYCLE_1 <= h;
		PS_ASTERISK_OR_DOLLAR_SIGN <= j;
		PS_BLANK_OR_ZERO <= k;
		PS_BODY_LATCH <= l;
      
      wait for 30 ns;

      check1(PS_SET_WM,(g and f) or (a and b) or g6,testName,"Set WM");
      check1(PS_USE_NO_ZONES_STAR_EDIT,g1 or g2,testName,"Use No Zones *Edit");
      check1(PS_EDIT_USE_A_CH_NU,g1 or g2 or g3 or g4 or g5,testName,"Edit Use A Ch NU");
      check1(PS_USE_A_CH_ZONES_STAR_EDIT,g3 or g4 or g5,testName,"Use A Ch Zones *Edit");      
      
   end loop;

   assert false report "Simulation Ended NORMALLY" severity failure;

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 2 ms;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY (TIMEOUT)" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

end;
