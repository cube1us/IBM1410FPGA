-- VHDL for IBM SMS ALD group AddMatrixCarryInBandQ
-- Title: AddMatrixCarryInBandQ
-- IBM Machine Name 1411
-- Generated by GenerateHDL on 9/29/2020 11:05:54 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity AddMatrixCarryInBandQ is
	    Port (
		FPGA_CLK: in STD_LOGIC;
		MB_ADD_AB0: in STD_LOGIC;
		MB_ADD_AB1: in STD_LOGIC;
		MB_ADD_BB0: in STD_LOGIC;
		MB_ADD_BB1: in STD_LOGIC;
		MB_NO_CARRY_LATCH: in STD_LOGIC;
		MB_CARRY_LATCH: in STD_LOGIC;
		MB_ADD_AQ0: in STD_LOGIC;
		MB_ADD_AQ2: in STD_LOGIC;
		MB_ADD_AQ4: in STD_LOGIC;
		MB_ADD_AQ6: in STD_LOGIC;
		MB_ADD_AQ8: in STD_LOGIC;
		MB_ADD_BQ0: in STD_LOGIC;
		MB_ADD_BQ2: in STD_LOGIC;
		MB_ADD_BQ4: in STD_LOGIC;
		MB_ADD_BQ6: in STD_LOGIC;
		MB_ADD_BQ8: in STD_LOGIC;
		PB_AB0_DOT_BB0_DOT_NC: out STD_LOGIC;
		PB_AB0_DOT_BB1_DOT_C: out STD_LOGIC;
		PB_AB1_DOT_BB0_DOT_C: out STD_LOGIC;
		PB_AB1_DOT_BB1_DOT_NC: out STD_LOGIC;
		PB_AB0_DOT_BB1_DOT_NC: out STD_LOGIC;
		PB_AB1_DOT_BB0_DOT_NC: out STD_LOGIC;
		PB_AB0_DOT_BB0_DOT_C: out STD_LOGIC;
		PB_AB1_DOT_BB1_DOT_C: out STD_LOGIC;
		PB_ADD_AQ0_DOT_BQ0: out STD_LOGIC;
		PB_ADD_BQ0: out STD_LOGIC;
		PB_ADD_AQ2_DOT_BQ8: out STD_LOGIC;
		MB_ADDER_MX_Q0: out STD_LOGIC;
		PB_ADD_AQ4_DOT_BQ6: out STD_LOGIC;
		PB_ADD_BQ4: out STD_LOGIC;
		PB_ADD_AQ6_DOT_BQ4: out STD_LOGIC;
		PB_ADD_AQ8_DOT_BQ2: out STD_LOGIC;
		PB_ADD_AQ0_DOT_BQ2: out STD_LOGIC;
		PB_ADD_AQ2_DOT_BQ0: out STD_LOGIC;
		MB_ADDER_MX_Q2: out STD_LOGIC;
		PB_ADD_AQ4_DOT_BQ8: out STD_LOGIC;
		PB_ADD_AQ6_DOT_BQ6: out STD_LOGIC;
		PB_ADD_AQ8_DOT_BQ4: out STD_LOGIC;
		PB_ADD_AQ0_DOT_BQ4: out STD_LOGIC;
		PB_ADD_AQ2_DOT_BQ2: out STD_LOGIC;
		MB_ADDER_MX_Q4: out STD_LOGIC;
		PB_ADD_AQ4_DOT_BQ0: out STD_LOGIC;
		PB_ADD_AQ6_DOT_BQ8: out STD_LOGIC;
		PB_ADD_BQ8: out STD_LOGIC;
		PB_ADD_AQ8_DOT_BQ6: out STD_LOGIC;
		PB_ADD_AQ0_DOT_BQ6: out STD_LOGIC;
		PB_ADD_AQ2_DOT_BQ4: out STD_LOGIC;
		MB_ADDER_MX_Q6: out STD_LOGIC;
		PB_ADD_AQ4_DOT_BQ2: out STD_LOGIC;
		PB_ADD_AQ6_DOT_BQ0: out STD_LOGIC;
		PB_ADD_AQ8_DOT_BQ8: out STD_LOGIC;
		PS_ADDER_MX_Q8: out STD_LOGIC;
		MB_ADDER_MX_Q8: out STD_LOGIC);
end AddMatrixCarryInBandQ;


ARCHITECTURE structural of AddMatrixCarryInBandQ is

BEGIN

Page_16_13_01_1: ENTITY ALD_16_13_01_1_ADD_MATRIX_BINARY_CARRY_IN_ACC
   PORT MAP (
	FPGA_CLK => FPGA_CLK,
	MB_ADD_AB0 =>
		MB_ADD_AB0,
	MB_ADD_BB0 =>
		MB_ADD_BB0,
	MB_NO_CARRY_LATCH =>
		MB_NO_CARRY_LATCH,
	MB_ADD_BB1 =>
		MB_ADD_BB1,
	MB_ADD_AB1 =>
		MB_ADD_AB1,
	MB_CARRY_LATCH =>
		MB_CARRY_LATCH,
	PB_AB0_DOT_BB0_DOT_NC =>
		PB_AB0_DOT_BB0_DOT_NC,
	PB_AB0_DOT_BB1_DOT_C =>
		PB_AB0_DOT_BB1_DOT_C,
	PB_AB1_DOT_BB0_DOT_C =>
		PB_AB1_DOT_BB0_DOT_C,
	PB_AB1_DOT_BB1_DOT_NC =>
		PB_AB1_DOT_BB1_DOT_NC,
	PB_AB0_DOT_BB1_DOT_NC =>
		PB_AB0_DOT_BB1_DOT_NC,
	PB_AB1_DOT_BB0_DOT_NC =>
		PB_AB1_DOT_BB0_DOT_NC,
	PB_AB0_DOT_BB0_DOT_C =>
		PB_AB0_DOT_BB0_DOT_C,
	PB_AB1_DOT_BB1_DOT_C =>
		PB_AB1_DOT_BB1_DOT_C
	);

Page_16_13_02_1: ENTITY ALD_16_13_02_1_ADDER_MARIX_Q0_ACC
   PORT MAP (
	FPGA_CLK => FPGA_CLK,
	MB_ADD_AQ0 =>
		MB_ADD_AQ0,
	MB_ADD_BQ0 =>
		MB_ADD_BQ0,
	MB_ADD_AQ2 =>
		MB_ADD_AQ2,
	MB_ADD_BQ8 =>
		MB_ADD_BQ8,
	MB_ADD_AQ4 =>
		MB_ADD_AQ4,
	MB_ADD_BQ6 =>
		MB_ADD_BQ6,
	MB_ADD_AQ6 =>
		MB_ADD_AQ6,
	MB_ADD_BQ4 =>
		MB_ADD_BQ4,
	MB_ADD_AQ8 =>
		MB_ADD_AQ8,
	MB_ADD_BQ2 =>
		MB_ADD_BQ2,
	PB_ADD_AQ0_DOT_BQ0 =>
		PB_ADD_AQ0_DOT_BQ0,
	PB_ADD_BQ0 =>
		PB_ADD_BQ0,
	PB_ADD_AQ2_DOT_BQ8 =>
		PB_ADD_AQ2_DOT_BQ8,
	MB_ADDER_MX_Q0 =>
		MB_ADDER_MX_Q0,
	PB_ADD_AQ4_DOT_BQ6 =>
		PB_ADD_AQ4_DOT_BQ6,
	PB_ADD_BQ4 =>
		PB_ADD_BQ4,
	PB_ADD_AQ6_DOT_BQ4 =>
		PB_ADD_AQ6_DOT_BQ4,
	PB_ADD_AQ8_DOT_BQ2 =>
		PB_ADD_AQ8_DOT_BQ2
	);

Page_16_13_03_1: ENTITY ALD_16_13_03_1_ADDER_MATRIX_Q2_ACC
   PORT MAP (
	FPGA_CLK => FPGA_CLK,
	MB_ADD_AQ0 =>
		MB_ADD_AQ0,
	MB_ADD_BQ2 =>
		MB_ADD_BQ2,
	MB_ADD_AQ2 =>
		MB_ADD_AQ2,
	MB_ADD_BQ0 =>
		MB_ADD_BQ0,
	MB_ADD_AQ4 =>
		MB_ADD_AQ4,
	MB_ADD_BQ8 =>
		MB_ADD_BQ8,
	MB_ADD_AQ6 =>
		MB_ADD_AQ6,
	MB_ADD_BQ6 =>
		MB_ADD_BQ6,
	MB_ADD_AQ8 =>
		MB_ADD_AQ8,
	MB_ADD_BQ4 =>
		MB_ADD_BQ4,
	PB_ADD_AQ0_DOT_BQ2 =>
		PB_ADD_AQ0_DOT_BQ2,
	PB_ADD_AQ2_DOT_BQ0 =>
		PB_ADD_AQ2_DOT_BQ0,
	MB_ADDER_MX_Q2 =>
		MB_ADDER_MX_Q2,
	PB_ADD_AQ4_DOT_BQ8 =>
		PB_ADD_AQ4_DOT_BQ8,
	PB_ADD_AQ6_DOT_BQ6 =>
		PB_ADD_AQ6_DOT_BQ6,
	PB_ADD_AQ8_DOT_BQ4 =>
		PB_ADD_AQ8_DOT_BQ4
	);

Page_16_13_04_1: ENTITY ALD_16_13_04_1_ADDER_MATRIX_Q4_ACC
   PORT MAP (
	FPGA_CLK => FPGA_CLK,
	MB_ADD_AQ0 =>
		MB_ADD_AQ0,
	MB_ADD_BQ4 =>
		MB_ADD_BQ4,
	MB_ADD_AQ2 =>
		MB_ADD_AQ2,
	MB_ADD_BQ2 =>
		MB_ADD_BQ2,
	MB_ADD_AQ4 =>
		MB_ADD_AQ4,
	MB_ADD_BQ0 =>
		MB_ADD_BQ0,
	MB_ADD_AQ6 =>
		MB_ADD_AQ6,
	MB_ADD_BQ8 =>
		MB_ADD_BQ8,
	MB_ADD_AQ8 =>
		MB_ADD_AQ8,
	MB_ADD_BQ6 =>
		MB_ADD_BQ6,
	PB_ADD_AQ0_DOT_BQ4 =>
		PB_ADD_AQ0_DOT_BQ4,
	PB_ADD_AQ2_DOT_BQ2 =>
		PB_ADD_AQ2_DOT_BQ2,
	MB_ADDER_MX_Q4 =>
		MB_ADDER_MX_Q4,
	PB_ADD_AQ4_DOT_BQ0 =>
		PB_ADD_AQ4_DOT_BQ0,
	PB_ADD_AQ6_DOT_BQ8 =>
		PB_ADD_AQ6_DOT_BQ8,
	PB_ADD_BQ8 =>
		PB_ADD_BQ8,
	PB_ADD_AQ8_DOT_BQ6 =>
		PB_ADD_AQ8_DOT_BQ6
	);

Page_16_13_05_1: ENTITY ALD_16_13_05_1_ADDER_MATRIX_Q6_ACC
   PORT MAP (
	FPGA_CLK => FPGA_CLK,
	MB_ADD_AQ0 =>
		MB_ADD_AQ0,
	MB_ADD_BQ6 =>
		MB_ADD_BQ6,
	MB_ADD_AQ2 =>
		MB_ADD_AQ2,
	MB_ADD_BQ4 =>
		MB_ADD_BQ4,
	MB_ADD_AQ4 =>
		MB_ADD_AQ4,
	MB_ADD_BQ2 =>
		MB_ADD_BQ2,
	MB_ADD_AQ6 =>
		MB_ADD_AQ6,
	MB_ADD_BQ0 =>
		MB_ADD_BQ0,
	MB_ADD_AQ8 =>
		MB_ADD_AQ8,
	MB_ADD_BQ8 =>
		MB_ADD_BQ8,
	PB_ADD_AQ0_DOT_BQ6 =>
		PB_ADD_AQ0_DOT_BQ6,
	PB_ADD_AQ2_DOT_BQ4 =>
		PB_ADD_AQ2_DOT_BQ4,
	MB_ADDER_MX_Q6 =>
		MB_ADDER_MX_Q6,
	PB_ADD_AQ4_DOT_BQ2 =>
		PB_ADD_AQ4_DOT_BQ2,
	PB_ADD_AQ6_DOT_BQ0 =>
		PB_ADD_AQ6_DOT_BQ0,
	PB_ADD_AQ8_DOT_BQ8 =>
		PB_ADD_AQ8_DOT_BQ8
	);

Page_16_13_06_1: ENTITY ALD_16_13_06_1_ADDER_MATRIX_Q8_ACC
   PORT MAP (
	FPGA_CLK => FPGA_CLK,
	MB_ADD_AQ0 =>
		MB_ADD_AQ0,
	MB_ADD_BQ8 =>
		MB_ADD_BQ8,
	MB_ADD_AQ2 =>
		MB_ADD_AQ2,
	MB_ADD_BQ6 =>
		MB_ADD_BQ6,
	MB_ADD_AQ4 =>
		MB_ADD_AQ4,
	MB_ADD_BQ4 =>
		MB_ADD_BQ4,
	MB_ADD_AQ6 =>
		MB_ADD_AQ6,
	MB_ADD_BQ2 =>
		MB_ADD_BQ2,
	MB_ADD_AQ8 =>
		MB_ADD_AQ8,
	MB_ADD_BQ0 =>
		MB_ADD_BQ0,
	PS_ADDER_MX_Q8 =>
		PS_ADDER_MX_Q8,
	MB_ADDER_MX_Q8 =>
		MB_ADDER_MX_Q8
	);


END;
