-- Test Bench VHDL for IBM SMS ALD page 15.49.03.1
-- Title: A CHANNEL ASSEMBLY CONTROL-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 9/12/2020 8:16:40 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_15_49_03_1_A_CHANNEL_ASSEMBLY_CONTROL_ACC_tb is
end ALD_15_49_03_1_A_CHANNEL_ASSEMBLY_CONTROL_ACC_tb;

architecture behavioral of ALD_15_49_03_1_A_CHANNEL_ASSEMBLY_CONTROL_ACC_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_15_49_03_1_A_CHANNEL_ASSEMBLY_CONTROL_ACC
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_STD_A_CYCLE_OPS_DOT_A_CYCLE:	 in STD_LOGIC;
		PS_USE_A_CH_ZONES_STAR_EDIT:	 in STD_LOGIC;
		PS_OP_MOD_REG_2_BIT:	 in STD_LOGIC;
		MS_CONTROL_REG_DISABLE:	 in STD_LOGIC;
		PS_I_CYCLE_1:	 in STD_LOGIC;
		MS_1401_DOT_I_RING_5_OR_10_TIME_DOT_I_CY:	 in STD_LOGIC;
		PS_INPUT_CYCLE_NOT_LAST_INPUT:	 in STD_LOGIC;
		PS_A_CH_VALID_OR_AST_SWITCH_OFF:	 in STD_LOGIC;
		MS_A_CH_CHAR_NOT_A_BIT:	 in STD_LOGIC;
		MS_ODD_PARITY_CYCLE:	 in STD_LOGIC;
		PS_B_CYCLE_1:	 in STD_LOGIC;
		PS_DATA_MOVE_OP_CODE:	 in STD_LOGIC;
		MS_RA_OR_RS_DOT_B_DOT_U_OR_Y_DOT_1401:	 in STD_LOGIC;
		MS_G_OP_DOT_C_CYCLE:	 in STD_LOGIC;
		PS_OP_MOD_REG_1_BIT:	 in STD_LOGIC;
		MS_I_CYCLE:	 in STD_LOGIC;
		PS_EDIT_USE_A_CH_NU:	 in STD_LOGIC;
		MS_1401_H_OR_Q_DOT_A_CYCLE:	 in STD_LOGIC;
		PS_USE_A_CH_ZONES:	 out STD_LOGIC;
		PS_USE_A_CH_NU:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal MS_STD_A_CYCLE_OPS_DOT_A_CYCLE: STD_LOGIC := '1';
	signal PS_USE_A_CH_ZONES_STAR_EDIT: STD_LOGIC := '0';
	signal PS_OP_MOD_REG_2_BIT: STD_LOGIC := '0';
	signal MS_CONTROL_REG_DISABLE: STD_LOGIC := '1';
	signal PS_I_CYCLE_1: STD_LOGIC := '0';
	signal MS_1401_DOT_I_RING_5_OR_10_TIME_DOT_I_CY: STD_LOGIC := '1';
	signal PS_INPUT_CYCLE_NOT_LAST_INPUT: STD_LOGIC := '0';
	signal PS_A_CH_VALID_OR_AST_SWITCH_OFF: STD_LOGIC := '0';
	signal MS_A_CH_CHAR_NOT_A_BIT: STD_LOGIC := '1';
	signal MS_ODD_PARITY_CYCLE: STD_LOGIC := '1';
	signal PS_B_CYCLE_1: STD_LOGIC := '0';
	signal PS_DATA_MOVE_OP_CODE: STD_LOGIC := '0';
	signal MS_RA_OR_RS_DOT_B_DOT_U_OR_Y_DOT_1401: STD_LOGIC := '1';
	signal MS_G_OP_DOT_C_CYCLE: STD_LOGIC := '1';
	signal PS_OP_MOD_REG_1_BIT: STD_LOGIC := '0';
	signal MS_I_CYCLE: STD_LOGIC := '1';
	signal PS_EDIT_USE_A_CH_NU: STD_LOGIC := '0';
	signal MS_1401_H_OR_Q_DOT_A_CYCLE: STD_LOGIC := '1';

	-- Outputs

	signal PS_USE_A_CH_ZONES: STD_LOGIC;
	signal PS_USE_A_CH_NU: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

   constant MX_X1A_POS: integer := 7;
   constant MX_X6A_POS: integer := 8;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_15_49_03_1_A_CHANNEL_ASSEMBLY_CONTROL_ACC port map(
		FPGA_CLK => FPGA_CLK,
		MS_STD_A_CYCLE_OPS_DOT_A_CYCLE => MS_STD_A_CYCLE_OPS_DOT_A_CYCLE,
		PS_USE_A_CH_ZONES_STAR_EDIT => PS_USE_A_CH_ZONES_STAR_EDIT,
		PS_OP_MOD_REG_2_BIT => PS_OP_MOD_REG_2_BIT,
		MS_CONTROL_REG_DISABLE => MS_CONTROL_REG_DISABLE,
		PS_I_CYCLE_1 => PS_I_CYCLE_1,
		MS_1401_DOT_I_RING_5_OR_10_TIME_DOT_I_CY => MS_1401_DOT_I_RING_5_OR_10_TIME_DOT_I_CY,
		PS_INPUT_CYCLE_NOT_LAST_INPUT => PS_INPUT_CYCLE_NOT_LAST_INPUT,
		PS_A_CH_VALID_OR_AST_SWITCH_OFF => PS_A_CH_VALID_OR_AST_SWITCH_OFF,
		MS_A_CH_CHAR_NOT_A_BIT => MS_A_CH_CHAR_NOT_A_BIT,
		MS_ODD_PARITY_CYCLE => MS_ODD_PARITY_CYCLE,
		PS_B_CYCLE_1 => PS_B_CYCLE_1,
		PS_DATA_MOVE_OP_CODE => PS_DATA_MOVE_OP_CODE,
		MS_RA_OR_RS_DOT_B_DOT_U_OR_Y_DOT_1401 => MS_RA_OR_RS_DOT_B_DOT_U_OR_Y_DOT_1401,
		MS_G_OP_DOT_C_CYCLE => MS_G_OP_DOT_C_CYCLE,
		PS_OP_MOD_REG_1_BIT => PS_OP_MOD_REG_1_BIT,
		MS_I_CYCLE => MS_I_CYCLE,
		PS_EDIT_USE_A_CH_NU => PS_EDIT_USE_A_CH_NU,
		MS_1401_H_OR_Q_DOT_A_CYCLE => MS_1401_H_OR_Q_DOT_A_CYCLE,
		PS_USE_A_CH_ZONES => PS_USE_A_CH_ZONES,
		PS_USE_A_CH_NU => PS_USE_A_CH_NU);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;
   variable tv: std_logic_vector(17 downto 0);
   variable a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r: std_logic;
   variable g1, g2, g3, g4, g5, g6: std_logic;

   begin

   -- Your test bench code

   testName := "15.49.03.1        ";

   for tt in 0 to 2**18 loop
      tv := std_logic_vector(to_unsigned(tt,tv'Length));
      a := tv(0);
      b := tv(1);
      c := tv(2);
      d := tv(3);
      e := tv(4);
      f := tv(5);
      g := tv(6);
      h := tv(7);
      i := tv(8);
      j := tv(9);
      k := tv(10);
      l := tv(11);
      m := tv(12);
      n := tv(13);
      o := tv(14);
      p := tv(15);
      q := tv(16);
      r := tv(17);
      
      g1 := l and c and k;
      g2 := e and not f;
      g3 := g and h and (i or j);
      g4 := l and o and k;
      
	   MS_STD_A_CYCLE_OPS_DOT_A_CYCLE <= not a;
      PS_USE_A_CH_ZONES_STAR_EDIT <= b;
      PS_OP_MOD_REG_2_BIT <= c;
      MS_CONTROL_REG_DISABLE <= not d;
      PS_I_CYCLE_1 <= e;
      MS_1401_DOT_I_RING_5_OR_10_TIME_DOT_I_CY <= not f;
      PS_INPUT_CYCLE_NOT_LAST_INPUT <= g;
      PS_A_CH_VALID_OR_AST_SWITCH_OFF <= h;
      MS_A_CH_CHAR_NOT_A_BIT <= not i;
      MS_ODD_PARITY_CYCLE <= not j;
      PS_B_CYCLE_1 <= k;
      PS_DATA_MOVE_OP_CODE <= l;
      MS_RA_OR_RS_DOT_B_DOT_U_OR_Y_DOT_1401 <= not m;
      MS_G_OP_DOT_C_CYCLE <= not n;
      PS_OP_MOD_REG_1_BIT <= o;
      MS_I_CYCLE <= not p;
      PS_EDIT_USE_A_CH_NU <= q;
      MS_1401_H_OR_Q_DOT_A_CYCLE <= not r;

      wait for 30 ns;
      
      check1(PS_USE_A_CH_ZONES,b or a or d or g1 or g2 or g3,testName,"Use A Ch Zones");
      check1(PS_USE_A_CH_NU,g3 or q or p or r or n or g4 or d or a or m,testName,"Use A Ch NU");
      
   end loop;


   assert false report "Simulation Ended NORMALLY" severity failure;

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 20 ms;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY (TIMEOUT)" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

end;
