-- VHDL for IBM SMS ALD page 12.50.01.1
-- Title: MEMORY LOAD CONTROLS FEATURE-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 5/13/2022 1:16:00 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_12_50_01_1_MEMORY_LOAD_CONTROLS_FEATURE_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_1ST_SCAN:	 in STD_LOGIC;
		PS_CLEAR_OP_CODE:	 in STD_LOGIC;
		MS_ALT_ROUTINE_DOT_2ND_SCAN:	 in STD_LOGIC;
		MS_MPLY_DOT_N_OR_1_OR_2_DOT_D:	 in STD_LOGIC;
		PS_A_CYCLE:	 in STD_LOGIC;
		PS_1401_STORE_AR_OP_CODES:	 in STD_LOGIC;
		PS_B_CYCLE_1:	 in STD_LOGIC;
		MS_STORAGE_SCAN_LOAD:	 in STD_LOGIC;
		PS_B_CH_NOT_GROUP_MARK_WM:	 in STD_LOGIC;
		MS_ANY_CHECK_TEST:	 in STD_LOGIC;
		PS_INPUT_CYCLE:	 in STD_LOGIC;
		PS_I_O_END_OF_STG_STOP_CTRL:	 in STD_LOGIC;
		PS_A_OR_B_CYCLE:	 in STD_LOGIC;
		PS_WORD_MARK_OP_CODES:	 in STD_LOGIC;
		PS_LOAD_MEM_ON_B_CY_OP_CODES:	 in STD_LOGIC;
		PS_C_CYCLE:	 in STD_LOGIC;
		PS_STORE_ADDR_REGS_OP_CODE:	 in STD_LOGIC;
		MY_LOAD_MEMORY:	 out STD_LOGIC;
		PS_INPUT_CYCLE_DOT_LOAD:	 out STD_LOGIC);
end ALD_12_50_01_1_MEMORY_LOAD_CONTROLS_FEATURE_ACC;

architecture behavioral of ALD_12_50_01_1_MEMORY_LOAD_CONTROLS_FEATURE_ACC is 

	signal OUT_4A_D: STD_LOGIC;
	signal OUT_3B_D: STD_LOGIC;
	signal OUT_5C_C: STD_LOGIC;
	signal OUT_5D_B: STD_LOGIC;
	signal OUT_3D_E: STD_LOGIC;
	signal OUT_2D_R: STD_LOGIC;
	signal OUT_2D_R_Latch: STD_LOGIC;
	signal OUT_5E_K: STD_LOGIC;
	signal OUT_4E_G: STD_LOGIC;
	signal OUT_2E_F: STD_LOGIC;
	signal OUT_2E_F_Latch: STD_LOGIC;
	signal OUT_5F_C: STD_LOGIC;
	signal OUT_3F_K: STD_LOGIC;
	signal OUT_5G_NoPin: STD_LOGIC;
	signal OUT_5H_NoPin: STD_LOGIC;
	signal OUT_3H_F: STD_LOGIC;
	signal OUT_5I_NoPin: STD_LOGIC;
	signal OUT_DOT_3D: STD_LOGIC;
	signal OUT_DOT_2D: STD_LOGIC;
	signal OUT_DOT_5E: STD_LOGIC;

begin

	OUT_4A_D <= NOT(PS_CLEAR_OP_CODE AND PS_B_CYCLE_1 AND PS_1ST_SCAN );
	OUT_3B_D <= NOT(OUT_4A_D AND MS_MPLY_DOT_N_OR_1_OR_2_DOT_D AND MS_ALT_ROUTINE_DOT_2ND_SCAN );
	OUT_5C_C <= NOT(PS_A_CYCLE AND PS_1401_STORE_AR_OP_CODES );
	OUT_5D_B <= NOT PS_B_CH_NOT_GROUP_MARK_WM;
	OUT_3D_E <= NOT(OUT_5C_C AND MS_STORAGE_SCAN_LOAD );
	OUT_2D_R_Latch <= NOT OUT_DOT_3D;
	OUT_5E_K <= NOT(PS_INPUT_CYCLE );
	OUT_4E_G <= NOT(OUT_DOT_5E AND OUT_5F_C );
	OUT_2E_F_Latch <= NOT MS_ANY_CHECK_TEST;
	OUT_5F_C <= NOT(PS_INPUT_CYCLE AND PS_I_O_END_OF_STG_STOP_CTRL );
	OUT_3F_K <= NOT(OUT_5F_C AND OUT_DOT_5E );
	OUT_5G_NoPin <= NOT(PS_A_OR_B_CYCLE AND PS_WORD_MARK_OP_CODES );
	OUT_5H_NoPin <= NOT(PS_LOAD_MEM_ON_B_CY_OP_CODES AND PS_B_CYCLE_1 );
	OUT_3H_F <= NOT(OUT_5G_NoPin AND OUT_5H_NoPin AND OUT_5I_NoPin );
	OUT_5I_NoPin <= NOT(PS_C_CYCLE AND PS_STORE_ADDR_REGS_OP_CODE );
	OUT_DOT_3D <= OUT_3B_D OR OUT_3D_E OR OUT_3F_K OR OUT_3H_F;
	OUT_DOT_2D <= OUT_2D_R OR OUT_2E_F;
	OUT_DOT_5E <= OUT_5D_B OR OUT_5E_K;

	PS_INPUT_CYCLE_DOT_LOAD <= OUT_4E_G;
	MY_LOAD_MEMORY <= OUT_DOT_2D;

	Latch_2D: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2D_R_Latch,
		Q => OUT_2D_R,
		QBar => OPEN );

	Latch_2E: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2E_F_Latch,
		Q => OUT_2E_F,
		QBar => OPEN );


end;
