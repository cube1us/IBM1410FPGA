-- VHDL for IBM SMS ALD page 16.20.15.1
-- Title: TRUE AND COMP LATCHES-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/3/2020 2:33:08 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_16_20_15_1_TRUE_AND_COMP_LATCHES_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MB_START_COMPL_ADD_1:	 in STD_LOGIC;
		MB_START_COMPL_ADD_2:	 in STD_LOGIC;
		PS_SET_COMPL_CTRL_LATCH:	 in STD_LOGIC;
		PS_LAST_LOGIC_GATE_2:	 in STD_LOGIC;
		PS_LOGIC_GATE_C_1:	 in STD_LOGIC;
		MS_LOGIC_GATE_D_1:	 in STD_LOGIC;
		MS_PROGRAM_RESET_5:	 in STD_LOGIC;
		MS_LOGIC_GATE_B_1:	 in STD_LOGIC;
		PS_REGEN_COMPL:	 in STD_LOGIC;
		PS_COMPARE_TYPE_OP_CODES:	 in STD_LOGIC;
		PS_1ST_SCAN:	 in STD_LOGIC;
		PS_ADDER_A_CH_USE_T_OR_C:	 in STD_LOGIC;
		PB_COMPLEMENT_LATCH:	 out STD_LOGIC;
		PB_COMP_ADD_A:	 out STD_LOGIC;
		PS_COMPLEMENT_LATCH:	 out STD_LOGIC;
		MS_CMP_OP_CODES_DOT_1ST_SCAN:	 out STD_LOGIC;
		MB_COMPLEMENT_LATCH:	 out STD_LOGIC;
		LAMP_15A1E11:	 out STD_LOGIC);
end ALD_16_20_15_1_TRUE_AND_COMP_LATCHES_ACC;

architecture behavioral of ALD_16_20_15_1_TRUE_AND_COMP_LATCHES_ACC is 

	signal OUT_2A_C: STD_LOGIC;
	signal OUT_5B_NoPin: STD_LOGIC;
	signal OUT_2B_C: STD_LOGIC;
	signal OUT_4C_B: STD_LOGIC;
	signal OUT_3C_C: STD_LOGIC;
	signal OUT_2C_E: STD_LOGIC;
	signal OUT_5D_NoPin: STD_LOGIC;
	signal OUT_5D_NoPin_Latch: STD_LOGIC;
	signal OUT_4D_D: STD_LOGIC;
	signal OUT_4D_D_Latch: STD_LOGIC;
	signal OUT_3D_NoPin: STD_LOGIC;
	signal OUT_3D_NoPin_Latch: STD_LOGIC;
	signal OUT_5E_NoPin: STD_LOGIC;
	signal OUT_5E_NoPin_Latch: STD_LOGIC;
	signal OUT_3E_D: STD_LOGIC;
	signal OUT_3E_D_Latch: STD_LOGIC;
	signal OUT_2E_F: STD_LOGIC;
	signal OUT_2E_F_Latch: STD_LOGIC;
	signal OUT_1E_A: STD_LOGIC;
	signal OUT_5F_K: STD_LOGIC;
	signal OUT_4F_A: STD_LOGIC;
	signal OUT_3F_A: STD_LOGIC;
	signal OUT_1F_Q: STD_LOGIC;
	signal OUT_4G_B: STD_LOGIC;
	signal OUT_1G_Q: STD_LOGIC;
	signal OUT_1G_Q_Latch: STD_LOGIC;
	signal OUT_5H_C: STD_LOGIC;
	signal OUT_4H_H: STD_LOGIC;
	signal OUT_2H_M: STD_LOGIC;
	signal OUT_3I_P: STD_LOGIC;
	signal OUT_2I_K: STD_LOGIC;
	signal OUT_DOT_2E: STD_LOGIC;

begin

	OUT_2A_C <= NOT(MB_START_COMPL_ADD_2 AND MB_START_COMPL_ADD_1 );
	OUT_5B_NoPin <= NOT(PS_LAST_LOGIC_GATE_2 AND PS_SET_COMPL_CTRL_LATCH );
	OUT_2B_C <= NOT OUT_3E_D;
	OUT_4C_B <= NOT(MB_START_COMPL_ADD_1 AND MB_START_COMPL_ADD_2 );
	OUT_3C_C <= NOT(OUT_4C_B AND OUT_3F_A );
	OUT_2C_E <= NOT(OUT_3C_C AND OUT_1E_A );
	OUT_5D_NoPin_Latch <= NOT(MS_LOGIC_GATE_D_1 AND MS_PROGRAM_RESET_5 AND OUT_4D_D );
	OUT_4D_D_Latch <= NOT(OUT_5B_NoPin AND OUT_5D_NoPin AND OUT_5E_NoPin );
	OUT_3D_NoPin_Latch <= NOT(OUT_4D_D AND PS_LOGIC_GATE_C_1 );
	OUT_5E_NoPin_Latch <= NOT(PS_LAST_LOGIC_GATE_2 AND OUT_1G_Q AND PS_REGEN_COMPL );
	OUT_3E_D_Latch <= NOT(MS_LOGIC_GATE_B_1 AND MS_PROGRAM_RESET_5 AND OUT_DOT_2E );
	OUT_2E_F_Latch <= NOT(OUT_3D_NoPin AND OUT_3E_D );
	OUT_1E_A <= NOT OUT_4H_H;
	OUT_5F_K <= NOT(PS_COMPARE_TYPE_OP_CODES AND PS_1ST_SCAN );
	OUT_4F_A <= NOT PS_ADDER_A_CH_USE_T_OR_C;
	OUT_3F_A <= NOT OUT_4F_A;
	OUT_1F_Q <= OUT_DOT_2E;
	OUT_4G_B <= NOT OUT_5F_K;
	OUT_1G_Q_Latch <= OUT_DOT_2E;
	OUT_5H_C <= NOT(OUT_1G_Q AND PS_ADDER_A_CH_USE_T_OR_C );

	SMS_AEK_4H: entity SMS_AEK
	    port map (
		IN2 => OUT_4G_B,	-- Pin B
		IN1 => OUT_5H_C,	-- Pin P
		OUT1 => OUT_4H_H );

	OUT_2H_M <= NOT OUT_1F_Q;
	OUT_3I_P <= NOT(OUT_4H_H );
	OUT_2I_K <= NOT OUT_3I_P;
	LAMP_15A1E11 <= OUT_2I_K;
	OUT_DOT_2E <= OUT_2A_C OR OUT_2E_F;

	PB_COMPLEMENT_LATCH <= OUT_2B_C;
	PB_COMP_ADD_A <= OUT_2C_E;
	MS_CMP_OP_CODES_DOT_1ST_SCAN <= OUT_5F_K;
	PS_COMPLEMENT_LATCH <= OUT_1F_Q;
	MB_COMPLEMENT_LATCH <= OUT_2H_M;

	Latch_5D: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_5D_NoPin_Latch,
		Q => OUT_5D_NoPin,
		QBar => OPEN );

	Latch_4D: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4D_D_Latch,
		Q => OUT_4D_D,
		QBar => OPEN );

	Latch_3D: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3D_NoPin_Latch,
		Q => OUT_3D_NoPin,
		QBar => OPEN );

	Latch_5E: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_5E_NoPin_Latch,
		Q => OUT_5E_NoPin,
		QBar => OPEN );

	Latch_3E: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3E_D_Latch,
		Q => OUT_3E_D,
		QBar => OPEN );

	Latch_2E: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2E_F_Latch,
		Q => OUT_2E_F,
		QBar => OPEN );

	Latch_1G: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_1G_Q_Latch,
		Q => OUT_1G_Q,
		QBar => OPEN );


end;
