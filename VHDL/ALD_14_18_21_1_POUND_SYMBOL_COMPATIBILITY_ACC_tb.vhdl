-- Test Bench VHDL for IBM SMS ALD page 14.18.21.1
-- Title: POUND SYMBOL COMPATIBILITY-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 8/28/2020 9:35:11 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_14_18_21_1_POUND_SYMBOL_COMPATIBILITY_ACC_tb is
end ALD_14_18_21_1_POUND_SYMBOL_COMPATIBILITY_ACC_tb;

architecture behavioral of ALD_14_18_21_1_POUND_SYMBOL_COMPATIBILITY_ACC_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_14_18_21_1_POUND_SYMBOL_COMPATIBILITY_ACC
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_B_CYCLE_1:	 in STD_LOGIC;
		PS_1401_POUND_SIGN_OP_CODE:	 in STD_LOGIC;
		PS_UNITS_LATCH:	 in STD_LOGIC;
		PS_1ST_SCAN:	 in STD_LOGIC;
		PS_BODY_LATCH:	 in STD_LOGIC;
		PS_1ST_OR_3RD_SCAN:	 in STD_LOGIC;
		PS_3RD_SCAN:	 in STD_LOGIC;
		PS_EXTENSION_LATCH:	 in STD_LOGIC;
		PS_ZONE_ADDER_CARRY:	 in STD_LOGIC;
		MS_ZONE_ADDER_CARRY:	 in STD_LOGIC;
		PS_LAST_INSN_RO_CYCLE_2:	 in STD_LOGIC;
		MS_LB_OP_DOT_B_CY:	 out STD_LOGIC;
		MS_LB_DOT_B_CYCLE_DOT_1ST_SCAN_DOT_UNITS:	 out STD_LOGIC;
		MS_LB_DOT_B_CYCLE_DOT_1ST_SCAN:	 out STD_LOGIC;
		MS_LB_DOT_B_CYCLE_DOT_BODY_LATCH:	 out STD_LOGIC;
		MS_LB_DOT_B_CYCLE_DOT_EXTENSION_LATCH:	 out STD_LOGIC;
		MS_LB_OP_DOT_1ST_OR_3RD_SCAN:	 out STD_LOGIC;
		MS_LB_DOT_B_CYCLE_DOT_3RD_SCAN_DOT_UNITS:	 out STD_LOGIC;
		MS_LB_DOT_B_CYCLE_DOT_EXT_DOT_ZONE_CARRY:	 out STD_LOGIC;
		MS_LB_DOT_B_CYCLE_DOT_EXT_DOT_NO_ZONE_CAR:	 out STD_LOGIC;
		MS_LB_OP_DOT_LIROC:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_B_CYCLE_1: STD_LOGIC := '0';
	signal PS_1401_POUND_SIGN_OP_CODE: STD_LOGIC := '0';
	signal PS_UNITS_LATCH: STD_LOGIC := '0';
	signal PS_1ST_SCAN: STD_LOGIC := '0';
	signal PS_BODY_LATCH: STD_LOGIC := '0';
	signal PS_1ST_OR_3RD_SCAN: STD_LOGIC := '0';
	signal PS_3RD_SCAN: STD_LOGIC := '0';
	signal PS_EXTENSION_LATCH: STD_LOGIC := '0';
	signal PS_ZONE_ADDER_CARRY: STD_LOGIC := '0';
	signal MS_ZONE_ADDER_CARRY: STD_LOGIC := '1';
	signal PS_LAST_INSN_RO_CYCLE_2: STD_LOGIC := '0';

	-- Outputs

	signal MS_LB_OP_DOT_B_CY: STD_LOGIC;
	signal MS_LB_DOT_B_CYCLE_DOT_1ST_SCAN_DOT_UNITS: STD_LOGIC;
	signal MS_LB_DOT_B_CYCLE_DOT_1ST_SCAN: STD_LOGIC;
	signal MS_LB_DOT_B_CYCLE_DOT_BODY_LATCH: STD_LOGIC;
	signal MS_LB_DOT_B_CYCLE_DOT_EXTENSION_LATCH: STD_LOGIC;
	signal MS_LB_OP_DOT_1ST_OR_3RD_SCAN: STD_LOGIC;
	signal MS_LB_DOT_B_CYCLE_DOT_3RD_SCAN_DOT_UNITS: STD_LOGIC;
	signal MS_LB_DOT_B_CYCLE_DOT_EXT_DOT_ZONE_CARRY: STD_LOGIC;
	signal MS_LB_DOT_B_CYCLE_DOT_EXT_DOT_NO_ZONE_CAR: STD_LOGIC;
	signal MS_LB_OP_DOT_LIROC: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_14_18_21_1_POUND_SYMBOL_COMPATIBILITY_ACC port map(
		FPGA_CLK => FPGA_CLK,
		PS_B_CYCLE_1 => PS_B_CYCLE_1,
		PS_1401_POUND_SIGN_OP_CODE => PS_1401_POUND_SIGN_OP_CODE,
		PS_UNITS_LATCH => PS_UNITS_LATCH,
		PS_1ST_SCAN => PS_1ST_SCAN,
		PS_BODY_LATCH => PS_BODY_LATCH,
		PS_1ST_OR_3RD_SCAN => PS_1ST_OR_3RD_SCAN,
		PS_3RD_SCAN => PS_3RD_SCAN,
		PS_EXTENSION_LATCH => PS_EXTENSION_LATCH,
		PS_ZONE_ADDER_CARRY => PS_ZONE_ADDER_CARRY,
		MS_ZONE_ADDER_CARRY => MS_ZONE_ADDER_CARRY,
		PS_LAST_INSN_RO_CYCLE_2 => PS_LAST_INSN_RO_CYCLE_2,
		MS_LB_OP_DOT_B_CY => MS_LB_OP_DOT_B_CY,
		MS_LB_DOT_B_CYCLE_DOT_1ST_SCAN_DOT_UNITS => MS_LB_DOT_B_CYCLE_DOT_1ST_SCAN_DOT_UNITS,
		MS_LB_DOT_B_CYCLE_DOT_1ST_SCAN => MS_LB_DOT_B_CYCLE_DOT_1ST_SCAN,
		MS_LB_DOT_B_CYCLE_DOT_BODY_LATCH => MS_LB_DOT_B_CYCLE_DOT_BODY_LATCH,
		MS_LB_DOT_B_CYCLE_DOT_EXTENSION_LATCH => MS_LB_DOT_B_CYCLE_DOT_EXTENSION_LATCH,
		MS_LB_OP_DOT_1ST_OR_3RD_SCAN => MS_LB_OP_DOT_1ST_OR_3RD_SCAN,
		MS_LB_DOT_B_CYCLE_DOT_3RD_SCAN_DOT_UNITS => MS_LB_DOT_B_CYCLE_DOT_3RD_SCAN_DOT_UNITS,
		MS_LB_DOT_B_CYCLE_DOT_EXT_DOT_ZONE_CARRY => MS_LB_DOT_B_CYCLE_DOT_EXT_DOT_ZONE_CARRY,
		MS_LB_DOT_B_CYCLE_DOT_EXT_DOT_NO_ZONE_CAR => MS_LB_DOT_B_CYCLE_DOT_EXT_DOT_NO_ZONE_CAR,
		MS_LB_OP_DOT_LIROC => MS_LB_OP_DOT_LIROC);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

end;
