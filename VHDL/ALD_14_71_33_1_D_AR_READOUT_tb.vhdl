-- Test Bench VHDL for IBM SMS ALD page 14.71.33.1
-- Title: D AR READOUT
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 9/6/2020 8:11:27 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_14_71_33_1_D_AR_READOUT_tb is
end ALD_14_71_33_1_D_AR_READOUT_tb;

architecture behavioral of ALD_14_71_33_1_D_AR_READOUT_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_14_71_33_1_D_AR_READOUT
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_INDEX_REQUIRED:	 in STD_LOGIC;
		PS_I_RING_10_TIME:	 in STD_LOGIC;
		PS_B_TO_LAST_LOGIC_GATE:	 in STD_LOGIC;
		MS_CONSOLE_INHIBIT_AR_RO:	 in STD_LOGIC;
		PS_LOGIC_GATE_SPECIAL_A:	 in STD_LOGIC;
		PS_D_AR_RO_CTRL_STAR_ARITH:	 in STD_LOGIC;
		MV_CE_RO_D_AR:	 in STD_LOGIC;
		PS_1311_RO_DAR_STAR_1401:	 in STD_LOGIC;
		PS_DISPLAY_ROUTINE_1:	 in STD_LOGIC;
		PS_CONS_MX_32_POS:	 in STD_LOGIC;
		PS_CONSOLE_STROBE:	 in STD_LOGIC;
		PS_DISPLAY_OR_ALTER:	 in STD_LOGIC;
		PS_CONS_MX_33_POS:	 in STD_LOGIC;
		PS_NO_SCAN_CTRL:	 in STD_LOGIC;
		PS_ALTER_ROUTINE:	 in STD_LOGIC;
		PS_RO_D_AR:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_INDEX_REQUIRED: STD_LOGIC := '0';
	signal PS_I_RING_10_TIME: STD_LOGIC := '0';
	signal PS_B_TO_LAST_LOGIC_GATE: STD_LOGIC := '0';
	signal MS_CONSOLE_INHIBIT_AR_RO: STD_LOGIC := '1';
	signal PS_LOGIC_GATE_SPECIAL_A: STD_LOGIC := '0';
	signal PS_D_AR_RO_CTRL_STAR_ARITH: STD_LOGIC := '0';
	signal MV_CE_RO_D_AR: STD_LOGIC := '1';
	signal PS_1311_RO_DAR_STAR_1401: STD_LOGIC := '0';
	signal PS_DISPLAY_ROUTINE_1: STD_LOGIC := '0';
	signal PS_CONS_MX_32_POS: STD_LOGIC := '0';
	signal PS_CONSOLE_STROBE: STD_LOGIC := '0';
	signal PS_DISPLAY_OR_ALTER: STD_LOGIC := '0';
	signal PS_CONS_MX_33_POS: STD_LOGIC := '0';
	signal PS_NO_SCAN_CTRL: STD_LOGIC := '0';
	signal PS_ALTER_ROUTINE: STD_LOGIC := '0';

	-- Outputs

	signal PS_RO_D_AR: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_14_71_33_1_D_AR_READOUT port map(
		FPGA_CLK => FPGA_CLK,
		PS_INDEX_REQUIRED => PS_INDEX_REQUIRED,
		PS_I_RING_10_TIME => PS_I_RING_10_TIME,
		PS_B_TO_LAST_LOGIC_GATE => PS_B_TO_LAST_LOGIC_GATE,
		MS_CONSOLE_INHIBIT_AR_RO => MS_CONSOLE_INHIBIT_AR_RO,
		PS_LOGIC_GATE_SPECIAL_A => PS_LOGIC_GATE_SPECIAL_A,
		PS_D_AR_RO_CTRL_STAR_ARITH => PS_D_AR_RO_CTRL_STAR_ARITH,
		MV_CE_RO_D_AR => MV_CE_RO_D_AR,
		PS_1311_RO_DAR_STAR_1401 => PS_1311_RO_DAR_STAR_1401,
		PS_DISPLAY_ROUTINE_1 => PS_DISPLAY_ROUTINE_1,
		PS_CONS_MX_32_POS => PS_CONS_MX_32_POS,
		PS_CONSOLE_STROBE => PS_CONSOLE_STROBE,
		PS_DISPLAY_OR_ALTER => PS_DISPLAY_OR_ALTER,
		PS_CONS_MX_33_POS => PS_CONS_MX_33_POS,
		PS_NO_SCAN_CTRL => PS_NO_SCAN_CTRL,
		PS_ALTER_ROUTINE => PS_ALTER_ROUTINE,
		PS_RO_D_AR => PS_RO_D_AR);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;
   variable tv: std_logic_vector(18 downto 0);
   variable a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s: std_logic;
   variable g1, g2, g3, g4, g5, g6: std_logic;

   begin

   -- Your test bench code

   testName := "14.71.33.1        ";
     
   for tt in 0 to 32768 loop  
      tv := std_logic_vector(to_unsigned(tt,tv'Length));
      a := tv(0); 
      b := tv(1);
      c := tv(2);
      d := tv(3);
      e := tv(4);
      f := tv(5);
      g := tv(6);
      h := tv(7);
      i := tv(8);
      j := tv(9);
      k := tv(10);
      l := tv(11);
      m := tv(12);
      n := tv(13);
      o := tv(14);

	  PS_INDEX_REQUIRED <= a;
	  PS_I_RING_10_TIME <= b;
	  PS_B_TO_LAST_LOGIC_GATE <= c;
	  MS_CONSOLE_INHIBIT_AR_RO <= not d;
	  PS_LOGIC_GATE_SPECIAL_A <= e;
	  PS_D_AR_RO_CTRL_STAR_ARITH <= f;
	  MV_CE_RO_D_AR <= not g;
	  PS_1311_RO_DAR_STAR_1401 <= h;
	  PS_DISPLAY_ROUTINE_1 <= i;
	  PS_CONS_MX_32_POS <= j;
	  PS_CONSOLE_STROBE <= k;
	  PS_DISPLAY_OR_ALTER <= l;
	  PS_CONS_MX_33_POS <= m;
	  PS_NO_SCAN_CTRL <= n;
	  PS_ALTER_ROUTINE <= o;

      wait for 30 ns;
   
      check1(PS_RO_D_AR,
         h or g or (n and o) or (m and l and k) or (k and i and j) or (f and e and not d) or (not d and c and b and a),
         testName,"RO C AR");
         
      if(PS_RO_D_AR /= '0' and PS_RO_D_AR /= '1') then
         assert false report "Simulation UNDEFINED" severity failure;
      end if;   
         
      
   end loop;


   assert false report "Simulation Ended NORMALLY" severity failure;

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 32 ms;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY (TIMEOUT)" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

end;
