-- Test BenchVHDL for IBM SMS ALD group NoBranchConditions
-- Title: NoBranchConditions
-- IBM Machine Name 1411
-- Generated by GenerateHDL on 7/12/2020 10:42:08 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity NoBranchConditions_tb is
end NoBranchConditions_tb;

architecture behavioral of NoBranchConditions_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component NoBranchConditions
	    Port (
		FPGA_CLK: in STD_LOGIC;
		PS_LAST_INSN_RO_CYCLE: in STD_LOGIC;
		PS_HIGH_OR_LOW: in STD_LOGIC;
		PS_W_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_NOT_DIV_OVERFLOW: in STD_LOGIC;
		PS_S_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		MS_HIGH: in STD_LOGIC;
		PS_T_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_SLASH_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_EQUAL: in STD_LOGIC;
		MS_EQUAL: in STD_LOGIC;
		PS_1401_MODE: in STD_LOGIC;
		PS_V_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_NOT_ZR_BAL_LATCH: in STD_LOGIC;
		PS_Z_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_NO_OVERFLOW: in STD_LOGIC;
		PS_COND_TEST_BRANCH_OP_CODE: in STD_LOGIC;
		MS_LOW: in STD_LOGIC;
		PS_U_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		PS_E_CH_NOT_READY: in STD_LOGIC;
		PS_E_CH_BUSY: in STD_LOGIC;
		PS_E_CH_CHECK: in STD_LOGIC;
		PS_E_CH_CONDITION: in STD_LOGIC;
		MS_E_CH_CORRECT_LENGTH_RECORD: in STD_LOGIC;
		PS_E_CH_NO_TRANSFER_LATCH: in STD_LOGIC;
		PS_BRANCH_ON_STATUS_CH_1: in STD_LOGIC;
		PS_ONE_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		MS_E_CH_OVLP_IN_PROCESS: in STD_LOGIC;
		PS_TWO_SYMBOL_OP_MODIFIER: in STD_LOGIC;
		MS_F_CH_OVLP_IN_PROCESS: in STD_LOGIC;
		PS_OP_MOD_SYM_FOR_I_O_STATUS: in STD_LOGIC;
		MS_SPECIAL_BRANCH_LATCH: in STD_LOGIC;
		PS_B_CYCLE: in STD_LOGIC;
		PS_1ST_SCAN: in STD_LOGIC;
		PS_CHAR_TEST_BRANCH_OP_CODE: in STD_LOGIC;
		MS_CMP_LOW: in STD_LOGIC;
		MS_CMP_HIGH: in STD_LOGIC;
		PS_BIT_TEST_BRANCH_OP_CODE: in STD_LOGIC;
		PS_I_RING_1_OR_6_TIME: in STD_LOGIC;
		PS_I_RING_1_OR_1401_AND_3_TIME: in STD_LOGIC;
		PS_PROCESS_ROUTINE: in STD_LOGIC;
		PS_NO_SCAN: in STD_LOGIC;
		PS_STOP_DOT_BRANCH_OP_CODE: in STD_LOGIC;
		PS_NO_BRANCH_COND_STAR_1412_19: in STD_LOGIC;
		PS_CLEAR_OP_CODE: in STD_LOGIC;
		PS_LAST_EXECUTE_CYCLE_STAR_1412_19: in STD_LOGIC;
		PS_B_CH_WM_BIT_1: in STD_LOGIC;
		MS_CMP_ZONE_UNEQUAL: in STD_LOGIC;
		PS_ZN_OR_WM_TST_BRANCH_OP_CODE: in STD_LOGIC;
		MS_1401_BRANCH_LATCH: in STD_LOGIC;
		MS_NO_BRANCH_LATCH: in STD_LOGIC;
		MS_NO_BRANCH_CND_INTERRUPT: in STD_LOGIC;
		MS_OVERLAP_CH_2_NO_BRANCH: in STD_LOGIC;
		MS_1401_BRANCH_LAST_EX_CYCLE: in STD_LOGIC;
		MS_1401_NO_OP_DOT_LIROC: in STD_LOGIC;
		PS_EVEN_HUNDREDS_ADDR: in STD_LOGIC;
		PS_OP_MOD_REG_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		PS_B_CH_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		PS_A_CH_BUS: in STD_LOGIC_VECTOR (6 downTo 0);
		PS_LAST_EXECUTE_CYCLE_STAR_BR_CND: out STD_LOGIC;
		MS_B_CYCLE_DOT_NO_SCAN: out STD_LOGIC;
		PS_NO_BRANCH_CONDITIONS: out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_LAST_INSN_RO_CYCLE: STD_LOGIC := '0';
	signal PS_HIGH_OR_LOW: STD_LOGIC := '0';
	signal PS_W_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_NOT_DIV_OVERFLOW: STD_LOGIC := '0';
	signal PS_S_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal MS_HIGH: STD_LOGIC := '1';
	signal PS_T_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_SLASH_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_EQUAL: STD_LOGIC := '0';
	signal MS_EQUAL: STD_LOGIC := '1';
	signal PS_1401_MODE: STD_LOGIC := '0';
	signal PS_V_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_NOT_ZR_BAL_LATCH: STD_LOGIC := '0';
	signal PS_Z_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_NO_OVERFLOW: STD_LOGIC := '0';
	signal PS_COND_TEST_BRANCH_OP_CODE: STD_LOGIC := '0';
	signal MS_LOW: STD_LOGIC := '1';
	signal PS_U_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal PS_E_CH_NOT_READY: STD_LOGIC := '0';
	signal PS_E_CH_BUSY: STD_LOGIC := '0';
	signal PS_E_CH_CHECK: STD_LOGIC := '0';
	signal PS_E_CH_CONDITION: STD_LOGIC := '0';
	signal MS_E_CH_CORRECT_LENGTH_RECORD: STD_LOGIC := '1';
	signal PS_E_CH_NO_TRANSFER_LATCH: STD_LOGIC := '0';
	signal PS_BRANCH_ON_STATUS_CH_1: STD_LOGIC := '0';
	signal PS_ONE_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal MS_E_CH_OVLP_IN_PROCESS: STD_LOGIC := '1';
	signal PS_TWO_SYMBOL_OP_MODIFIER: STD_LOGIC := '0';
	signal MS_F_CH_OVLP_IN_PROCESS: STD_LOGIC := '1';
	signal PS_OP_MOD_SYM_FOR_I_O_STATUS: STD_LOGIC := '0';
	signal MS_SPECIAL_BRANCH_LATCH: STD_LOGIC := '1';
	signal PS_B_CYCLE: STD_LOGIC := '0';
	signal PS_1ST_SCAN: STD_LOGIC := '0';
	signal PS_CHAR_TEST_BRANCH_OP_CODE: STD_LOGIC := '0';
	signal MS_CMP_LOW: STD_LOGIC := '1';
	signal MS_CMP_HIGH: STD_LOGIC := '1';
	signal PS_BIT_TEST_BRANCH_OP_CODE: STD_LOGIC := '0';
	signal PS_I_RING_1_OR_6_TIME: STD_LOGIC := '0';
	signal PS_I_RING_1_OR_1401_AND_3_TIME: STD_LOGIC := '0';
	signal PS_PROCESS_ROUTINE: STD_LOGIC := '0';
	signal PS_NO_SCAN: STD_LOGIC := '0';
	signal PS_STOP_DOT_BRANCH_OP_CODE: STD_LOGIC := '0';
	signal PS_NO_BRANCH_COND_STAR_1412_19: STD_LOGIC := '0';
	signal PS_CLEAR_OP_CODE: STD_LOGIC := '0';
	signal PS_LAST_EXECUTE_CYCLE_STAR_1412_19: STD_LOGIC := '0';
	signal PS_B_CH_WM_BIT_1: STD_LOGIC := '0';
	signal MS_CMP_ZONE_UNEQUAL: STD_LOGIC := '1';
	signal PS_ZN_OR_WM_TST_BRANCH_OP_CODE: STD_LOGIC := '0';
	signal MS_1401_BRANCH_LATCH: STD_LOGIC := '1';
	signal MS_NO_BRANCH_LATCH: STD_LOGIC := '1';
	signal MS_NO_BRANCH_CND_INTERRUPT: STD_LOGIC := '1';
	signal MS_OVERLAP_CH_2_NO_BRANCH: STD_LOGIC := '1';
	signal MS_1401_BRANCH_LAST_EX_CYCLE: STD_LOGIC := '1';
	signal MS_1401_NO_OP_DOT_LIROC: STD_LOGIC := '1';
	signal PS_EVEN_HUNDREDS_ADDR: STD_LOGIC := '0';
	signal PS_OP_MOD_REG_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";
	signal PS_B_CH_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";
	signal PS_A_CH_BUS: STD_LOGIC_VECTOR (6 downTo 0) := "0000000";

	-- Outputs

	signal PS_LAST_EXECUTE_CYCLE_STAR_BR_CND: STD_LOGIC;
	signal MS_B_CYCLE_DOT_NO_SCAN: STD_LOGIC;
	signal PS_NO_BRANCH_CONDITIONS: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: NoBranchConditions port map(
		FPGA_CLK => FPGA_CLK,
		PS_LAST_INSN_RO_CYCLE => PS_LAST_INSN_RO_CYCLE,
		PS_HIGH_OR_LOW => PS_HIGH_OR_LOW,
		PS_W_SYMBOL_OP_MODIFIER => PS_W_SYMBOL_OP_MODIFIER,
		PS_NOT_DIV_OVERFLOW => PS_NOT_DIV_OVERFLOW,
		PS_S_SYMBOL_OP_MODIFIER => PS_S_SYMBOL_OP_MODIFIER,
		MS_HIGH => MS_HIGH,
		PS_T_SYMBOL_OP_MODIFIER => PS_T_SYMBOL_OP_MODIFIER,
		PS_SLASH_SYMBOL_OP_MODIFIER => PS_SLASH_SYMBOL_OP_MODIFIER,
		PS_EQUAL => PS_EQUAL,
		MS_EQUAL => MS_EQUAL,
		PS_1401_MODE => PS_1401_MODE,
		PS_V_SYMBOL_OP_MODIFIER => PS_V_SYMBOL_OP_MODIFIER,
		PS_NOT_ZR_BAL_LATCH => PS_NOT_ZR_BAL_LATCH,
		PS_Z_SYMBOL_OP_MODIFIER => PS_Z_SYMBOL_OP_MODIFIER,
		PS_NO_OVERFLOW => PS_NO_OVERFLOW,
		PS_COND_TEST_BRANCH_OP_CODE => PS_COND_TEST_BRANCH_OP_CODE,
		MS_LOW => MS_LOW,
		PS_U_SYMBOL_OP_MODIFIER => PS_U_SYMBOL_OP_MODIFIER,
		PS_E_CH_NOT_READY => PS_E_CH_NOT_READY,
		PS_E_CH_BUSY => PS_E_CH_BUSY,
		PS_E_CH_CHECK => PS_E_CH_CHECK,
		PS_E_CH_CONDITION => PS_E_CH_CONDITION,
		MS_E_CH_CORRECT_LENGTH_RECORD => MS_E_CH_CORRECT_LENGTH_RECORD,
		PS_E_CH_NO_TRANSFER_LATCH => PS_E_CH_NO_TRANSFER_LATCH,
		PS_BRANCH_ON_STATUS_CH_1 => PS_BRANCH_ON_STATUS_CH_1,
		PS_ONE_SYMBOL_OP_MODIFIER => PS_ONE_SYMBOL_OP_MODIFIER,
		MS_E_CH_OVLP_IN_PROCESS => MS_E_CH_OVLP_IN_PROCESS,
		PS_TWO_SYMBOL_OP_MODIFIER => PS_TWO_SYMBOL_OP_MODIFIER,
		MS_F_CH_OVLP_IN_PROCESS => MS_F_CH_OVLP_IN_PROCESS,
		PS_OP_MOD_SYM_FOR_I_O_STATUS => PS_OP_MOD_SYM_FOR_I_O_STATUS,
		MS_SPECIAL_BRANCH_LATCH => MS_SPECIAL_BRANCH_LATCH,
		PS_B_CYCLE => PS_B_CYCLE,
		PS_1ST_SCAN => PS_1ST_SCAN,
		PS_CHAR_TEST_BRANCH_OP_CODE => PS_CHAR_TEST_BRANCH_OP_CODE,
		MS_CMP_LOW => MS_CMP_LOW,
		MS_CMP_HIGH => MS_CMP_HIGH,
		PS_BIT_TEST_BRANCH_OP_CODE => PS_BIT_TEST_BRANCH_OP_CODE,
		PS_I_RING_1_OR_6_TIME => PS_I_RING_1_OR_6_TIME,
		PS_I_RING_1_OR_1401_AND_3_TIME => PS_I_RING_1_OR_1401_AND_3_TIME,
		PS_PROCESS_ROUTINE => PS_PROCESS_ROUTINE,
		PS_NO_SCAN => PS_NO_SCAN,
		PS_STOP_DOT_BRANCH_OP_CODE => PS_STOP_DOT_BRANCH_OP_CODE,
		PS_NO_BRANCH_COND_STAR_1412_19 => PS_NO_BRANCH_COND_STAR_1412_19,
		PS_CLEAR_OP_CODE => PS_CLEAR_OP_CODE,
		PS_LAST_EXECUTE_CYCLE_STAR_1412_19 => PS_LAST_EXECUTE_CYCLE_STAR_1412_19,
		PS_B_CH_WM_BIT_1 => PS_B_CH_WM_BIT_1,
		MS_CMP_ZONE_UNEQUAL => MS_CMP_ZONE_UNEQUAL,
		PS_ZN_OR_WM_TST_BRANCH_OP_CODE => PS_ZN_OR_WM_TST_BRANCH_OP_CODE,
		MS_1401_BRANCH_LATCH => MS_1401_BRANCH_LATCH,
		MS_NO_BRANCH_LATCH => MS_NO_BRANCH_LATCH,
		MS_NO_BRANCH_CND_INTERRUPT => MS_NO_BRANCH_CND_INTERRUPT,
		MS_OVERLAP_CH_2_NO_BRANCH => MS_OVERLAP_CH_2_NO_BRANCH,
		MS_1401_BRANCH_LAST_EX_CYCLE => MS_1401_BRANCH_LAST_EX_CYCLE,
		MS_1401_NO_OP_DOT_LIROC => MS_1401_NO_OP_DOT_LIROC,
		PS_EVEN_HUNDREDS_ADDR => PS_EVEN_HUNDREDS_ADDR,
		PS_OP_MOD_REG_BUS => PS_OP_MOD_REG_BUS,
		PS_B_CH_BUS => PS_B_CH_BUS,
		PS_A_CH_BUS => PS_A_CH_BUS,
		PS_LAST_EXECUTE_CYCLE_STAR_BR_CND => PS_LAST_EXECUTE_CYCLE_STAR_BR_CND,
		MS_B_CYCLE_DOT_NO_SCAN => MS_B_CYCLE_DOT_NO_SCAN,
		PS_NO_BRANCH_CONDITIONS => PS_NO_BRANCH_CONDITIONS);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

END;
