-- Test Bench VHDL for IBM SMS ALD page 13.42.10.1
-- Title: CPU-CONSOLE CONTROLS
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 7/27/2020 7:09:19 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_13_42_10_1_CPU_CONSOLE_CONTROLS_tb is
end ALD_13_42_10_1_CPU_CONSOLE_CONTROLS_tb;

architecture behavioral of ALD_13_42_10_1_CPU_CONSOLE_CONTROLS_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_13_42_10_1_CPU_CONSOLE_CONTROLS
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_CLOCK_STOPPED:	 in STD_LOGIC;
		PS_LOGIC_GATE_Z:	 in STD_LOGIC;
		MS_NO_LAST_GATE:	 in STD_LOGIC;
		MS_LOGIC_GATE_W:	 in STD_LOGIC;
		MS_LAST_LOGIC_GATE_1:	 in STD_LOGIC;
		MS_LOGIC_GATE_R:	 in STD_LOGIC;
		MS_LOGIC_GATE_A_1:	 in STD_LOGIC;
		PS_1ST_CLOCK_PULSE_1:	 in STD_LOGIC;
		MS_STOP_KEY_LATCH:	 in STD_LOGIC;
		MS_1401_COND_TEST_OP_CODE:	 in STD_LOGIC;
		MS_STORAGE_SCAN_LOAD:	 in STD_LOGIC;
		PS_MASTER_ERROR:	 in STD_LOGIC;
		PS_CONS_STOP_PRINT_COMPLETE:	 in STD_LOGIC;
		M36_VOLTS:	 in STD_LOGIC;
		MS_PROGRAM_RESET_1:	 in STD_LOGIC;
		PS_LOGIC_GATE_B_1:	 in STD_LOGIC;
		PS_PROCESS_ROUTINE:	 in STD_LOGIC;
		MS_LAST_EX_DOT_NEXT_TO_LAST:	 in STD_LOGIC;
		MS_I_O_LAST_EX_DOT_Z:	 in STD_LOGIC;
		SWITCH_ROT_CHECK_CTRL:	 in STD_LOGIC_VECTOR(5 downTo 0);
		MC_CPU_READY_TO_TID:	 out STD_LOGIC;
		MS_STOPPED_AT_CYCLE_END:	 out STD_LOGIC;
		PS_STOPPED_AT_CYCLE_END:	 out STD_LOGIC;
		MS_ERROR_RESTART:	 out STD_LOGIC;
		PS_STOPPED_AT_LAST_EXEC_CYCLE:	 out STD_LOGIC;
		MS_AUTOMATIC_COMPUTER_RESET:	 out STD_LOGIC;
		MS_GATE_BIT_SENSE_SWITCH:	 out STD_LOGIC;
		MV_ERROR_CTRL_RESET_DOT_RESTART:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_CLOCK_STOPPED: STD_LOGIC := '0';
	signal PS_LOGIC_GATE_Z: STD_LOGIC := '0';
	signal MS_NO_LAST_GATE: STD_LOGIC := '1';
	signal MS_LOGIC_GATE_W: STD_LOGIC := '1';
	signal MS_LAST_LOGIC_GATE_1: STD_LOGIC := '1';
	signal MS_LOGIC_GATE_R: STD_LOGIC := '1';
	signal MS_LOGIC_GATE_A_1: STD_LOGIC := '1';
	signal PS_1ST_CLOCK_PULSE_1: STD_LOGIC := '0';
	signal MS_STOP_KEY_LATCH: STD_LOGIC := '1';
	signal MS_1401_COND_TEST_OP_CODE: STD_LOGIC := '1';
	signal MS_STORAGE_SCAN_LOAD: STD_LOGIC := '1';
	signal PS_MASTER_ERROR: STD_LOGIC := '0';
	signal PS_CONS_STOP_PRINT_COMPLETE: STD_LOGIC := '0';
	signal M36_VOLTS: STD_LOGIC := '1';
	signal MS_PROGRAM_RESET_1: STD_LOGIC := '1';
	signal PS_LOGIC_GATE_B_1: STD_LOGIC := '0';
	signal PS_PROCESS_ROUTINE: STD_LOGIC := '0';
	signal MS_LAST_EX_DOT_NEXT_TO_LAST: STD_LOGIC := '1';
	signal MS_I_O_LAST_EX_DOT_Z: STD_LOGIC := '1';
	signal SWITCH_ROT_CHECK_CTRL: STD_LOGIC_VECTOR(5 downTo 0) := "000000";

	-- Outputs

	signal MC_CPU_READY_TO_TID: STD_LOGIC;
	signal MS_STOPPED_AT_CYCLE_END: STD_LOGIC;
	signal PS_STOPPED_AT_CYCLE_END: STD_LOGIC;
	signal MS_ERROR_RESTART: STD_LOGIC;
	signal PS_STOPPED_AT_LAST_EXEC_CYCLE: STD_LOGIC;
	signal MS_AUTOMATIC_COMPUTER_RESET: STD_LOGIC;
	signal MS_GATE_BIT_SENSE_SWITCH: STD_LOGIC;
	signal MV_ERROR_CTRL_RESET_DOT_RESTART: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_13_42_10_1_CPU_CONSOLE_CONTROLS port map(
		FPGA_CLK => FPGA_CLK,
		PS_CLOCK_STOPPED => PS_CLOCK_STOPPED,
		PS_LOGIC_GATE_Z => PS_LOGIC_GATE_Z,
		MS_NO_LAST_GATE => MS_NO_LAST_GATE,
		MS_LOGIC_GATE_W => MS_LOGIC_GATE_W,
		MS_LAST_LOGIC_GATE_1 => MS_LAST_LOGIC_GATE_1,
		MS_LOGIC_GATE_R => MS_LOGIC_GATE_R,
		MS_LOGIC_GATE_A_1 => MS_LOGIC_GATE_A_1,
		PS_1ST_CLOCK_PULSE_1 => PS_1ST_CLOCK_PULSE_1,
		MS_STOP_KEY_LATCH => MS_STOP_KEY_LATCH,
		MS_1401_COND_TEST_OP_CODE => MS_1401_COND_TEST_OP_CODE,
		MS_STORAGE_SCAN_LOAD => MS_STORAGE_SCAN_LOAD,
		PS_MASTER_ERROR => PS_MASTER_ERROR,
		PS_CONS_STOP_PRINT_COMPLETE => PS_CONS_STOP_PRINT_COMPLETE,
		M36_VOLTS => M36_VOLTS,
		MS_PROGRAM_RESET_1 => MS_PROGRAM_RESET_1,
		PS_LOGIC_GATE_B_1 => PS_LOGIC_GATE_B_1,
		PS_PROCESS_ROUTINE => PS_PROCESS_ROUTINE,
		MS_LAST_EX_DOT_NEXT_TO_LAST => MS_LAST_EX_DOT_NEXT_TO_LAST,
		MS_I_O_LAST_EX_DOT_Z => MS_I_O_LAST_EX_DOT_Z,
		SWITCH_ROT_CHECK_CTRL => SWITCH_ROT_CHECK_CTRL,
		MC_CPU_READY_TO_TID => MC_CPU_READY_TO_TID,
		MS_STOPPED_AT_CYCLE_END => MS_STOPPED_AT_CYCLE_END,
		PS_STOPPED_AT_CYCLE_END => PS_STOPPED_AT_CYCLE_END,
		MS_ERROR_RESTART => MS_ERROR_RESTART,
		PS_STOPPED_AT_LAST_EXEC_CYCLE => PS_STOPPED_AT_LAST_EXEC_CYCLE,
		MS_AUTOMATIC_COMPUTER_RESET => MS_AUTOMATIC_COMPUTER_RESET,
		MS_GATE_BIT_SENSE_SWITCH => MS_GATE_BIT_SENSE_SWITCH,
		MV_ERROR_CTRL_RESET_DOT_RESTART => MV_ERROR_CTRL_RESET_DOT_RESTART);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

end;
