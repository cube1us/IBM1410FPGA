-- Test BenchVHDL for IBM SMS ALD group InhibitGatingDrive
-- Title: InhibitGatingDrive
-- IBM Machine Name 1411
-- Generated by GenerateHDL on 10/19/2020 12:44:16 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity InhibitGatingDrive_tb is
end InhibitGatingDrive_tb;

architecture behavioral of InhibitGatingDrive_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component InhibitGatingDrive
	    Port (
		FPGA_CLK: in STD_LOGIC;
		PY_Z_GATE_FOR_5_9TH_A: in STD_LOGIC;
		PY_Z_GATE_FOR_0_4TH_A: in STD_LOGIC;
		PY_Z_GATE_FOR_5_9TH_B: in STD_LOGIC;
		PY_Z_GATE_FOR_0_4TH_B: in STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_1: out STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_2: out STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_3: out STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_4: out STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_5: out STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_6: out STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_7: out STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_8: out STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_1: out STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_2: out STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_3: out STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_4: out STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_5: out STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_6: out STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_7: out STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_8: out STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_9: out STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_10: out STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_11: out STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_12: out STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_13: out STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_14: out STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_15: out STD_LOGIC;
		MY_Z_GATE_FOR_5_9TH_16: out STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_9: out STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_10: out STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_11: out STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_12: out STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_13: out STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_14: out STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_15: out STD_LOGIC;
		MY_Z_GATE_FOR_0_4TH_16: out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PY_Z_GATE_FOR_5_9TH_A: STD_LOGIC := '0';
	signal PY_Z_GATE_FOR_0_4TH_A: STD_LOGIC := '0';
	signal PY_Z_GATE_FOR_5_9TH_B: STD_LOGIC := '0';
	signal PY_Z_GATE_FOR_0_4TH_B: STD_LOGIC := '0';

	-- Outputs

	signal MY_Z_GATE_FOR_5_9TH_1: STD_LOGIC;
	signal MY_Z_GATE_FOR_5_9TH_2: STD_LOGIC;
	signal MY_Z_GATE_FOR_5_9TH_3: STD_LOGIC;
	signal MY_Z_GATE_FOR_5_9TH_4: STD_LOGIC;
	signal MY_Z_GATE_FOR_5_9TH_5: STD_LOGIC;
	signal MY_Z_GATE_FOR_5_9TH_6: STD_LOGIC;
	signal MY_Z_GATE_FOR_5_9TH_7: STD_LOGIC;
	signal MY_Z_GATE_FOR_5_9TH_8: STD_LOGIC;
	signal MY_Z_GATE_FOR_0_4TH_1: STD_LOGIC;
	signal MY_Z_GATE_FOR_0_4TH_2: STD_LOGIC;
	signal MY_Z_GATE_FOR_0_4TH_3: STD_LOGIC;
	signal MY_Z_GATE_FOR_0_4TH_4: STD_LOGIC;
	signal MY_Z_GATE_FOR_0_4TH_5: STD_LOGIC;
	signal MY_Z_GATE_FOR_0_4TH_6: STD_LOGIC;
	signal MY_Z_GATE_FOR_0_4TH_7: STD_LOGIC;
	signal MY_Z_GATE_FOR_0_4TH_8: STD_LOGIC;
	signal MY_Z_GATE_FOR_5_9TH_9: STD_LOGIC;
	signal MY_Z_GATE_FOR_5_9TH_10: STD_LOGIC;
	signal MY_Z_GATE_FOR_5_9TH_11: STD_LOGIC;
	signal MY_Z_GATE_FOR_5_9TH_12: STD_LOGIC;
	signal MY_Z_GATE_FOR_5_9TH_13: STD_LOGIC;
	signal MY_Z_GATE_FOR_5_9TH_14: STD_LOGIC;
	signal MY_Z_GATE_FOR_5_9TH_15: STD_LOGIC;
	signal MY_Z_GATE_FOR_5_9TH_16: STD_LOGIC;
	signal MY_Z_GATE_FOR_0_4TH_9: STD_LOGIC;
	signal MY_Z_GATE_FOR_0_4TH_10: STD_LOGIC;
	signal MY_Z_GATE_FOR_0_4TH_11: STD_LOGIC;
	signal MY_Z_GATE_FOR_0_4TH_12: STD_LOGIC;
	signal MY_Z_GATE_FOR_0_4TH_13: STD_LOGIC;
	signal MY_Z_GATE_FOR_0_4TH_14: STD_LOGIC;
	signal MY_Z_GATE_FOR_0_4TH_15: STD_LOGIC;
	signal MY_Z_GATE_FOR_0_4TH_16: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

   constant MX_X1A_POS: integer := 7;
   constant MX_X6A_POS: integer := 8;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: InhibitGatingDrive port map(
		FPGA_CLK => FPGA_CLK,
		PY_Z_GATE_FOR_5_9TH_A => PY_Z_GATE_FOR_5_9TH_A,
		PY_Z_GATE_FOR_0_4TH_A => PY_Z_GATE_FOR_0_4TH_A,
		PY_Z_GATE_FOR_5_9TH_B => PY_Z_GATE_FOR_5_9TH_B,
		PY_Z_GATE_FOR_0_4TH_B => PY_Z_GATE_FOR_0_4TH_B,
		MY_Z_GATE_FOR_5_9TH_1 => MY_Z_GATE_FOR_5_9TH_1,
		MY_Z_GATE_FOR_5_9TH_2 => MY_Z_GATE_FOR_5_9TH_2,
		MY_Z_GATE_FOR_5_9TH_3 => MY_Z_GATE_FOR_5_9TH_3,
		MY_Z_GATE_FOR_5_9TH_4 => MY_Z_GATE_FOR_5_9TH_4,
		MY_Z_GATE_FOR_5_9TH_5 => MY_Z_GATE_FOR_5_9TH_5,
		MY_Z_GATE_FOR_5_9TH_6 => MY_Z_GATE_FOR_5_9TH_6,
		MY_Z_GATE_FOR_5_9TH_7 => MY_Z_GATE_FOR_5_9TH_7,
		MY_Z_GATE_FOR_5_9TH_8 => MY_Z_GATE_FOR_5_9TH_8,
		MY_Z_GATE_FOR_0_4TH_1 => MY_Z_GATE_FOR_0_4TH_1,
		MY_Z_GATE_FOR_0_4TH_2 => MY_Z_GATE_FOR_0_4TH_2,
		MY_Z_GATE_FOR_0_4TH_3 => MY_Z_GATE_FOR_0_4TH_3,
		MY_Z_GATE_FOR_0_4TH_4 => MY_Z_GATE_FOR_0_4TH_4,
		MY_Z_GATE_FOR_0_4TH_5 => MY_Z_GATE_FOR_0_4TH_5,
		MY_Z_GATE_FOR_0_4TH_6 => MY_Z_GATE_FOR_0_4TH_6,
		MY_Z_GATE_FOR_0_4TH_7 => MY_Z_GATE_FOR_0_4TH_7,
		MY_Z_GATE_FOR_0_4TH_8 => MY_Z_GATE_FOR_0_4TH_8,
		MY_Z_GATE_FOR_5_9TH_9 => MY_Z_GATE_FOR_5_9TH_9,
		MY_Z_GATE_FOR_5_9TH_10 => MY_Z_GATE_FOR_5_9TH_10,
		MY_Z_GATE_FOR_5_9TH_11 => MY_Z_GATE_FOR_5_9TH_11,
		MY_Z_GATE_FOR_5_9TH_12 => MY_Z_GATE_FOR_5_9TH_12,
		MY_Z_GATE_FOR_5_9TH_13 => MY_Z_GATE_FOR_5_9TH_13,
		MY_Z_GATE_FOR_5_9TH_14 => MY_Z_GATE_FOR_5_9TH_14,
		MY_Z_GATE_FOR_5_9TH_15 => MY_Z_GATE_FOR_5_9TH_15,
		MY_Z_GATE_FOR_5_9TH_16 => MY_Z_GATE_FOR_5_9TH_16,
		MY_Z_GATE_FOR_0_4TH_9 => MY_Z_GATE_FOR_0_4TH_9,
		MY_Z_GATE_FOR_0_4TH_10 => MY_Z_GATE_FOR_0_4TH_10,
		MY_Z_GATE_FOR_0_4TH_11 => MY_Z_GATE_FOR_0_4TH_11,
		MY_Z_GATE_FOR_0_4TH_12 => MY_Z_GATE_FOR_0_4TH_12,
		MY_Z_GATE_FOR_0_4TH_13 => MY_Z_GATE_FOR_0_4TH_13,
		MY_Z_GATE_FOR_0_4TH_14 => MY_Z_GATE_FOR_0_4TH_14,
		MY_Z_GATE_FOR_0_4TH_15 => MY_Z_GATE_FOR_0_4TH_15,
		MY_Z_GATE_FOR_0_4TH_16 => MY_Z_GATE_FOR_0_4TH_16);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;
   variable tv: std_logic_vector(25 downto 0);
   variable a,b,c,d,e,f,g,h,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z: std_logic;
   variable g1, g2, g3, g4, g5, g6, g7, g8, g9, g10: std_logic;

   begin

   -- Your test bench code

   testName := "37.09.0%.1        ";

   for tt in 0 to 2**4 loop
      tv := std_logic_vector(to_unsigned(tt,tv'Length));
      a := tv(0);
      b := tv(1);
      c := tv(2);
      d := tv(3);

		PY_Z_GATE_FOR_5_9TH_A <= b;
		PY_Z_GATE_FOR_0_4TH_A <= a;
		PY_Z_GATE_FOR_5_9TH_B <= d;
		PY_Z_GATE_FOR_0_4TH_B <= c;
            
      wait for 30 ns;
      
		check1(MY_Z_GATE_FOR_5_9TH_1,not b,testName,"Z Gate for 5-9th 1");
      check1(MY_Z_GATE_FOR_5_9TH_2,not b,testName,"Z Gate for 5-9th 2");
      check1(MY_Z_GATE_FOR_5_9TH_3,not b,testName,"Z Gate for 5-9th 3");
      check1(MY_Z_GATE_FOR_5_9TH_4,not b,testName,"Z Gate for 5-9th 4");
      check1(MY_Z_GATE_FOR_5_9TH_5,not b,testName,"Z Gate for 5-9th 5");
      check1(MY_Z_GATE_FOR_5_9TH_6,not b,testName,"Z Gate for 5-9th 6");
      check1(MY_Z_GATE_FOR_5_9TH_7,not b,testName,"Z Gate for 5-9th 7");
      check1(MY_Z_GATE_FOR_5_9TH_8,not b,testName,"Z Gate for 5-9th 8");
      check1(MY_Z_GATE_FOR_0_4TH_1,not a,testName,"Z Gate for 0-4th 1");
      check1(MY_Z_GATE_FOR_0_4TH_2,not a,testName,"Z Gate for 0-4th 2");
      check1(MY_Z_GATE_FOR_0_4TH_3,not a,testName,"Z Gate for 0-4th 3");
      check1(MY_Z_GATE_FOR_0_4TH_4,not a,testName,"Z Gate for 0-4th 4");
      check1(MY_Z_GATE_FOR_0_4TH_5,not a,testName,"Z Gate for 0-4th 5");
      check1(MY_Z_GATE_FOR_0_4TH_6,not a,testName,"Z Gate for 0-4th 6");
      check1(MY_Z_GATE_FOR_0_4TH_7,not a,testName,"Z Gate for 0-4th 7");
      check1(MY_Z_GATE_FOR_0_4TH_8,not a,testName,"Z Gate for 0-4th 8");
      check1(MY_Z_GATE_FOR_5_9TH_9,not d,testName,"Z Gate for 5-9th 9");
      check1(MY_Z_GATE_FOR_5_9TH_10,not d,testName,"Z Gate for 5-9th 10");
      check1(MY_Z_GATE_FOR_5_9TH_11,not d,testName,"Z Gate for 5-9th 11");
      check1(MY_Z_GATE_FOR_5_9TH_12,not d,testName,"Z Gate for 5-9th 12");
      check1(MY_Z_GATE_FOR_5_9TH_13,not d,testName,"Z Gate for 5-9th 13");
      check1(MY_Z_GATE_FOR_5_9TH_14,not d,testName,"Z Gate for 5-9th 14");
      check1(MY_Z_GATE_FOR_5_9TH_15,not d,testName,"Z Gate for 5-9th 15");
      check1(MY_Z_GATE_FOR_5_9TH_16,not d,testName,"Z Gate for 5-9th 16");
      check1(MY_Z_GATE_FOR_0_4TH_9,not c,testName,"Z Gate for 0-4th 9");
      check1(MY_Z_GATE_FOR_0_4TH_10,not c,testName,"Z Gate for 0-4th 10");
      check1(MY_Z_GATE_FOR_0_4TH_11,not c,testName,"Z Gate for 0-4th 11");
      check1(MY_Z_GATE_FOR_0_4TH_12,not c,testName,"Z Gate for 0-4th 12");
      check1(MY_Z_GATE_FOR_0_4TH_13,not c,testName,"Z Gate for 0-4th 13");
      check1(MY_Z_GATE_FOR_0_4TH_14,not c,testName,"Z Gate for 0-4th 14");
      check1(MY_Z_GATE_FOR_0_4TH_15,not c,testName,"Z Gate for 0-4th 15");
      check1(MY_Z_GATE_FOR_0_4TH_16,not c,testName,"Z Gate for 0-4th 16");
      
      
   end loop;

   assert false report "Simulation Ended NORMALLY" severity failure;

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 2 ms;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY (TIMEOUT)" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

END;
