-- VHDL for IBM SMS ALD page 16.20.14.1
-- Title: TRUE AND COMP LATCHES-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/3/2020 12:20:13 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_16_20_14_1_TRUE_AND_COMP_LATCHES_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MB_START_TRUE_ADD_1:	 in STD_LOGIC;
		MB_START_TRUE_ADD_2:	 in STD_LOGIC;
		PS_LOGIC_GATE_C_1:	 in STD_LOGIC;
		MS_LOGIC_GATE_D_1:	 in STD_LOGIC;
		MS_PROGRAM_RESET_5:	 in STD_LOGIC;
		MS_LOGIC_GATE_B_1:	 in STD_LOGIC;
		PS_SET_TRUE:	 in STD_LOGIC;
		PS_LAST_LOGIC_GATE_2:	 in STD_LOGIC;
		PS_REGEN_TRUE:	 in STD_LOGIC;
		MS_LB_OP_DOT_1ST_OR_3RD_SCAN:	 in STD_LOGIC;
		PS_ADDER_A_CH_USE_T_OR_C:	 in STD_LOGIC;
		MS_X_CYCLE:	 in STD_LOGIC;
		PB_TRUE_ADD_A:	 out STD_LOGIC;
		PS_TRUE_LATCH:	 out STD_LOGIC;
		PS_TRUE_LATCH_1:	 out STD_LOGIC);
end ALD_16_20_14_1_TRUE_AND_COMP_LATCHES_ACC;

architecture behavioral of ALD_16_20_14_1_TRUE_AND_COMP_LATCHES_ACC is 

	signal OUT_3A_D: STD_LOGIC;
	signal OUT_2A_E: STD_LOGIC;
	signal OUT_1A_D: STD_LOGIC;
	signal OUT_2C_D: STD_LOGIC;
	signal OUT_5D_NoPin: STD_LOGIC;
	signal OUT_5D_NoPin_Latch: STD_LOGIC;
	signal OUT_4D_D: STD_LOGIC;
	signal OUT_4D_D_Latch: STD_LOGIC;
	signal OUT_3D_NoPin: STD_LOGIC;
	signal OUT_3D_NoPin_Latch: STD_LOGIC;
	signal OUT_5E_NoPin: STD_LOGIC;
	signal OUT_3E_NoPin: STD_LOGIC;
	signal OUT_3E_NoPin_Latch: STD_LOGIC;
	signal OUT_2E_C: STD_LOGIC;
	signal OUT_2E_C_Latch: STD_LOGIC;
	signal OUT_1E_A: STD_LOGIC;
	signal OUT_5F_NoPin: STD_LOGIC;
	signal OUT_5F_NoPin_Latch: STD_LOGIC;
	signal OUT_1F_Q: STD_LOGIC;
	signal OUT_2G_B: STD_LOGIC;
	signal OUT_1G_A: STD_LOGIC;
	signal OUT_1G_A_Latch: STD_LOGIC;
	signal OUT_5H_B: STD_LOGIC;
	signal OUT_4H_F: STD_LOGIC;
	signal OUT_3H_P: STD_LOGIC;
	signal OUT_2H_A: STD_LOGIC;
	signal OUT_2I_R: STD_LOGIC;
	signal OUT_DOT_2E: STD_LOGIC;
	signal OUT_DOT_2H: STD_LOGIC;

begin

	OUT_3A_D <= NOT(MB_START_TRUE_ADD_2 AND MB_START_TRUE_ADD_1 );
	OUT_2A_E <= NOT(OUT_3A_D AND OUT_4H_F );
	OUT_1A_D <= NOT(OUT_2A_E AND OUT_1E_A );
	OUT_2C_D <= NOT(MB_START_TRUE_ADD_2 OR MB_START_TRUE_ADD_1 );
	OUT_5D_NoPin_Latch <= NOT(MS_LOGIC_GATE_D_1 AND MS_PROGRAM_RESET_5 AND OUT_4D_D );
	OUT_4D_D_Latch <= NOT(OUT_5D_NoPin AND OUT_5E_NoPin AND OUT_5F_NoPin );
	OUT_3D_NoPin_Latch <= NOT(OUT_4D_D AND PS_LOGIC_GATE_C_1 );
	OUT_5E_NoPin <= NOT(PS_LAST_LOGIC_GATE_2 AND PS_SET_TRUE );
	OUT_3E_NoPin_Latch <= NOT(MS_LOGIC_GATE_B_1 AND MS_PROGRAM_RESET_5 AND OUT_DOT_2E );
	OUT_2E_C_Latch <= NOT(OUT_3D_NoPin AND OUT_3E_NoPin );
	OUT_1E_A <= NOT OUT_2H_A;
	OUT_5F_NoPin_Latch <= NOT(PS_LAST_LOGIC_GATE_2 AND OUT_1G_A AND PS_REGEN_TRUE );
	OUT_1F_Q <= OUT_DOT_2E;
	OUT_2G_B <= NOT MS_LB_OP_DOT_1ST_OR_3RD_SCAN;
	OUT_1G_A_Latch <= OUT_DOT_2E;
	OUT_5H_B <= NOT PS_ADDER_A_CH_USE_T_OR_C;
	OUT_4H_F <= NOT OUT_5H_B;
	OUT_3H_P <= NOT(OUT_1G_A AND PS_ADDER_A_CH_USE_T_OR_C );

	SMS_AEK_2H: entity SMS_AEK
	    port map (
		IN1 => OUT_3H_P,	-- Pin F
		IN2 => OUT_DOT_2H,	-- Pin G
		OUT1 => OUT_2H_A );

	OUT_2I_R <= NOT MS_X_CYCLE;
	OUT_DOT_2E <= OUT_2C_D OR OUT_2E_C;
	OUT_DOT_2H <= OUT_2G_B OR OUT_2I_R;

	PB_TRUE_ADD_A <= OUT_1A_D;
	PS_TRUE_LATCH <= OUT_1F_Q;
	PS_TRUE_LATCH_1 <= OUT_1G_A;

	Latch_5D: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_5D_NoPin_Latch,
		Q => OUT_5D_NoPin,
		QBar => OPEN );

	Latch_4D: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4D_D_Latch,
		Q => OUT_4D_D,
		QBar => OPEN );

	Latch_3D: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3D_NoPin_Latch,
		Q => OUT_3D_NoPin,
		QBar => OPEN );

	Latch_3E: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3E_NoPin_Latch,
		Q => OUT_3E_NoPin,
		QBar => OPEN );

	Latch_2E: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2E_C_Latch,
		Q => OUT_2E_C,
		QBar => OPEN );

	Latch_5F: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_5F_NoPin_Latch,
		Q => OUT_5F_NoPin,
		QBar => OPEN );

	Latch_1G: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_1G_A_Latch,
		Q => OUT_1G_A,
		QBar => OPEN );


end;
