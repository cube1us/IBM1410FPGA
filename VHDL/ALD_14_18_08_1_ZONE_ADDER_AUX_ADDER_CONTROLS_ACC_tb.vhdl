-- Test Bench VHDL for IBM SMS ALD page 14.18.08.1
-- Title: ZONE ADDER.AUX ADDER CONTROLS-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 8/27/2020 9:43:56 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_14_18_08_1_ZONE_ADDER_AUX_ADDER_CONTROLS_ACC_tb is
end ALD_14_18_08_1_ZONE_ADDER_AUX_ADDER_CONTROLS_ACC_tb;

architecture behavioral of ALD_14_18_08_1_ZONE_ADDER_AUX_ADDER_CONTROLS_ACC_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_14_18_08_1_ZONE_ADDER_AUX_ADDER_CONTROLS_ACC
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_LOGIC_GATE_J:	 in STD_LOGIC;
		PS_1401_MODE:	 in STD_LOGIC;
		PS_X_CYCLE:	 in STD_LOGIC;
		PS_A_RING_4_TIME:	 in STD_LOGIC;
		PS_I_CYCLE_1:	 in STD_LOGIC;
		PS_I_RING_5_OR_10_TIME:	 in STD_LOGIC;
		PS_LOGIC_GATE_K:	 in STD_LOGIC;
		PS_TSLT_BINARY_TO_TH_POS_1:	 out STD_LOGIC;
		PS_TSLT_BINARY_TO_TH_POS_2:	 out STD_LOGIC;
		MS_1401_DOT_X_CYCLE_DOT_A_RING_4_TIME:	 out STD_LOGIC;
		PS_TSLT_BINARY_TO_TTH_POS:	 out STD_LOGIC;
		MS_1401_DOT_I_CYCLE_DOT_I_RING_5_OR_10:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_LOGIC_GATE_J: STD_LOGIC := '0';
	signal PS_1401_MODE: STD_LOGIC := '0';
	signal PS_X_CYCLE: STD_LOGIC := '0';
	signal PS_A_RING_4_TIME: STD_LOGIC := '0';
	signal PS_I_CYCLE_1: STD_LOGIC := '0';
	signal PS_I_RING_5_OR_10_TIME: STD_LOGIC := '0';
	signal PS_LOGIC_GATE_K: STD_LOGIC := '0';

	-- Outputs

	signal PS_TSLT_BINARY_TO_TH_POS_1: STD_LOGIC;
	signal PS_TSLT_BINARY_TO_TH_POS_2: STD_LOGIC;
	signal MS_1401_DOT_X_CYCLE_DOT_A_RING_4_TIME: STD_LOGIC;
	signal PS_TSLT_BINARY_TO_TTH_POS: STD_LOGIC;
	signal MS_1401_DOT_I_CYCLE_DOT_I_RING_5_OR_10: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_14_18_08_1_ZONE_ADDER_AUX_ADDER_CONTROLS_ACC port map(
		FPGA_CLK => FPGA_CLK,
		PS_LOGIC_GATE_J => PS_LOGIC_GATE_J,
		PS_1401_MODE => PS_1401_MODE,
		PS_X_CYCLE => PS_X_CYCLE,
		PS_A_RING_4_TIME => PS_A_RING_4_TIME,
		PS_I_CYCLE_1 => PS_I_CYCLE_1,
		PS_I_RING_5_OR_10_TIME => PS_I_RING_5_OR_10_TIME,
		PS_LOGIC_GATE_K => PS_LOGIC_GATE_K,
		PS_TSLT_BINARY_TO_TH_POS_1 => PS_TSLT_BINARY_TO_TH_POS_1,
		PS_TSLT_BINARY_TO_TH_POS_2 => PS_TSLT_BINARY_TO_TH_POS_2,
		MS_1401_DOT_X_CYCLE_DOT_A_RING_4_TIME => MS_1401_DOT_X_CYCLE_DOT_A_RING_4_TIME,
		PS_TSLT_BINARY_TO_TTH_POS => PS_TSLT_BINARY_TO_TTH_POS,
		MS_1401_DOT_I_CYCLE_DOT_I_RING_5_OR_10 => MS_1401_DOT_I_CYCLE_DOT_I_RING_5_OR_10);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code
   
   testName := "14.18.08.1        ";
   
   PS_LOGIC_GATE_J <= '0';
   PS_LOGIC_GATE_K <= '0';
   wait for 30 ns;
   check1(PS_TSLT_BINARY_TO_TH_POS_1,'0',testName,"1A");
   check1(PS_TSLT_BINARY_TO_TH_POS_2,'0',testName,"1B");
   check1(PS_TSLT_BINARY_TO_TTH_POS,'0',testName,"1C");
   PS_LOGIC_GATE_J <= '1';
   PS_LOGIC_GATE_K <= '1';
   wait for 30 ns;
   check1(PS_TSLT_BINARY_TO_TH_POS_1,'0',testName,"1D");
   check1(PS_TSLT_BINARY_TO_TH_POS_2,'0',testName,"1E");
   check1(PS_TSLT_BINARY_TO_TTH_POS,'0',testName,"1F");
   PS_LOGIC_GATE_J <= '0';
   PS_LOGIC_GATE_K <= '0';

   PS_X_CYCLE <= '0';
   PS_A_RING_4_TIME <= '1';
   PS_1401_MODE <= '1';
   wait for 30 ns;
   check1(MS_1401_DOT_X_CYCLE_DOT_A_RING_4_TIME,'1',testName,"1G");
   PS_X_CYCLE <= '1';
   PS_A_RING_4_TIME <= '0';
   wait for 30 ns;
   check1(MS_1401_DOT_X_CYCLE_DOT_A_RING_4_TIME,'1',testName,"1H");
   PS_A_RING_4_TIME <= '1';
   PS_1401_MODE <= '0';
   wait for 30 ns;
   check1(MS_1401_DOT_X_CYCLE_DOT_A_RING_4_TIME,'1',testName,"1I");
   PS_1401_MODE <= '1';
   wait for 30 ns;
   check1(MS_1401_DOT_X_CYCLE_DOT_A_RING_4_TIME,'0',testName,"1J");
   check1(PS_TSLT_BINARY_TO_TH_POS_1,'0',testName,"1K");
   check1(PS_TSLT_BINARY_TO_TH_POS_2,'0',testName,"1L");
   check1(PS_TSLT_BINARY_TO_TTH_POS,'0',testName,"1M");
   PS_LOGIC_GATE_J <= '1';
   wait for 30 ns;
   check1(PS_TSLT_BINARY_TO_TH_POS_1,'1',testName,"1N");
   check1(PS_TSLT_BINARY_TO_TH_POS_2,'1',testName,"1O");
   check1(PS_TSLT_BINARY_TO_TTH_POS,'0',testName,"1P");
   PS_LOGIC_GATE_J <= '0';
   wait for 30 ns;
   PS_LOGIC_GATE_K <= '1';
   wait for 30 ns;
   check1(PS_TSLT_BINARY_TO_TH_POS_1,'0',testName,"1Q");
   check1(PS_TSLT_BINARY_TO_TH_POS_2,'0',testName,"1R");
   check1(PS_TSLT_BINARY_TO_TTH_POS,'1',testName,"1S");
   PS_LOGIC_GATE_K <= '0';
   PS_X_CYCLE <= '0';
   PS_A_RING_4_TIME <= '0';
   PS_1401_MODE <= '0';
   wait for 30 ns;
   
   PS_I_CYCLE_1 <= '0';
   PS_I_RING_5_OR_10_TIME <= '1';
   PS_1401_MODE <= '1';
   wait for 30 ns;
   check1(PS_TSLT_BINARY_TO_TH_POS_1,'0',testName,"2A");
   check1(PS_TSLT_BINARY_TO_TH_POS_2,'0',testName,"2B");
   check1(PS_TSLT_BINARY_TO_TTH_POS,'0',testName,"2C");
   check1(MS_1401_DOT_I_CYCLE_DOT_I_RING_5_OR_10,'1',testName,"2D");
   PS_I_CYCLE_1 <= '1';
   PS_I_RING_5_OR_10_TIME <= '0';
   wait for 30 ns;
   check1(MS_1401_DOT_I_CYCLE_DOT_I_RING_5_OR_10,'1',testName,"2E");
   PS_I_RING_5_OR_10_TIME <= '1';
   PS_1401_MODE <= '0';
   wait for 30 ns;
   check1(MS_1401_DOT_I_CYCLE_DOT_I_RING_5_OR_10,'1',testName,"2F");
   PS_1401_MODE <= '1';
   wait for 30 ns;
   check1(MS_1401_DOT_I_CYCLE_DOT_I_RING_5_OR_10,'0',testName,"2G");
         
   check1(PS_TSLT_BINARY_TO_TH_POS_1,'0',testName,"2H");
   check1(PS_TSLT_BINARY_TO_TH_POS_2,'0',testName,"2I");
   check1(PS_TSLT_BINARY_TO_TTH_POS,'0',testName,"2J");
   PS_LOGIC_GATE_J <= '1';
   wait for 30 ns;
   check1(PS_TSLT_BINARY_TO_TH_POS_1,'1',testName,"2K");
   check1(PS_TSLT_BINARY_TO_TH_POS_2,'1',testName,"2L");
   check1(PS_TSLT_BINARY_TO_TTH_POS,'0',testName,"2M");
   PS_LOGIC_GATE_J <= '0';
   wait for 30 ns;
   PS_LOGIC_GATE_K <= '1';
   wait for 30 ns;
   check1(PS_TSLT_BINARY_TO_TH_POS_1,'0',testName,"2N");
   check1(PS_TSLT_BINARY_TO_TH_POS_2,'0',testName,"2O");
   check1(PS_TSLT_BINARY_TO_TTH_POS,'1',testName,"2P");
   PS_LOGIC_GATE_K <= '0';
   wait for 30 ns;

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

end;
