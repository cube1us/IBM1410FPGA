-- VHDL for IBM SMS ALD page 16.14.12.1
-- Title: 0 BALANCE INDICAT LATCH-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 9/30/2020 5:07:57 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_16_14_12_1_0_BALANCE_INDICAT_LATCH_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_UNITS_LATCH:	 in STD_LOGIC;
		PS_LOGIC_GATE_D_1:	 in STD_LOGIC;
		PS_ADD_TYPE_OP_CODES:	 in STD_LOGIC;
		MS_MPLY_DOT_LAST_INSN_RO_CYCLE:	 in STD_LOGIC;
		MS_COMPUTER_RESET_1:	 in STD_LOGIC;
		PS_LAST_LOGIC_GATE_2:	 in STD_LOGIC;
		MS_MPLY_DOT_U_OR_Y_OR_X_DOT_B:	 in STD_LOGIC;
		MS_B_CH_INSERT_PLUS_ZERO:	 in STD_LOGIC;
		MS_A_OR_S_DOT_B_CYCLE:	 in STD_LOGIC;
		PS_ASSEMBLY_CH_8_BIT:	 in STD_LOGIC;
		MS_ASSEMBLY_CH_4_BIT:	 in STD_LOGIC;
		PS_ASSEMBLY_CH_2_BIT:	 in STD_LOGIC;
		MS_ASSEMBLY_CH_1_BIT:	 in STD_LOGIC;
		MS_ZR_BAL_LATCH:	 out STD_LOGIC;
		PS_ZR_BAL_LATCH:	 out STD_LOGIC;
		LAMP_15A1K12:	 out STD_LOGIC);
end ALD_16_14_12_1_0_BALANCE_INDICAT_LATCH_ACC;

architecture behavioral of ALD_16_14_12_1_0_BALANCE_INDICAT_LATCH_ACC is 

	signal OUT_1B_E: STD_LOGIC;
	signal OUT_3C_D: STD_LOGIC;
	signal OUT_2D_K: STD_LOGIC;
	signal OUT_3E_E: STD_LOGIC;
	signal OUT_3E_E_Latch: STD_LOGIC;
	signal OUT_2E_G: STD_LOGIC;
	signal OUT_2E_G_Latch: STD_LOGIC;
	signal OUT_2F_K: STD_LOGIC;
	signal OUT_5G_D: STD_LOGIC;
	signal OUT_4G_E: STD_LOGIC;
	signal OUT_5H_K: STD_LOGIC;
	signal OUT_5I_C: STD_LOGIC;
	signal OUT_DOT_2D: STD_LOGIC;
	signal OUT_DOT_5H: STD_LOGIC;

begin

	OUT_1B_E <= NOT(OUT_DOT_2D );
	OUT_3C_D <= NOT(PS_UNITS_LATCH AND PS_ADD_TYPE_OP_CODES AND PS_LOGIC_GATE_D_1 );
	OUT_2D_K <= NOT(MS_MPLY_DOT_LAST_INSN_RO_CYCLE );
	OUT_3E_E_Latch <= NOT(MS_COMPUTER_RESET_1 AND OUT_4G_E AND OUT_DOT_2D );
	OUT_2E_G_Latch <= NOT(OUT_3C_D AND OUT_3E_E );
	OUT_2F_K <= NOT OUT_3E_E;
	LAMP_15A1K12 <= OUT_2F_K;
	OUT_5G_D <= NOT(MS_MPLY_DOT_U_OR_Y_OR_X_DOT_B AND MS_B_CH_INSERT_PLUS_ZERO AND MS_A_OR_S_DOT_B_CYCLE );
	OUT_4G_E <= NOT(OUT_5G_D AND PS_LAST_LOGIC_GATE_2 AND OUT_DOT_5H );
	OUT_5H_K <= NOT(PS_ASSEMBLY_CH_8_BIT AND MS_ASSEMBLY_CH_4_BIT );
	OUT_5I_C <= NOT(PS_ASSEMBLY_CH_2_BIT AND MS_ASSEMBLY_CH_1_BIT );
	OUT_DOT_2D <= OUT_2D_K OR OUT_2E_G;
	OUT_DOT_5H <= OUT_5H_K OR OUT_5I_C;

	MS_ZR_BAL_LATCH <= OUT_1B_E;
	PS_ZR_BAL_LATCH <= OUT_DOT_2D;

	Latch_3E: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3E_E_Latch,
		Q => OUT_3E_E,
		QBar => OPEN );

	Latch_2E: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2E_G_Latch,
		Q => OUT_2E_G,
		QBar => OPEN );


end;
