-- Test Bench VHDL for IBM SMS ALD page 16.16.04.1
-- Title: SIGN LATCHES-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 10/1/2020 1:12:05 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_16_16_04_1_SIGN_LATCHES_ACC_tb is
end ALD_16_16_04_1_SIGN_LATCHES_ACC_tb;

architecture behavioral of ALD_16_16_04_1_SIGN_LATCHES_ACC_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_16_16_04_1_SIGN_LATCHES_ACC
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_I_CYCLE:	 in STD_LOGIC;
		MS_1401_MINUS_SIGN:	 in STD_LOGIC;
		PS_B_CH_MINUS:	 in STD_LOGIC;
		PS_A_CH_MINUS:	 in STD_LOGIC;
		PS_B_CH_PLUS:	 in STD_LOGIC;
		PS_LAST_LOGIC_GATE_2:	 in STD_LOGIC;
		MB_MPLY_DOT_MQ_DOT_B_DOT_1:	 in STD_LOGIC;
		MS_DIV_DOT_U_DOT_B_DOT_BB_DOT_T:	 in STD_LOGIC;
		PS_A_CH_PLUS:	 in STD_LOGIC;
		PS_A_CYCLE:	 in STD_LOGIC;
		PS_UNITS_LATCH:	 in STD_LOGIC;
		PS_E_OR_Z_OP_CODES:	 in STD_LOGIC;
		MS_1401_PLUS_SIGN:	 in STD_LOGIC;
		PS_MINUS_SIGN_LATCH:	 out STD_LOGIC;
		PS_PLUS_SIGN_LATCH:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal MS_I_CYCLE: STD_LOGIC := '1';
	signal MS_1401_MINUS_SIGN: STD_LOGIC := '1';
	signal PS_B_CH_MINUS: STD_LOGIC := '0';
	signal PS_A_CH_MINUS: STD_LOGIC := '0';
	signal PS_B_CH_PLUS: STD_LOGIC := '0';
	signal PS_LAST_LOGIC_GATE_2: STD_LOGIC := '0';
	signal MB_MPLY_DOT_MQ_DOT_B_DOT_1: STD_LOGIC := '1';
	signal MS_DIV_DOT_U_DOT_B_DOT_BB_DOT_T: STD_LOGIC := '1';
	signal PS_A_CH_PLUS: STD_LOGIC := '0';
	signal PS_A_CYCLE: STD_LOGIC := '0';
	signal PS_UNITS_LATCH: STD_LOGIC := '0';
	signal PS_E_OR_Z_OP_CODES: STD_LOGIC := '0';
	signal MS_1401_PLUS_SIGN: STD_LOGIC := '1';

	-- Outputs

	signal PS_MINUS_SIGN_LATCH: STD_LOGIC;
	signal PS_PLUS_SIGN_LATCH: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

   constant MX_X1A_POS: integer := 7;
   constant MX_X6A_POS: integer := 8;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_16_16_04_1_SIGN_LATCHES_ACC port map(
		FPGA_CLK => FPGA_CLK,
		MS_I_CYCLE => MS_I_CYCLE,
		MS_1401_MINUS_SIGN => MS_1401_MINUS_SIGN,
		PS_B_CH_MINUS => PS_B_CH_MINUS,
		PS_A_CH_MINUS => PS_A_CH_MINUS,
		PS_B_CH_PLUS => PS_B_CH_PLUS,
		PS_LAST_LOGIC_GATE_2 => PS_LAST_LOGIC_GATE_2,
		MB_MPLY_DOT_MQ_DOT_B_DOT_1 => MB_MPLY_DOT_MQ_DOT_B_DOT_1,
		MS_DIV_DOT_U_DOT_B_DOT_BB_DOT_T => MS_DIV_DOT_U_DOT_B_DOT_BB_DOT_T,
		PS_A_CH_PLUS => PS_A_CH_PLUS,
		PS_A_CYCLE => PS_A_CYCLE,
		PS_UNITS_LATCH => PS_UNITS_LATCH,
		PS_E_OR_Z_OP_CODES => PS_E_OR_Z_OP_CODES,
		MS_1401_PLUS_SIGN => MS_1401_PLUS_SIGN,
		PS_MINUS_SIGN_LATCH => PS_MINUS_SIGN_LATCH,
		PS_PLUS_SIGN_LATCH => PS_PLUS_SIGN_LATCH);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;
   variable tv: std_logic_vector(25 downto 0);
   variable a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z: std_logic;
   variable g1, g2, g3, g4, g5, g6, g7, g8, g9, g10: std_logic;

   begin

   -- Your test bench code

   testName := "16.16.04.1        ";

   for tt in 0 to 2**12 loop
      tv := std_logic_vector(to_unsigned(tt,tv'Length));
      -- a := tv(0); -- Reset
      b := tv(0);
      c := tv(1);
      d := tv(2);
      e := tv(3);
      f := tv(4);
      g := tv(5);
      h := tv(6);
      j := tv(7);
      k := tv(8);
      l := tv(9);
      m := tv(10);
      n := tv(11);
      
      -- Reset
      
      MS_I_CYCLE <= '0';
      wait for 30 ns;
      MS_I_CYCLE <= '1';
      wait for 30 ns;
      
      check1(PS_MINUS_SIGN_LATCH,'0',testName,"Reset - Latch");
      check1(PS_PLUS_SIGN_LATCH,'0',testName,"Reset + Latch");      

      -- Maybe set the latch      
      
      MS_1401_MINUS_SIGN <= not b;
      PS_B_CH_MINUS <= c;
      PS_A_CH_MINUS <= d;
      PS_B_CH_PLUS <= e;
      PS_LAST_LOGIC_GATE_2 <= f;
      MB_MPLY_DOT_MQ_DOT_B_DOT_1 <= not g;
      MS_DIV_DOT_U_DOT_B_DOT_BB_DOT_T <= not h;
      PS_A_CH_PLUS <= j;
      PS_A_CYCLE <= k;
      PS_UNITS_LATCH <= l;
      PS_E_OR_Z_OP_CODES <= m;
      MS_1401_PLUS_SIGN <= not n;      
      wait for 30 ns;

      -- Set values back to their default - should not affect latch

      MS_1401_MINUS_SIGN <= '1';
      PS_B_CH_MINUS <= '0';
      PS_A_CH_MINUS <= '0';
      PS_B_CH_PLUS <= '0';
      PS_LAST_LOGIC_GATE_2 <= '0';
      MB_MPLY_DOT_MQ_DOT_B_DOT_1 <= '1';
      MS_DIV_DOT_U_DOT_B_DOT_BB_DOT_T <= '1';
      PS_A_CH_PLUS <= '0';
      PS_A_CYCLE <= '0';
      PS_UNITS_LATCH <= '0';
      PS_E_OR_Z_OP_CODES <= '0';
      MS_1401_PLUS_SIGN <= '1';
      wait for 30 ns;

      check1(PS_MINUS_SIGN_LATCH,b or (f and k and l and m and c) or
         (((c and j) or (d and e)) and f and (h or g)),testName,"Set - Latch");

      check1(PS_PLUS_SIGN_LATCH,n or (f and k and l and m and e) or
         (((j and e) or (d and c)) and f and (h or g)),testName,"Set + Latch");      
      
   end loop;

   assert false report "Simulation Ended NORMALLY" severity failure;

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 2 ms;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY (TIMEOUT)" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

end;
