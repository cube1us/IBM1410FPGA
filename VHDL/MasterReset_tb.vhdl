-- Test BenchVHDL for IBM SMS ALD group MasterReset
-- Title: MasterReset
-- IBM Machine Name 1411
-- Generated by GenerateHDL on 7/18/2020 10:22:19 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity MasterReset_tb is
end MasterReset_tb;

architecture behavioral of MasterReset_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component MasterReset
	    Port (
		FPGA_CLK: in STD_LOGIC;
		MV_36_VOLTS: in STD_LOGIC;
		MS_AUTOMATIC_COMPUTER_RESET: in STD_LOGIC;
		PS_STOPPED_DOT_NOT_IN_PROCESS: in STD_LOGIC;
		MS_START_KEY_PULSE: in STD_LOGIC;
		PS_STOPPED_AT_CYCLE_END: in STD_LOGIC;
		MV_CONSOLE_PWR_SUPPLY_36_VOLTS: in STD_LOGIC;
		SWITCH_MOM_CO_CPR_RST: in STD_LOGIC;
		SWITCH_MOM_CE_CPR_RST: in STD_LOGIC;
		SWITCH_MOM_PROG_RESET: in STD_LOGIC;
		SWITCH_TOG_1401_MODE: in STD_LOGIC;
		SWITCH_TOG: in STD_LOGIC;
		MS_COMP_OR_POWER_ON_RESET: out STD_LOGIC;
		MS_COMP_RST_CLOCK_START: out STD_LOGIC;
		PS_EARLY_COMPUTER_RESET: out STD_LOGIC;
		MS_SYSTEM_RESET: out STD_LOGIC;
		MS_COMPUTER_RESET_1: out STD_LOGIC;
		MS_IN_PROCESS_RESET: out STD_LOGIC;
		MS_COMPUTER_RESET_2: out STD_LOGIC;
		MC_COMP_RESET_TO_TAPE_STAR_E_CH: out STD_LOGIC;
		MC_E_CH_COMP_RESET_TO_1301: out STD_LOGIC;
		MC_E_CH_COMP_RESET_TO_1405: out STD_LOGIC;
		MC_COMP_RESET_TO_TAPE_STAR_F_CH: out STD_LOGIC;
		MC_F_CH_COMP_RESET_TO_1301: out STD_LOGIC;
		MC_F_CH_COMP_RESET_TO_1405: out STD_LOGIC;
		MC_COMP_RESET_TO_BUFFER: out STD_LOGIC;
		MS_PROGRAM_RESET_1: out STD_LOGIC;
		MS_ONLY_PROGRAM_RESET: out STD_LOGIC;
		MS_PROGRAM_RESET: out STD_LOGIC;
		PS_PROGRAM_RESET: out STD_LOGIC;
		MS_PROGRAM_RESET_6: out STD_LOGIC;
		MS_START_RESET: out STD_LOGIC;
		MS_PROGRAM_RESET_3: out STD_LOGIC;
		MS_PROGRAM_RESET_4: out STD_LOGIC;
		MS_PROGRAM_RESET_5: out STD_LOGIC;
		MS_PROGRAM_RESET_2: out STD_LOGIC;
		PS_1401_MODE_1: out STD_LOGIC;
		PS_1401_MODE: out STD_LOGIC;
		MV_1401_MODE: out STD_LOGIC;
		MS_1401_MODE_1: out STD_LOGIC;
		MS_1401_MODE: out STD_LOGIC;
		MY_1401_MODE_1: out STD_LOGIC;
		MC_1401_MODE_TO_1405: out STD_LOGIC;
		LAMP_15A1K23: out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal MV_36_VOLTS: STD_LOGIC := '1';
	signal MS_AUTOMATIC_COMPUTER_RESET: STD_LOGIC := '1';
	signal PS_STOPPED_DOT_NOT_IN_PROCESS: STD_LOGIC := '0';
	signal MS_START_KEY_PULSE: STD_LOGIC := '1';
	signal PS_STOPPED_AT_CYCLE_END: STD_LOGIC := '0';
	signal MV_CONSOLE_PWR_SUPPLY_36_VOLTS: STD_LOGIC := '1';
	signal SWITCH_MOM_CO_CPR_RST: STD_LOGIC := '0';
	signal SWITCH_MOM_CE_CPR_RST: STD_LOGIC := '0';
	signal SWITCH_MOM_PROG_RESET: STD_LOGIC := '0';
	signal SWITCH_TOG_1401_MODE: STD_LOGIC := '0';
	signal SWITCH_TOG: STD_LOGIC := '0';

	-- Outputs

	signal MS_COMP_OR_POWER_ON_RESET: STD_LOGIC;
	signal MS_COMP_RST_CLOCK_START: STD_LOGIC;
	signal PS_EARLY_COMPUTER_RESET: STD_LOGIC;
	signal MS_SYSTEM_RESET: STD_LOGIC;
	signal MS_COMPUTER_RESET_1: STD_LOGIC;
	signal MS_IN_PROCESS_RESET: STD_LOGIC;
	signal MS_COMPUTER_RESET_2: STD_LOGIC;
	signal MC_COMP_RESET_TO_TAPE_STAR_E_CH: STD_LOGIC;
	signal MC_E_CH_COMP_RESET_TO_1301: STD_LOGIC;
	signal MC_E_CH_COMP_RESET_TO_1405: STD_LOGIC;
	signal MC_COMP_RESET_TO_TAPE_STAR_F_CH: STD_LOGIC;
	signal MC_F_CH_COMP_RESET_TO_1301: STD_LOGIC;
	signal MC_F_CH_COMP_RESET_TO_1405: STD_LOGIC;
	signal MC_COMP_RESET_TO_BUFFER: STD_LOGIC;
	signal MS_PROGRAM_RESET_1: STD_LOGIC;
	signal MS_ONLY_PROGRAM_RESET: STD_LOGIC;
	signal MS_PROGRAM_RESET: STD_LOGIC;
	signal PS_PROGRAM_RESET: STD_LOGIC;
	signal MS_PROGRAM_RESET_6: STD_LOGIC;
	signal MS_START_RESET: STD_LOGIC;
	signal MS_PROGRAM_RESET_3: STD_LOGIC;
	signal MS_PROGRAM_RESET_4: STD_LOGIC;
	signal MS_PROGRAM_RESET_5: STD_LOGIC;
	signal MS_PROGRAM_RESET_2: STD_LOGIC;
	signal PS_1401_MODE_1: STD_LOGIC;
	signal PS_1401_MODE: STD_LOGIC;
	signal MV_1401_MODE: STD_LOGIC;
	signal MS_1401_MODE_1: STD_LOGIC;
	signal MS_1401_MODE: STD_LOGIC;
	signal MY_1401_MODE_1: STD_LOGIC;
	signal MC_1401_MODE_TO_1405: STD_LOGIC;
	signal LAMP_15A1K23: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: MasterReset port map(
		FPGA_CLK => FPGA_CLK,
		MV_36_VOLTS => MV_36_VOLTS,
		MS_AUTOMATIC_COMPUTER_RESET => MS_AUTOMATIC_COMPUTER_RESET,
		PS_STOPPED_DOT_NOT_IN_PROCESS => PS_STOPPED_DOT_NOT_IN_PROCESS,
		MS_START_KEY_PULSE => MS_START_KEY_PULSE,
		PS_STOPPED_AT_CYCLE_END => PS_STOPPED_AT_CYCLE_END,
		MV_CONSOLE_PWR_SUPPLY_36_VOLTS => MV_CONSOLE_PWR_SUPPLY_36_VOLTS,
		SWITCH_MOM_CO_CPR_RST => SWITCH_MOM_CO_CPR_RST,
		SWITCH_MOM_CE_CPR_RST => SWITCH_MOM_CE_CPR_RST,
		SWITCH_MOM_PROG_RESET => SWITCH_MOM_PROG_RESET,
		SWITCH_TOG_1401_MODE => SWITCH_TOG_1401_MODE,
		SWITCH_TOG => SWITCH_TOG,
		MS_COMP_OR_POWER_ON_RESET => MS_COMP_OR_POWER_ON_RESET,
		MS_COMP_RST_CLOCK_START => MS_COMP_RST_CLOCK_START,
		PS_EARLY_COMPUTER_RESET => PS_EARLY_COMPUTER_RESET,
		MS_SYSTEM_RESET => MS_SYSTEM_RESET,
		MS_COMPUTER_RESET_1 => MS_COMPUTER_RESET_1,
		MS_IN_PROCESS_RESET => MS_IN_PROCESS_RESET,
		MS_COMPUTER_RESET_2 => MS_COMPUTER_RESET_2,
		MC_COMP_RESET_TO_TAPE_STAR_E_CH => MC_COMP_RESET_TO_TAPE_STAR_E_CH,
		MC_E_CH_COMP_RESET_TO_1301 => MC_E_CH_COMP_RESET_TO_1301,
		MC_E_CH_COMP_RESET_TO_1405 => MC_E_CH_COMP_RESET_TO_1405,
		MC_COMP_RESET_TO_TAPE_STAR_F_CH => MC_COMP_RESET_TO_TAPE_STAR_F_CH,
		MC_F_CH_COMP_RESET_TO_1301 => MC_F_CH_COMP_RESET_TO_1301,
		MC_F_CH_COMP_RESET_TO_1405 => MC_F_CH_COMP_RESET_TO_1405,
		MC_COMP_RESET_TO_BUFFER => MC_COMP_RESET_TO_BUFFER,
		MS_PROGRAM_RESET_1 => MS_PROGRAM_RESET_1,
		MS_ONLY_PROGRAM_RESET => MS_ONLY_PROGRAM_RESET,
		MS_PROGRAM_RESET => MS_PROGRAM_RESET,
		PS_PROGRAM_RESET => PS_PROGRAM_RESET,
		MS_PROGRAM_RESET_6 => MS_PROGRAM_RESET_6,
		MS_START_RESET => MS_START_RESET,
		MS_PROGRAM_RESET_3 => MS_PROGRAM_RESET_3,
		MS_PROGRAM_RESET_4 => MS_PROGRAM_RESET_4,
		MS_PROGRAM_RESET_5 => MS_PROGRAM_RESET_5,
		MS_PROGRAM_RESET_2 => MS_PROGRAM_RESET_2,
		PS_1401_MODE_1 => PS_1401_MODE_1,
		PS_1401_MODE => PS_1401_MODE,
		MV_1401_MODE => MV_1401_MODE,
		MS_1401_MODE_1 => MS_1401_MODE_1,
		MS_1401_MODE => MS_1401_MODE,
		MY_1401_MODE_1 => MY_1401_MODE_1,
		MC_1401_MODE_TO_1405 => MC_1401_MODE_TO_1405,
		LAMP_15A1K23 => LAMP_15A1K23);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;

   begin

   -- Your test bench code

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

END;
