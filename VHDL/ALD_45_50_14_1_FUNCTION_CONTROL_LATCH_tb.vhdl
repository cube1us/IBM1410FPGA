-- Test Bench VHDL for IBM SMS ALD page 45.50.14.1
-- Title: FUNCTION CONTROL LATCH
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 11/4/2020 7:35:43 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_45_50_14_1_FUNCTION_CONTROL_LATCH_tb is
end ALD_45_50_14_1_FUNCTION_CONTROL_LATCH_tb;

architecture behavioral of ALD_45_50_14_1_FUNCTION_CONTROL_LATCH_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_45_50_14_1_FUNCTION_CONTROL_LATCH
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_PROGRAM_RESET_4:	 in STD_LOGIC;
		MS_END_OF_CHAR_RESET:	 in STD_LOGIC;
		MS_END_OF_LINE_RESET:	 in STD_LOGIC;
		MS_CONS_MX_6A_POS:	 in STD_LOGIC;
		MS_CONS_MX_34_POS:	 in STD_LOGIC;
		MS_CONS_PRINTER_END_OF_LINE:	 in STD_LOGIC;
		PS_TAKE_CONSOLE_PRINTER_CYCLE:	 in STD_LOGIC;
		PS_CONS_CLOCK_3_POS_1:	 in STD_LOGIC;
		MS_CONS_MX_31_POS:	 in STD_LOGIC;
		MS_CONS_MX_25_POS:	 in STD_LOGIC;
		MS_CONS_MX_21_POS:	 in STD_LOGIC;
		PS_CONS_MX_Y6_POS:	 in STD_LOGIC;
		MS_CONS_ADDR_REG_EXIT_GATE:	 in STD_LOGIC;
		MS_CONS_MX_X6_POS:	 in STD_LOGIC;
		PS_CONS_MOVE_WRITE_OP:	 in STD_LOGIC;
		MS_CONS_OUTPUT_WM_BIT:	 in STD_LOGIC;
		PS_CONSOLE_OUTPUT_C_BIT:	 in STD_LOGIC;
		MS_CONSOLE_OUTPUT_B_BIT:	 in STD_LOGIC;
		MS_CONSOLE_OUTPUT_A_BIT:	 in STD_LOGIC;
		MS_8_4_2_1_BIT:	 in STD_LOGIC;
		MS_CONS_FN_CONTROL:	 out STD_LOGIC;
		PS_FUNCTION_CONTROL:	 out STD_LOGIC;
		PS_CONSOLE_CARRIAGE_RETURN:	 out STD_LOGIC;
		MS_CONSOLE_CARRIAGE_RETURN:	 out STD_LOGIC;
		MS_CONSOLE_SPACE_FUNCTION:	 out STD_LOGIC;
		PS_CONSOLE_SPACE_FUNCTION:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal MS_PROGRAM_RESET_4: STD_LOGIC := '1';
	signal MS_END_OF_CHAR_RESET: STD_LOGIC := '1';
	signal MS_END_OF_LINE_RESET: STD_LOGIC := '1';
	signal MS_CONS_MX_6A_POS: STD_LOGIC := '1';
	signal MS_CONS_MX_34_POS: STD_LOGIC := '1';
	signal MS_CONS_PRINTER_END_OF_LINE: STD_LOGIC := '1';
	signal PS_TAKE_CONSOLE_PRINTER_CYCLE: STD_LOGIC := '0';
	signal PS_CONS_CLOCK_3_POS_1: STD_LOGIC := '0';
	signal MS_CONS_MX_31_POS: STD_LOGIC := '1';
	signal MS_CONS_MX_25_POS: STD_LOGIC := '1';
	signal MS_CONS_MX_21_POS: STD_LOGIC := '1';
	signal PS_CONS_MX_Y6_POS: STD_LOGIC := '0';
	signal MS_CONS_ADDR_REG_EXIT_GATE: STD_LOGIC := '1';
	signal MS_CONS_MX_X6_POS: STD_LOGIC := '1';
	signal PS_CONS_MOVE_WRITE_OP: STD_LOGIC := '0';
	signal MS_CONS_OUTPUT_WM_BIT: STD_LOGIC := '1';
	signal PS_CONSOLE_OUTPUT_C_BIT: STD_LOGIC := '0';
	signal MS_CONSOLE_OUTPUT_B_BIT: STD_LOGIC := '1';
	signal MS_CONSOLE_OUTPUT_A_BIT: STD_LOGIC := '1';
	signal MS_8_4_2_1_BIT: STD_LOGIC := '1';

	-- Outputs

	signal MS_CONS_FN_CONTROL: STD_LOGIC;
	signal PS_FUNCTION_CONTROL: STD_LOGIC;
	signal PS_CONSOLE_CARRIAGE_RETURN: STD_LOGIC;
	signal MS_CONSOLE_CARRIAGE_RETURN: STD_LOGIC;
	signal MS_CONSOLE_SPACE_FUNCTION: STD_LOGIC;
	signal PS_CONSOLE_SPACE_FUNCTION: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

   constant MX_X1A_POS: integer := 7;
   constant MX_X6A_POS: integer := 8;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_45_50_14_1_FUNCTION_CONTROL_LATCH port map(
		FPGA_CLK => FPGA_CLK,
		MS_PROGRAM_RESET_4 => MS_PROGRAM_RESET_4,
		MS_END_OF_CHAR_RESET => MS_END_OF_CHAR_RESET,
		MS_END_OF_LINE_RESET => MS_END_OF_LINE_RESET,
		MS_CONS_MX_6A_POS => MS_CONS_MX_6A_POS,
		MS_CONS_MX_34_POS => MS_CONS_MX_34_POS,
		MS_CONS_PRINTER_END_OF_LINE => MS_CONS_PRINTER_END_OF_LINE,
		PS_TAKE_CONSOLE_PRINTER_CYCLE => PS_TAKE_CONSOLE_PRINTER_CYCLE,
		PS_CONS_CLOCK_3_POS_1 => PS_CONS_CLOCK_3_POS_1,
		MS_CONS_MX_31_POS => MS_CONS_MX_31_POS,
		MS_CONS_MX_25_POS => MS_CONS_MX_25_POS,
		MS_CONS_MX_21_POS => MS_CONS_MX_21_POS,
		PS_CONS_MX_Y6_POS => PS_CONS_MX_Y6_POS,
		MS_CONS_ADDR_REG_EXIT_GATE => MS_CONS_ADDR_REG_EXIT_GATE,
		MS_CONS_MX_X6_POS => MS_CONS_MX_X6_POS,
		PS_CONS_MOVE_WRITE_OP => PS_CONS_MOVE_WRITE_OP,
		MS_CONS_OUTPUT_WM_BIT => MS_CONS_OUTPUT_WM_BIT,
		PS_CONSOLE_OUTPUT_C_BIT => PS_CONSOLE_OUTPUT_C_BIT,
		MS_CONSOLE_OUTPUT_B_BIT => MS_CONSOLE_OUTPUT_B_BIT,
		MS_CONSOLE_OUTPUT_A_BIT => MS_CONSOLE_OUTPUT_A_BIT,
		MS_8_4_2_1_BIT => MS_8_4_2_1_BIT,
		MS_CONS_FN_CONTROL => MS_CONS_FN_CONTROL,
		PS_FUNCTION_CONTROL => PS_FUNCTION_CONTROL,
		PS_CONSOLE_CARRIAGE_RETURN => PS_CONSOLE_CARRIAGE_RETURN,
		MS_CONSOLE_CARRIAGE_RETURN => MS_CONSOLE_CARRIAGE_RETURN,
		MS_CONSOLE_SPACE_FUNCTION => MS_CONSOLE_SPACE_FUNCTION,
		PS_CONSOLE_SPACE_FUNCTION => PS_CONSOLE_SPACE_FUNCTION);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;
   variable tv: std_logic_vector(25 downto 0);
   variable a,b,c,d,e,f,g,h,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z: std_logic;
   variable g1, g2, g3, g4, g5, g6, g7, g8, g9, g10: std_logic;

   begin

   -- Your test bench code

   testName := "45.50.14.1        ";

   for tt in 0 to 2**19 loop
      tv := std_logic_vector(to_unsigned(tt,tv'Length));
      b := tv(0);
      c := tv(1);
      d := tv(2);
      e := tv(3);
      f := tv(4);
      g := tv(5);
      h := tv(6);
      j := tv(7);
      k := tv(8);
      l := tv(9);
      m := tv(10);
      n := tv(11);
      o := tv(12);
      p := tv(13);
      q := tv(14);
      r := tv(15);
      s := tv(16);
      t := tv(17);
      u := tv(18);
      
      g1 := d or e or f;
      g2 := p and not q and r and not s and not t and not u;
      g3 := m and (n or o);
      g5 := g2 or j or k or l or g3;
      g6 := c or (g5 and g and h) or (h and g and g1);
      
      -- Reset
      
      MS_PROGRAM_RESET_4 <= '0';
      wait for 30 ns;       
      MS_PROGRAM_RESET_4 <= '1';
      wait for 30 ns;       
      
      check1(PS_FUNCTION_CONTROL,'0',testName,"Init +S Console FN control");
      check1(MS_CONS_FN_CONTROL,'1',testName,"Init -S Console FN control");      

		MS_END_OF_LINE_RESET <= not c;
		MS_CONS_MX_6A_POS <= not d;
		MS_CONS_MX_34_POS <= not e;
		MS_CONS_PRINTER_END_OF_LINE <= not f;
		PS_TAKE_CONSOLE_PRINTER_CYCLE <= g;
		PS_CONS_CLOCK_3_POS_1 <= h;
		MS_CONS_MX_31_POS <= not j;
		MS_CONS_MX_25_POS <= not k;
		MS_CONS_MX_21_POS <= not l;
		PS_CONS_MX_Y6_POS <= m;
		MS_CONS_ADDR_REG_EXIT_GATE <= not n;
		MS_CONS_MX_X6_POS <= not o;
		PS_CONS_MOVE_WRITE_OP <= p;
		MS_CONS_OUTPUT_WM_BIT <= not q;
		PS_CONSOLE_OUTPUT_C_BIT <= r;
		MS_CONSOLE_OUTPUT_B_BIT <= not s;
		MS_CONSOLE_OUTPUT_A_BIT <= not t;
		MS_8_4_2_1_BIT <= not u;
      
      wait for 30 ns;  -- Maybe set the latch
      
      check1(PS_CONSOLE_CARRIAGE_RETURN,g1,testName,"+S Console Carriage Return");
      check1(MS_CONSOLE_CARRIAGE_RETURN,not g1,testName,"-S Console Carriage Return");
      check1(PS_CONSOLE_SPACE_FUNCTION,g5,testName,"+S Console Space Function");
      check1(MS_CONSOLE_SPACE_FUNCTION,not g5,testName,"-S Console Space Function");
      check1(PS_FUNCTION_CONTROL,g6,testName,"Set +S Console FN control");
      check1(MS_CONS_FN_CONTROL,not PS_FUNCTION_CONTROL,testName,"Set -S Console FN control");
      
      -- Remove critical signals used in setting the latch.  Latch should be unaffected
      
      MS_END_OF_LINE_RESET <= '1';
		PS_TAKE_CONSOLE_PRINTER_CYCLE <= '0';
		PS_CONS_CLOCK_3_POS_1 <= '0';
		wait for 30 ns;

      check1(PS_FUNCTION_CONTROL,g6,testName,"Check set +S Console FN control");
      check1(MS_CONS_FN_CONTROL,not PS_FUNCTION_CONTROL,testName,"Check set -S Console FN control");
      
      -- Perhaps reset the latch

      MS_END_OF_CHAR_RESET <= not b;
      wait for 30 ns;

      check1(PS_FUNCTION_CONTROL,g6 and not b,testName,"Reset +S Console FN control");
      check1(MS_CONS_FN_CONTROL,not PS_FUNCTION_CONTROL,testName,"Reset -S Console FN control");
      
      -- Set the reset signal back to its default.

      MS_END_OF_CHAR_RESET <= '1';
      
   end loop;

   assert false report "Simulation Ended NORMALLY" severity failure;

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 200 ms;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY (TIMEOUT)" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

end;
