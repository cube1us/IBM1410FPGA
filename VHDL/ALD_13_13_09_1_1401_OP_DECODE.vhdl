-- VHDL for IBM SMS ALD page 13.13.09.1
-- Title: 1401 OP DECODE
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 7/24/2020 2:17:58 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_13_13_09_1_1401_OP_DECODE is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_OP_DCDR_NOT_B_DOT_A_DOT_8_B:	 in STD_LOGIC;
		PS_OP_DCDR_NOT_4_DOT_NOT_2_DOT_NOT_1_B:	 in STD_LOGIC;
		PS_OP_DCDR_4_DOT_2_DOT_1_B:	 in STD_LOGIC;
		PS_OP_REG_1401_C_BIT:	 in STD_LOGIC;
		PS_OP_DCDR_B_DOT_A_DOT_NOT_8_B:	 in STD_LOGIC;
		PS_OP_DCDR_4_DOT_NOT_2_DOT_NOT_1_B:	 in STD_LOGIC;
		PS_OP_DCDR_B_DOT_NOT_A_DOT_NOT_8_B:	 in STD_LOGIC;
		MS_I_O_PERCENT_LATCH:	 in STD_LOGIC;
		PS_OP_REG_1401_NOT_C_BIT:	 in STD_LOGIC;
		PS_OP_DCDR_NOT_4_DOT_2_DOT_1_B:	 in STD_LOGIC;
		PS_I_O_PERCENT_LATCH:	 in STD_LOGIC;
		PS_1401_D_OR_P_OR_Y_OP_CODES:	 out STD_LOGIC;
		MS_1401_Y_OP_CODE:	 out STD_LOGIC;
		MS_1401_DATA_MOVE_OP:	 out STD_LOGIC;
		PS_1401_DATA_MOVE_OP_CODES:	 out STD_LOGIC;
		PS_1401_P_OP_CODE:	 out STD_LOGIC;
		MS_1401_D_OP_CODE:	 out STD_LOGIC;
		MS_1401_M_OP_CODE:	 out STD_LOGIC;
		PS_1401_L_NOT_PERCENT_OP_CODE:	 out STD_LOGIC;
		MS_1401_L_OP_CODE:	 out STD_LOGIC;
		MS_1401_I_O_MOVE_OP:	 out STD_LOGIC;
		MS_1401_I_O_LOAD_OP:	 out STD_LOGIC);
end ALD_13_13_09_1_1401_OP_DECODE;

architecture behavioral of ALD_13_13_09_1_1401_OP_DECODE is 

	signal OUT_4A_D: STD_LOGIC;
	signal OUT_2A_D: STD_LOGIC;
	signal OUT_4B_C: STD_LOGIC;
	signal OUT_2B_C: STD_LOGIC;
	signal OUT_1B_P: STD_LOGIC;
	signal OUT_4C_C: STD_LOGIC;
	signal OUT_2C_K: STD_LOGIC;
	signal OUT_5D_E: STD_LOGIC;
	signal OUT_4D_P: STD_LOGIC;
	signal OUT_3D_NoPin: STD_LOGIC;
	signal OUT_5E_D: STD_LOGIC;
	signal OUT_4E_F: STD_LOGIC;
	signal OUT_3E_C: STD_LOGIC;
	signal OUT_2E_F: STD_LOGIC;
	signal OUT_1E_C: STD_LOGIC;
	signal OUT_3F_G: STD_LOGIC;
	signal OUT_3H_C: STD_LOGIC;
	signal OUT_DOT_2B: STD_LOGIC;

begin

	OUT_4A_D <= NOT(PS_OP_REG_1401_C_BIT AND PS_OP_DCDR_NOT_B_DOT_A_DOT_8_B AND PS_OP_DCDR_NOT_4_DOT_NOT_2_DOT_NOT_1_B );
	OUT_2A_D <= NOT(OUT_4A_D AND OUT_4B_C AND OUT_4C_C );
	OUT_4B_C <= NOT(PS_OP_REG_1401_C_BIT AND PS_OP_DCDR_4_DOT_2_DOT_1_B AND PS_OP_DCDR_B_DOT_NOT_A_DOT_NOT_8_B );
	OUT_2B_C <= NOT(OUT_4A_D AND OUT_4B_C AND OUT_4C_C );
	OUT_1B_P <= NOT(OUT_DOT_2B );
	OUT_4C_C <= NOT(PS_OP_REG_1401_NOT_C_BIT AND PS_OP_DCDR_B_DOT_A_DOT_NOT_8_B AND PS_OP_DCDR_4_DOT_NOT_2_DOT_NOT_1_B );
	OUT_2C_K <= NOT(OUT_4B_C );
	OUT_5D_E <= NOT(PS_OP_DCDR_4_DOT_NOT_2_DOT_NOT_1_B AND PS_OP_DCDR_B_DOT_NOT_A_DOT_NOT_8_B AND PS_OP_REG_1401_C_BIT );
	OUT_4D_P <= NOT(OUT_5D_E );
	OUT_3D_NoPin <= NOT(OUT_4D_P AND MS_I_O_PERCENT_LATCH );
	OUT_5E_D <= NOT(PS_OP_REG_1401_NOT_C_BIT AND PS_OP_DCDR_B_DOT_NOT_A_DOT_NOT_8_B AND PS_OP_DCDR_NOT_4_DOT_2_DOT_1_B );
	OUT_4E_F <= NOT OUT_5E_D;
	OUT_3E_C <= NOT(OUT_4E_F AND MS_I_O_PERCENT_LATCH );
	OUT_2E_F <= NOT(OUT_3D_NoPin AND OUT_3E_C );
	OUT_1E_C <= NOT OUT_3E_C;
	OUT_3F_G <= NOT(OUT_4D_P AND PS_I_O_PERCENT_LATCH );
	OUT_3H_C <= NOT(OUT_4E_F AND PS_I_O_PERCENT_LATCH );
	OUT_DOT_2B <= OUT_2B_C OR OUT_2E_F;

	MS_1401_Y_OP_CODE <= OUT_4A_D;
	PS_1401_D_OR_P_OR_Y_OP_CODES <= OUT_2A_D;
	MS_1401_DATA_MOVE_OP <= OUT_1B_P;
	MS_1401_D_OP_CODE <= OUT_4C_C;
	PS_1401_P_OP_CODE <= OUT_2C_K;
	MS_1401_M_OP_CODE <= OUT_5D_E;
	MS_1401_L_OP_CODE <= OUT_5E_D;
	PS_1401_L_NOT_PERCENT_OP_CODE <= OUT_1E_C;
	MS_1401_I_O_MOVE_OP <= OUT_3F_G;
	MS_1401_I_O_LOAD_OP <= OUT_3H_C;
	PS_1401_DATA_MOVE_OP_CODES <= OUT_DOT_2B;


end;
