-- Test Bench VHDL for IBM SMS ALD page 15.38.01.1
-- Title: A DATA REGISTER CONTROL-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 9/9/2020 9:13:05 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_15_38_01_1_A_DATA_REGISTER_CONTROL_ACC_tb is
end ALD_15_38_01_1_A_DATA_REGISTER_CONTROL_ACC_tb;

architecture behavioral of ALD_15_38_01_1_A_DATA_REGISTER_CONTROL_ACC_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_15_38_01_1_A_DATA_REGISTER_CONTROL_ACC
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_1401_STORE_AR_OP_CODES:	 in STD_LOGIC;
		PS_I_CYCLE_1:	 in STD_LOGIC;
		PS_A_CYCLE:	 in STD_LOGIC;
		PS_NO_SCAN_1:	 in STD_LOGIC;
		PS_MPLY_OP_CODE:	 in STD_LOGIC;
		PS_LOGIC_GATE_D_1:	 in STD_LOGIC;
		PS_C_CYCLE:	 in STD_LOGIC;
		PS_STORE_ADDR_REGS_OP_CODE:	 in STD_LOGIC;
		PS_1401_STORE_AR_OP_CODES:	 in STD_LOGIC;
		PS_C_CYCLE_CTRL:	 in STD_LOGIC;
		MS_MPLY_DOT_NO_SCAN_CTRL_DOT_C_CY_CTRL:	 in STD_LOGIC;
		PS_LOGIC_GATE_C_1:	 in STD_LOGIC;
		PS_X_CYCLE:	 in STD_LOGIC;
		MS_I_CYCLE_CTRL:	 in STD_LOGIC;
		MS_A_CYCLE_CTRL:	 in STD_LOGIC;
		MS_X_CYCLE_CTRL:	 in STD_LOGIC;
		MS_PROGRAM_RESET_1:	 in STD_LOGIC;
		PS_2ND_CLOCK_PULSE_3:	 in STD_LOGIC;
		PS_SW_B_CH_TO_A_REG:	 out STD_LOGIC;
		PS_SW_AR_EXIT_CH_TO_A_REG:	 out STD_LOGIC;
		MS_RESET_A_DATA_REG:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal MS_1401_STORE_AR_OP_CODES: STD_LOGIC := '1';
	signal PS_I_CYCLE_1: STD_LOGIC := '0';
	signal PS_A_CYCLE: STD_LOGIC := '0';
	signal PS_NO_SCAN_1: STD_LOGIC := '0';
	signal PS_MPLY_OP_CODE: STD_LOGIC := '0';
	signal PS_LOGIC_GATE_D_1: STD_LOGIC := '0';
	signal PS_C_CYCLE: STD_LOGIC := '0';
	signal PS_STORE_ADDR_REGS_OP_CODE: STD_LOGIC := '0';
	signal PS_1401_STORE_AR_OP_CODES: STD_LOGIC := '0';
	signal PS_C_CYCLE_CTRL: STD_LOGIC := '0';
	signal MS_MPLY_DOT_NO_SCAN_CTRL_DOT_C_CY_CTRL: STD_LOGIC := '1';
	signal PS_LOGIC_GATE_C_1: STD_LOGIC := '0';
	signal PS_X_CYCLE: STD_LOGIC := '0';
	signal MS_I_CYCLE_CTRL: STD_LOGIC := '1';
	signal MS_A_CYCLE_CTRL: STD_LOGIC := '1';
	signal MS_X_CYCLE_CTRL: STD_LOGIC := '1';
	signal MS_PROGRAM_RESET_1: STD_LOGIC := '1';
	signal PS_2ND_CLOCK_PULSE_3: STD_LOGIC := '0';

	-- Outputs

	signal PS_SW_B_CH_TO_A_REG: STD_LOGIC;
	signal PS_SW_AR_EXIT_CH_TO_A_REG: STD_LOGIC;
	signal MS_RESET_A_DATA_REG: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

   constant MX_X1A_POS: integer := 7;
   constant MX_X6A_POS: integer := 8;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_15_38_01_1_A_DATA_REGISTER_CONTROL_ACC port map(
		FPGA_CLK => FPGA_CLK,
		MS_1401_STORE_AR_OP_CODES => MS_1401_STORE_AR_OP_CODES,
		PS_I_CYCLE_1 => PS_I_CYCLE_1,
		PS_A_CYCLE => PS_A_CYCLE,
		PS_NO_SCAN_1 => PS_NO_SCAN_1,
		PS_MPLY_OP_CODE => PS_MPLY_OP_CODE,
		PS_LOGIC_GATE_D_1 => PS_LOGIC_GATE_D_1,
		PS_C_CYCLE => PS_C_CYCLE,
		PS_STORE_ADDR_REGS_OP_CODE => PS_STORE_ADDR_REGS_OP_CODE,
		PS_1401_STORE_AR_OP_CODES => PS_1401_STORE_AR_OP_CODES,
		PS_C_CYCLE_CTRL => PS_C_CYCLE_CTRL,
		MS_MPLY_DOT_NO_SCAN_CTRL_DOT_C_CY_CTRL => MS_MPLY_DOT_NO_SCAN_CTRL_DOT_C_CY_CTRL,
		PS_LOGIC_GATE_C_1 => PS_LOGIC_GATE_C_1,
		PS_X_CYCLE => PS_X_CYCLE,
		MS_I_CYCLE_CTRL => MS_I_CYCLE_CTRL,
		MS_A_CYCLE_CTRL => MS_A_CYCLE_CTRL,
		MS_X_CYCLE_CTRL => MS_X_CYCLE_CTRL,
		MS_PROGRAM_RESET_1 => MS_PROGRAM_RESET_1,
		PS_2ND_CLOCK_PULSE_3 => PS_2ND_CLOCK_PULSE_3,
		PS_SW_B_CH_TO_A_REG => PS_SW_B_CH_TO_A_REG,
		PS_SW_AR_EXIT_CH_TO_A_REG => PS_SW_AR_EXIT_CH_TO_A_REG,
		MS_RESET_A_DATA_REG => MS_RESET_A_DATA_REG);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;
   variable tv: std_logic_vector(15 downto 0);
   variable a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p: std_logic;
   variable g1, g2, g3, g4, g5, g6: std_logic;

   begin

   -- Your test bench code

   assert false report "Simulation Ended NORMALLY" severity failure;

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 2 ms;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY (TIMEOUT)" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

end;
