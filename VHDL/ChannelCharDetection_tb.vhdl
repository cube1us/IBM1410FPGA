-- Test BenchVHDL for IBM SMS ALD group ChannelCharDetection
-- Title: ChannelCharDetection
-- IBM Machine Name 1411
-- Generated by GenerateHDL on 9/10/2020 9:23:03 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ChannelCharDetection_tb is
end ChannelCharDetection_tb;

architecture behavioral of ChannelCharDetection_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ChannelCharDetection
	    Port (
		FPGA_CLK: in STD_LOGIC;
		PS_E1_INPUT_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		MS_E1_INPUT_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		PS_A_CH_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		PS_A_CH_NOT_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		PB_B_CH_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		PB_B_CH_NOT_BUS: in STD_LOGIC_VECTOR (6 downTo 0);
		PS_F1_INPUT_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		MS_F1_INPUT_BUS: in STD_LOGIC_VECTOR (7 downTo 0);
		MS_E_CH_WORD_SEPARATOR: out STD_LOGIC;
		PS_A_CH_NOT_GROUP_MARK_DOT_WM: out STD_LOGIC;
		PS_A_CH_GROUP_MARK_DOT_WM: out STD_LOGIC;
		MS_A_CH_CHAR_NOT_A_BIT: out STD_LOGIC;
		PS_A_CH_CHAR_A_BIT_ONLY: out STD_LOGIC;
		MB_B_CH_NOT_BLANK: out STD_LOGIC;
		PB_B_CH_BLANK: out STD_LOGIC;
		PS_A_CH_NOT_RECORD_MARK: out STD_LOGIC;
		PS_A_CH_RECORD_MARK: out STD_LOGIC;
		PS_B_CH_NOT_GROUP_MARK_WM: out STD_LOGIC;
		PS_B_CH_GROUP_MARK_DOT_WM: out STD_LOGIC;
		MS_B_CH_GROUP_MARK_DOT_WM: out STD_LOGIC;
		PB_B_CH_GROUP_MARK_WM: out STD_LOGIC;
		PB_B_CH_NOT_GROUP_MARK_WM: out STD_LOGIC;
		PS_F_CH_NOT_WORD_SEPARATOR: out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_E1_INPUT_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";
	signal MS_E1_INPUT_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "11111111";
	signal PS_A_CH_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";
	signal PS_A_CH_NOT_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";
	signal PB_B_CH_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";
	signal PB_B_CH_NOT_BUS: STD_LOGIC_VECTOR (6 downTo 0) := "0000000";
	signal PS_F1_INPUT_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "00000000";
	signal MS_F1_INPUT_BUS: STD_LOGIC_VECTOR (7 downTo 0) := "11111111";

	-- Outputs

	signal MS_E_CH_WORD_SEPARATOR: STD_LOGIC;
	signal PS_A_CH_NOT_GROUP_MARK_DOT_WM: STD_LOGIC;
	signal PS_A_CH_GROUP_MARK_DOT_WM: STD_LOGIC;
	signal MS_A_CH_CHAR_NOT_A_BIT: STD_LOGIC;
	signal PS_A_CH_CHAR_A_BIT_ONLY: STD_LOGIC;
	signal MB_B_CH_NOT_BLANK: STD_LOGIC;
	signal PB_B_CH_BLANK: STD_LOGIC;
	signal PS_A_CH_NOT_RECORD_MARK: STD_LOGIC;
	signal PS_A_CH_RECORD_MARK: STD_LOGIC;
	signal PS_B_CH_NOT_GROUP_MARK_WM: STD_LOGIC;
	signal PS_B_CH_GROUP_MARK_DOT_WM: STD_LOGIC;
	signal MS_B_CH_GROUP_MARK_DOT_WM: STD_LOGIC;
	signal PB_B_CH_GROUP_MARK_WM: STD_LOGIC;
	signal PB_B_CH_NOT_GROUP_MARK_WM: STD_LOGIC;
	signal PS_F_CH_NOT_WORD_SEPARATOR: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

   constant MX_X1A_POS: integer := 7;
   constant MX_X6A_POS: integer := 8;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ChannelCharDetection port map(
		FPGA_CLK => FPGA_CLK,
		PS_E1_INPUT_BUS => PS_E1_INPUT_BUS,
		MS_E1_INPUT_BUS => MS_E1_INPUT_BUS,
		PS_A_CH_BUS => PS_A_CH_BUS,
		PS_A_CH_NOT_BUS => PS_A_CH_NOT_BUS,
		PB_B_CH_BUS => PB_B_CH_BUS,
		PB_B_CH_NOT_BUS => PB_B_CH_NOT_BUS,
		PS_F1_INPUT_BUS => PS_F1_INPUT_BUS,
		MS_F1_INPUT_BUS => MS_F1_INPUT_BUS,
		MS_E_CH_WORD_SEPARATOR => MS_E_CH_WORD_SEPARATOR,
		PS_A_CH_NOT_GROUP_MARK_DOT_WM => PS_A_CH_NOT_GROUP_MARK_DOT_WM,
		PS_A_CH_GROUP_MARK_DOT_WM => PS_A_CH_GROUP_MARK_DOT_WM,
		MS_A_CH_CHAR_NOT_A_BIT => MS_A_CH_CHAR_NOT_A_BIT,
		PS_A_CH_CHAR_A_BIT_ONLY => PS_A_CH_CHAR_A_BIT_ONLY,
		MB_B_CH_NOT_BLANK => MB_B_CH_NOT_BLANK,
		PB_B_CH_BLANK => PB_B_CH_BLANK,
		PS_A_CH_NOT_RECORD_MARK => PS_A_CH_NOT_RECORD_MARK,
		PS_A_CH_RECORD_MARK => PS_A_CH_RECORD_MARK,
		PS_B_CH_NOT_GROUP_MARK_WM => PS_B_CH_NOT_GROUP_MARK_WM,
		PS_B_CH_GROUP_MARK_DOT_WM => PS_B_CH_GROUP_MARK_DOT_WM,
		MS_B_CH_GROUP_MARK_DOT_WM => MS_B_CH_GROUP_MARK_DOT_WM,
		PB_B_CH_GROUP_MARK_WM => PB_B_CH_GROUP_MARK_WM,
		PB_B_CH_NOT_GROUP_MARK_WM => PB_B_CH_NOT_GROUP_MARK_WM,
		PS_F_CH_NOT_WORD_SEPARATOR => PS_F_CH_NOT_WORD_SEPARATOR);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;
   variable tv: std_logic_vector(15 downto 0);
   variable a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p: std_logic;
   variable g1, g2, g3, g4, g5, g6: std_logic;

   begin

   -- Your test bench code

   assert false report "Simulation Ended NORMALLY" severity failure;

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 2 ms;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY (TIMEOUT)" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

END;
