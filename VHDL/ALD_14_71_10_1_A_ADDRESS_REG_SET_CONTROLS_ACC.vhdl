-- VHDL for IBM SMS ALD page 14.71.10.1
-- Title: A ADDRESS REG SET CONTROLS-ACC
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 9/4/2020 5:25:50 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_14_71_10_1_A_ADDRESS_REG_SET_CONTROLS_ACC is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_A_CYCLE_CTRL:	 in STD_LOGIC;
		PS_LOGIC_GATE_B_OR_C:	 in STD_LOGIC;
		PS_A_CYCLE:	 in STD_LOGIC;
		PS_LOGIC_GATE_D_OR_E_OR_F:	 in STD_LOGIC;
		PS_1311_SET_AAR:	 in STD_LOGIC;
		PS_INDEX_A_AR:	 in STD_LOGIC;
		PS_INDEX_GATE:	 in STD_LOGIC;
		PS_RD_1ST_ADDR_TO_A_AND_C_AR:	 in STD_LOGIC;
		PS_1ST_ADDRESS:	 in STD_LOGIC;
		PS_INSN_RO_GATE:	 in STD_LOGIC;
		MS_STOPPED_AT_CYCLE_END:	 in STD_LOGIC;
		MV_CONS_MODE_SW_ADDR_SET_MODE:	 in STD_LOGIC;
		SWITCH_ROT_ADDR_ENTRY:	 in STD_LOGIC_VECTOR(11 downTo 0);
		PS_SET_A_AR:	 out STD_LOGIC;
		MS_INDEX_A_AR_DOT_INDEX_GATE:	 out STD_LOGIC;
		MS_SET_A_AND_C_AR:	 out STD_LOGIC;
		MV_CONS_ADDRESS_ENTRY_B_AR:	 out STD_LOGIC;
		MV_CONS_ADDRESS_ENTRY_D_AR:	 out STD_LOGIC;
		MV_CONS_ADDRESS_ENTRY_C_AR:	 out STD_LOGIC;
		MV_CONS_ADDRESS_ENTRY_NORMAL_1:	 out STD_LOGIC;
		MV_CONS_ADDRESS_ENTRY_NORMAL_2:	 out STD_LOGIC;
		MV_CONS_ADDRESS_ENTRY_F_AR:	 out STD_LOGIC;
		MV_CONS_ADDRESS_ENTRY_E_AR:	 out STD_LOGIC);
end ALD_14_71_10_1_A_ADDRESS_REG_SET_CONTROLS_ACC;

architecture behavioral of ALD_14_71_10_1_A_ADDRESS_REG_SET_CONTROLS_ACC is 

	signal OUT_5A_NoPin: STD_LOGIC;
	signal OUT_5B_NoPin: STD_LOGIC;
	signal OUT_4B_E: STD_LOGIC;
	signal OUT_2B_G: STD_LOGIC;
	signal OUT_5C_R: STD_LOGIC;
	signal OUT_4C_G: STD_LOGIC;
	signal OUT_5D_E: STD_LOGIC;
	signal OUT_5E_X: STD_LOGIC;
	signal OUT_4E_G: STD_LOGIC;
	signal OUT_2F_X: STD_LOGIC;
	signal OUT_5G_A: STD_LOGIC;
	signal OUT_5G_B: STD_LOGIC;
	signal OUT_5G_K: STD_LOGIC;
	signal OUT_5G_D: STD_LOGIC;
	signal OUT_5G_E: STD_LOGIC;
	signal OUT_5G_F: STD_LOGIC;
	signal OUT_5G_G: STD_LOGIC;
	signal OUT_4G_X: STD_LOGIC;
	signal OUT_2G_X: STD_LOGIC;
	signal OUT_4H_X: STD_LOGIC;
	signal OUT_2H_X: STD_LOGIC;
	signal OUT_4I_X: STD_LOGIC;
	signal OUT_2I_X: STD_LOGIC;
	signal OUT_DOT_4B: STD_LOGIC;

begin

	OUT_5A_NoPin <= NOT(PS_A_CYCLE_CTRL AND PS_LOGIC_GATE_B_OR_C );
	OUT_5B_NoPin <= NOT(PS_A_CYCLE AND PS_LOGIC_GATE_D_OR_E_OR_F );
	OUT_4B_E <= NOT(OUT_5A_NoPin AND OUT_5B_NoPin );
	OUT_2B_G <= OUT_DOT_4B;
	OUT_5C_R <= NOT(PS_INDEX_A_AR AND PS_INDEX_GATE );
	OUT_4C_G <= NOT(OUT_5C_R AND OUT_5D_E );
	OUT_5D_E <= NOT(PS_RD_1ST_ADDR_TO_A_AND_C_AR AND PS_1ST_ADDRESS AND PS_INSN_RO_GATE );
	OUT_5E_X <= OUT_5G_A;
	OUT_4E_G <= NOT(OUT_5E_X OR MS_STOPPED_AT_CYCLE_END );
	OUT_2F_X <= OUT_5G_B;
	OUT_5G_A <= NOT SWITCH_ROT_ADDR_ENTRY(1);
	OUT_5G_B <= NOT SWITCH_ROT_ADDR_ENTRY(2);
	OUT_5G_K <= NOT SWITCH_ROT_ADDR_ENTRY(3);
	OUT_5G_D <= NOT SWITCH_ROT_ADDR_ENTRY(4);
	OUT_5G_E <= NOT SWITCH_ROT_ADDR_ENTRY(5);
	OUT_5G_E <= NOT SWITCH_ROT_ADDR_ENTRY(5);
	OUT_5G_F <= NOT SWITCH_ROT_ADDR_ENTRY(6);
	OUT_5G_G <= NOT SWITCH_ROT_ADDR_ENTRY(7);
	OUT_4G_X <= OUT_5G_K;
	OUT_2G_X <= OUT_5G_D;
	OUT_4H_X <= OUT_5G_E;
	OUT_2H_X <= OUT_5G_E;
	OUT_4I_X <= OUT_5G_F;
	OUT_2I_X <= OUT_5G_G;
	OUT_DOT_4B <= OUT_4B_E OR PS_1311_SET_AAR OR OUT_4C_G OR OUT_4E_G;

	PS_SET_A_AR <= OUT_2B_G;
	MS_INDEX_A_AR_DOT_INDEX_GATE <= OUT_5C_R;
	MS_SET_A_AND_C_AR <= OUT_5D_E;
	MV_CONS_ADDRESS_ENTRY_B_AR <= OUT_2F_X;
	MV_CONS_ADDRESS_ENTRY_C_AR <= OUT_4G_X;
	MV_CONS_ADDRESS_ENTRY_D_AR <= OUT_2G_X;
	MV_CONS_ADDRESS_ENTRY_NORMAL_2 <= OUT_4H_X;
	MV_CONS_ADDRESS_ENTRY_NORMAL_1 <= OUT_2H_X;
	MV_CONS_ADDRESS_ENTRY_E_AR <= OUT_4I_X;
	MV_CONS_ADDRESS_ENTRY_F_AR <= OUT_2I_X;


end;
