-- VHDL for IBM SMS ALD page 12.12.67.1
-- Title: F CYCLE CONTROL
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 6/29/2020 2:10:38 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_12_12_67_1_F_CYCLE_CONTROL is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_LOGIC_GATE_D_OR_U:	 in STD_LOGIC;
		PS_E_CYCLE:	 in STD_LOGIC;
		MS_PROGRAM_RESET_2:	 in STD_LOGIC;
		PS_2ND_CLOCK_PULSE_2:	 in STD_LOGIC;
		PS_F_CYCLE_REQUIRED:	 in STD_LOGIC;
		MS_F_CH_FILE_OP:	 in STD_LOGIC;
		PS_FILE_OP_DLY_EXTENSION:	 in STD_LOGIC;
		PS_LOGIC_GATE_Z:	 in STD_LOGIC;
		MS_F_CH_INT_END_OF_TRANSFER:	 in STD_LOGIC;
		PS_E_CH_IN_PROCESS:	 in STD_LOGIC;
		PS_LOGIC_GATE_B_OR_S:	 in STD_LOGIC;
		MS_E_CYCLE_REQUIRED:	 in STD_LOGIC;
		PS_F_CYCLE_CTRL:	 out STD_LOGIC;
		MS_F_CYCLE_CTRL:	 out STD_LOGIC;
		PS_F_CYCLE:	 out STD_LOGIC;
		MS_F_CYCLE:	 out STD_LOGIC;
		LAMP_15A1F10:	 out STD_LOGIC;
		LAMP_11C8F15:	 out STD_LOGIC);
end ALD_12_12_67_1_F_CYCLE_CONTROL;

architecture behavioral of ALD_12_12_67_1_F_CYCLE_CONTROL is 

	signal OUT_5A_D: STD_LOGIC;
	signal OUT_5A_D_Latch: STD_LOGIC;
	signal OUT_4A_F: STD_LOGIC;
	signal OUT_4A_F_Latch: STD_LOGIC;
	signal OUT_5B_C: STD_LOGIC;
	signal OUT_4B_B: STD_LOGIC;
	signal OUT_5C_B: STD_LOGIC;
	signal OUT_2C_D: STD_LOGIC;
	signal OUT_5D_R: STD_LOGIC;
	signal OUT_2D_K: STD_LOGIC;
	signal OUT_1D_F: STD_LOGIC;
	signal OUT_5E_R: STD_LOGIC;
	signal OUT_4E_F: STD_LOGIC;
	signal OUT_2E_B: STD_LOGIC;
	signal OUT_5F_R: STD_LOGIC;
	signal OUT_3F_R: STD_LOGIC;
	signal OUT_2F_D: STD_LOGIC;
	signal OUT_5G_G: STD_LOGIC;
	signal OUT_3G_R: STD_LOGIC;
	signal OUT_2G_C: STD_LOGIC;
	signal OUT_5H_F: STD_LOGIC;
	signal OUT_4H_F: STD_LOGIC;
	signal OUT_2H_C: STD_LOGIC;
	signal OUT_2H_C_Latch: STD_LOGIC;
	signal OUT_1H_H: STD_LOGIC;
	signal OUT_1H_H_Latch: STD_LOGIC;
	signal OUT_4I_C: STD_LOGIC;
	signal OUT_3I_R: STD_LOGIC;
	signal OUT_2I_F: STD_LOGIC;
	signal OUT_1I_F: STD_LOGIC;
	signal OUT_DOT_4A: STD_LOGIC;
	signal OUT_DOT_5B: STD_LOGIC;
	signal OUT_DOT_2D: STD_LOGIC;
	signal OUT_DOT_5E: STD_LOGIC;
	signal OUT_DOT_3G: STD_LOGIC;
	signal OUT_DOT_3I: STD_LOGIC;
	signal OUT_DOT_4I: STD_LOGIC;

begin

	OUT_5A_D_Latch <= NOT(OUT_DOT_4A AND MS_LOGIC_GATE_D_OR_U AND MS_PROGRAM_RESET_2 );
	OUT_4A_F_Latch <= NOT OUT_5A_D;
	OUT_5B_C <= NOT(PS_E_CYCLE AND MS_F_CH_INT_END_OF_TRANSFER AND PS_LOGIC_GATE_Z );
	OUT_4B_B <= NOT OUT_DOT_5B;
	OUT_5C_B <= NOT PS_F_CYCLE_REQUIRED;
	OUT_2C_D <= NOT OUT_DOT_4A;
	OUT_5D_R <= NOT PS_2ND_CLOCK_PULSE_2;
	OUT_2D_K <= NOT(MS_F_CH_FILE_OP AND PS_FILE_OP_DLY_EXTENSION );
	OUT_1D_F <= NOT OUT_DOT_2D;
	OUT_5E_R <= NOT PS_2ND_CLOCK_PULSE_2;
	OUT_4E_F <= NOT OUT_DOT_5E;
	OUT_2E_B <= NOT PS_E_CH_IN_PROCESS;
	OUT_5F_R <= NOT PS_F_CYCLE_REQUIRED;
	OUT_3F_R <= NOT(OUT_DOT_4A );
	OUT_2F_D <= NOT OUT_DOT_3I;
	LAMP_15A1F10 <= OUT_2F_D;
	OUT_5G_G <= NOT(MS_F_CH_INT_END_OF_TRANSFER AND PS_LOGIC_GATE_Z );
	OUT_3G_R <= NOT PS_LOGIC_GATE_B_OR_S;
	OUT_2G_C <= NOT OUT_DOT_3I;
	LAMP_11C8F15 <= OUT_2G_C;
	OUT_5H_F <= NOT MS_E_CYCLE_REQUIRED;
	OUT_4H_F <= NOT PS_LOGIC_GATE_B_OR_S;
	OUT_2H_C_Latch <= NOT OUT_1H_H;

	SMS_AEK_1H: entity SMS_AEK
	    port map (
		IN1 => OUT_DOT_3I,	-- Pin P
		IN2 => OUT_1I_F,	-- Pin B
		OUT1 => OUT_1H_H_Latch );

	OUT_4I_C <= NOT(OUT_5A_D );
	OUT_3I_R <= NOT OUT_DOT_4I;
	OUT_2I_F <= NOT MS_PROGRAM_RESET_2;
	OUT_1I_F <= NOT OUT_DOT_3G;
	OUT_DOT_4A <= OUT_4A_F OR OUT_4B_B OR OUT_4E_F;
	OUT_DOT_5B <= OUT_5B_C OR OUT_5C_B OR OUT_5D_R;
	OUT_DOT_2D <= OUT_2D_K OR OUT_2E_B;
	OUT_DOT_5E <= OUT_1D_F OR OUT_5E_R OR OUT_5F_R OR OUT_5G_G OR OUT_5H_F;
	OUT_DOT_3G <= OUT_3F_R OR OUT_3G_R;
	OUT_DOT_3I <= OUT_2H_C OR OUT_3I_R OR OUT_2I_F;
	OUT_DOT_4I <= OUT_4H_F OR OUT_4I_C;

	MS_F_CYCLE_CTRL <= OUT_2C_D;
	PS_F_CYCLE <= OUT_1H_H;
	PS_F_CYCLE_CTRL <= OUT_DOT_4A;
	MS_F_CYCLE <= OUT_DOT_3I;

	Latch_5A: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_5A_D_Latch,
		Q => OUT_5A_D,
		QBar => OPEN );

	Latch_4A: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4A_F_Latch,
		Q => OUT_4A_F,
		QBar => OPEN );

	Latch_2H: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2H_C_Latch,
		Q => OUT_2H_C,
		QBar => OPEN );

	Latch_1H: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_1H_H_Latch,
		Q => OUT_1H_H,
		QBar => OPEN );


end;
