-- VHDL for IBM SMS ALD page 13.12.11.1
-- Title: OP MODIFIER DECODE
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 7/20/2020 4:34:16 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_13_12_11_1_OP_MODIFIER_DECODE is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_4_DOT_2_DOT_NOT_1_OP_MOD:	 in STD_LOGIC;
		PS_NOT_B_DOT_A_DOT_NOT_8_OP_MOD:	 in STD_LOGIC;
		PS_OP_MOD_REG_NOT_C_BIT:	 in STD_LOGIC;
		PS_4_DOT_NOT_2_DOT_1_OP_MOD:	 in STD_LOGIC;
		PS_NOT_4_DOT_2_DOT_NOT_1_OP_MOD:	 in STD_LOGIC;
		PS_B_DOT_A_DOT_NOT_8_OP_MOD:	 in STD_LOGIC;
		PS_OP_MOD_REG_C_BIT:	 in STD_LOGIC;
		PS_W_SYMBOL_OP_MODIFIER:	 out STD_LOGIC;
		MS_W_SYMBOL_OP_MODIFIER:	 out STD_LOGIC;
		PS_V_SYMBOL_OP_MODIFIER:	 out STD_LOGIC;
		MS_V_SYMBOL_OP_MODIFIER:	 out STD_LOGIC;
		PS_B_SYMBOL_OP_MODIFIER:	 out STD_LOGIC;
		MS_B_SYMBOL_OP_MODIFIER:	 out STD_LOGIC;
		PS_E_SYMBOL_OP_MODIFIER:	 out STD_LOGIC;
		MS_E_SYMBOL_OP_MODIFIER:	 out STD_LOGIC);
end ALD_13_12_11_1_OP_MODIFIER_DECODE;

architecture behavioral of ALD_13_12_11_1_OP_MODIFIER_DECODE is 

	signal OUT_4A_NoPin: STD_LOGIC;
	signal OUT_3A_D: STD_LOGIC;
	signal OUT_2B_R: STD_LOGIC;
	signal OUT_4C_H: STD_LOGIC;
	signal OUT_3C_A: STD_LOGIC;
	signal OUT_4E_H: STD_LOGIC;
	signal OUT_3E_A: STD_LOGIC;
	signal OUT_4G_NoPin: STD_LOGIC;
	signal OUT_3G_R: STD_LOGIC;
	signal OUT_2G_C: STD_LOGIC;

begin

	OUT_4A_NoPin <= NOT(PS_OP_MOD_REG_NOT_C_BIT AND PS_4_DOT_2_DOT_NOT_1_OP_MOD AND PS_NOT_B_DOT_A_DOT_NOT_8_OP_MOD );
	OUT_3A_D <= NOT OUT_4A_NoPin;
	OUT_2B_R <= NOT(OUT_3A_D );
	OUT_4C_H <= NOT(PS_4_DOT_NOT_2_DOT_1_OP_MOD AND PS_OP_MOD_REG_NOT_C_BIT AND PS_NOT_B_DOT_A_DOT_NOT_8_OP_MOD );
	OUT_3C_A <= NOT OUT_4C_H;
	OUT_4E_H <= NOT(PS_NOT_4_DOT_2_DOT_NOT_1_OP_MOD AND PS_OP_MOD_REG_NOT_C_BIT AND PS_B_DOT_A_DOT_NOT_8_OP_MOD );
	OUT_3E_A <= NOT OUT_4E_H;
	OUT_4G_NoPin <= NOT(PS_B_DOT_A_DOT_NOT_8_OP_MOD AND PS_4_DOT_NOT_2_DOT_1_OP_MOD AND PS_OP_MOD_REG_C_BIT );
	OUT_3G_R <= NOT OUT_4G_NoPin;
	OUT_2G_C <= NOT OUT_3G_R;

	PS_W_SYMBOL_OP_MODIFIER <= OUT_3A_D;
	MS_W_SYMBOL_OP_MODIFIER <= OUT_2B_R;
	MS_V_SYMBOL_OP_MODIFIER <= OUT_4C_H;
	PS_V_SYMBOL_OP_MODIFIER <= OUT_3C_A;
	MS_B_SYMBOL_OP_MODIFIER <= OUT_4E_H;
	PS_B_SYMBOL_OP_MODIFIER <= OUT_3E_A;
	PS_E_SYMBOL_OP_MODIFIER <= OUT_3G_R;
	MS_E_SYMBOL_OP_MODIFIER <= OUT_2G_C;


end;
