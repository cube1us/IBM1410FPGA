-- VHDL for IBM SMS ALD page 12.12.02.1
-- Title: B CYCLE LATCH
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 6/26/2020 1:27:50 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_12_12_02_1_B_CYCLE_LATCH is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		MS_PROGRAM_RES_OR_S_LOGIC_GATE:	 in STD_LOGIC;
		PS_LOGIC_GATE_B_1:	 in STD_LOGIC;
		PS_B_CYCLE_CTRL:	 in STD_LOGIC;
		MS_B_CYCLE_CTRL:	 in STD_LOGIC;
		MS_E_CYCLE_CTRL:	 in STD_LOGIC;
		MS_F_CYCLE_CTRL:	 in STD_LOGIC;
		PS_B_CYCLE:	 out STD_LOGIC;
		PS_B_CYCLE_1:	 out STD_LOGIC;
		MS_B_CYCLE:	 out STD_LOGIC;
		PS_B_OR_E_OR_F_CYCLE_CTRL:	 out STD_LOGIC;
		LAMP_11C8B15:	 out STD_LOGIC;
		LAMP_15A1B10:	 out STD_LOGIC);
end ALD_12_12_02_1_B_CYCLE_LATCH;

architecture behavioral of ALD_12_12_02_1_B_CYCLE_LATCH is 

	signal OUT_2B_C: STD_LOGIC;
	signal OUT_4E_E: STD_LOGIC;
	signal OUT_4E_E_Latch: STD_LOGIC;
	signal OUT_3E_G: STD_LOGIC;
	signal OUT_3E_G_Latch: STD_LOGIC;
	signal OUT_4F_NoPin: STD_LOGIC;
	signal OUT_1F_C: STD_LOGIC;
	signal OUT_3G_K: STD_LOGIC;
	signal OUT_2G_R: STD_LOGIC;
	signal OUT_5H_C: STD_LOGIC;
	signal OUT_4H_A: STD_LOGIC;
	signal OUT_2H_E: STD_LOGIC;
	signal OUT_2I_E: STD_LOGIC;

begin


	SMS_AEK_2B: entity SMS_AEK
	    port map (
		IN1 => OUT_4E_E,	-- Pin D
		OUT1 => OUT_2B_C,
		IN2 => OPEN );

	OUT_4E_E_Latch <= NOT(OUT_3E_G AND MS_PROGRAM_RES_OR_S_LOGIC_GATE AND OUT_3G_K );
	OUT_3E_G_Latch <= NOT(OUT_4E_E AND OUT_4F_NoPin );
	OUT_4F_NoPin <= NOT(PS_LOGIC_GATE_B_1 AND PS_B_CYCLE_CTRL );

	SMS_AEK_1F: entity SMS_AEK
	    port map (
		IN1 => OUT_2G_R,	-- Pin D
		OUT1 => OUT_1F_C,
		IN2 => OPEN );

	OUT_3G_K <= NOT(PS_LOGIC_GATE_B_1 AND MS_B_CYCLE_CTRL );
	OUT_2G_R <= NOT OUT_3E_G;
	OUT_5H_C <= NOT(MS_B_CYCLE_CTRL AND MS_E_CYCLE_CTRL AND MS_F_CYCLE_CTRL );
	OUT_4H_A <= OUT_5H_C;
	OUT_2H_E <= NOT OUT_2G_R;
	LAMP_11C8B15 <= OUT_2H_E;
	OUT_2I_E <= NOT OUT_2G_R;
	LAMP_15A1B10 <= OUT_2I_E;

	PS_B_CYCLE <= OUT_2B_C;
	PS_B_CYCLE_1 <= OUT_1F_C;
	MS_B_CYCLE <= OUT_2G_R;
	PS_B_OR_E_OR_F_CYCLE_CTRL <= OUT_4H_A;

	Latch_4E: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_4E_E_Latch,
		Q => OUT_4E_E,
		QBar => OPEN );

	Latch_3E: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3E_G_Latch,
		Q => OUT_3E_G,
		QBar => OPEN );


end;
