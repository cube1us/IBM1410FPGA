-- Test Bench VHDL for IBM SMS ALD page 14.47.01.1
-- Title: ADDR CH VAL CK FEATURE
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 8/31/2020 10:19:15 AM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_14_47_01_1_ADDR_CH_VAL_CK_FEATURE_tb is
end ALD_14_47_01_1_ADDR_CH_VAL_CK_FEATURE_tb;

architecture behavioral of ALD_14_47_01_1_ADDR_CH_VAL_CK_FEATURE_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component ALD_14_47_01_1_ADDR_CH_VAL_CK_FEATURE
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_ADDR_CH_0_B_1:	 in STD_LOGIC;
		MS_MODIFY_BY_PLUS_ONE_LATCH:	 in STD_LOGIC;
		MS_MODIFY_BY_MINUS_ONE:	 in STD_LOGIC;
		PS_ADDR_CH_1_B_1:	 in STD_LOGIC;
		MV_1ST_CHECK_TEST_SWITCH:	 in STD_LOGIC;
		MS_ADDR_MOD_02_BIT:	 in STD_LOGIC;
		PS_ADDR_CH_2_B_1:	 in STD_LOGIC;
		MS_ADDR_MOD_18_BIT:	 in STD_LOGIC;
		PS_ADDR_CH_4_B_1:	 in STD_LOGIC;
		MS_ADDR_MOD_04_BIT:	 in STD_LOGIC;
		MS_ADDR_MOD_24_BIT:	 in STD_LOGIC;
		PS_ADDR_CH_8_B_1:	 in STD_LOGIC;
		MS_ADDR_MOD_08_BIT:	 in STD_LOGIC;
		PS_ADDR_CH_VC_GROUP_ONE:	 out STD_LOGIC;
		PS_WRAP_AROUND_CONDITIONS:	 out STD_LOGIC;
		PS_ADDR_CH_VC_GROUP_TWO:	 out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_ADDR_CH_0_B_1: STD_LOGIC := '0';
	signal MS_MODIFY_BY_PLUS_ONE_LATCH: STD_LOGIC := '1';
	signal MS_MODIFY_BY_MINUS_ONE: STD_LOGIC := '1';
	signal PS_ADDR_CH_1_B_1: STD_LOGIC := '0';
	signal MV_1ST_CHECK_TEST_SWITCH: STD_LOGIC := '1';
	signal MS_ADDR_MOD_02_BIT: STD_LOGIC := '1';
	signal PS_ADDR_CH_2_B_1: STD_LOGIC := '0';
	signal MS_ADDR_MOD_18_BIT: STD_LOGIC := '1';
	signal PS_ADDR_CH_4_B_1: STD_LOGIC := '0';
	signal MS_ADDR_MOD_04_BIT: STD_LOGIC := '1';
	signal MS_ADDR_MOD_24_BIT: STD_LOGIC := '1';
	signal PS_ADDR_CH_8_B_1: STD_LOGIC := '0';
	signal MS_ADDR_MOD_08_BIT: STD_LOGIC := '1';

	-- Outputs

	signal PS_ADDR_CH_VC_GROUP_ONE: STD_LOGIC;
	signal PS_WRAP_AROUND_CONDITIONS: STD_LOGIC;
	signal PS_ADDR_CH_VC_GROUP_TWO: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   constant HDL_C_BIT: integer := 7;
   constant HDL_WM_BIT: integer := 6;
   constant HDL_B_BIT: integer := 5;
   constant HDL_A_BIT: integer := 4;
   constant HDL_8_BIT: integer := 3;
   constant HDL_4_BIT: integer := 2;
   constant HDL_2_BIT: integer := 1;
   constant HDL_1_BIT: integer := 0;

procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      


   -- Your test bench declarations go here

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: ALD_14_47_01_1_ADDR_CH_VAL_CK_FEATURE port map(
		FPGA_CLK => FPGA_CLK,
		PS_ADDR_CH_0_B_1 => PS_ADDR_CH_0_B_1,
		MS_MODIFY_BY_PLUS_ONE_LATCH => MS_MODIFY_BY_PLUS_ONE_LATCH,
		MS_MODIFY_BY_MINUS_ONE => MS_MODIFY_BY_MINUS_ONE,
		PS_ADDR_CH_1_B_1 => PS_ADDR_CH_1_B_1,
		MV_1ST_CHECK_TEST_SWITCH => MV_1ST_CHECK_TEST_SWITCH,
		MS_ADDR_MOD_02_BIT => MS_ADDR_MOD_02_BIT,
		PS_ADDR_CH_2_B_1 => PS_ADDR_CH_2_B_1,
		MS_ADDR_MOD_18_BIT => MS_ADDR_MOD_18_BIT,
		PS_ADDR_CH_4_B_1 => PS_ADDR_CH_4_B_1,
		MS_ADDR_MOD_04_BIT => MS_ADDR_MOD_04_BIT,
		MS_ADDR_MOD_24_BIT => MS_ADDR_MOD_24_BIT,
		PS_ADDR_CH_8_B_1 => PS_ADDR_CH_8_B_1,
		MS_ADDR_MOD_08_BIT => MS_ADDR_MOD_08_BIT,
		PS_ADDR_CH_VC_GROUP_ONE => PS_ADDR_CH_VC_GROUP_ONE,
		PS_WRAP_AROUND_CONDITIONS => PS_WRAP_AROUND_CONDITIONS,
		PS_ADDR_CH_VC_GROUP_TWO => PS_ADDR_CH_VC_GROUP_TWO);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;
   variable achBits: std_logic_vector(4 downto 0);

   begin

   -- Your test bench code
   
   testName := "14.47.01.1        ";
   
   wait for 30 ns;
   check1(PS_WRAP_AROUND_CONDITIONS,'0',testName,"1A");
   MS_ADDR_MOD_18_BIT <= '0';
   wait for 30 ns;
   check1(PS_WRAP_AROUND_CONDITIONS,'1',testName,"1B");
   MS_ADDR_MOD_18_BIT <= '1';
   wait for 30 ns;
   MS_MODIFY_BY_PLUS_ONE_LATCH <= '0';
   wait for 30 ns;
   check1(PS_WRAP_AROUND_CONDITIONS,'1',testName,"1C");
   MS_MODIFY_BY_PLUS_ONE_LATCH <= '1';
   wait for 30 ns;
   MS_MODIFY_BY_MINUS_ONE <= '0';
   wait for 30 ns;
   check1(PS_WRAP_AROUND_CONDITIONS,'1',testName,"1D");
   MS_MODIFY_BY_MINUS_ONE <= '1';
   wait for 30 ns;   
   MS_ADDR_MOD_02_BIT <= '0';
   wait for 30 ns;
   check1(PS_WRAP_AROUND_CONDITIONS,'1',testName,"1E");
   MS_ADDR_MOD_02_BIT <= '1';
   wait for 30 ns;
   MS_ADDR_MOD_04_BIT <= '0';
   wait for 30 ns;
   check1(PS_WRAP_AROUND_CONDITIONS,'1',testName,"1F");
   MS_ADDR_MOD_04_BIT <= '1';
   wait for 30 ns;
   MS_ADDR_MOD_24_BIT <= '0';
   wait for 30 ns;
   check1(PS_WRAP_AROUND_CONDITIONS,'1',testName,"1G");
   MS_ADDR_MOD_24_BIT <= '1';
   wait for 30 ns;
   MS_ADDR_MOD_08_BIT <= '0';
   wait for 30 ns;
   check1(PS_WRAP_AROUND_CONDITIONS,'1',testName,"1H");
   MS_ADDR_MOD_08_BIT <= '1';
   wait for 30 ns;
   check1(PS_WRAP_AROUND_CONDITIONS,'0',testName,"1I");

   check1(PS_ADDR_CH_VC_GROUP_ONE,'0',testName,"2A");
   check1(PS_ADDR_CH_VC_GROUP_TWO,'0',testName,"2B");
   MV_1ST_CHECK_TEST_SWITCH <= '0';
   wait for 30 ns;
   check1(PS_ADDR_CH_VC_GROUP_ONE,'1',testName,"2C");
   check1(PS_ADDR_CH_VC_GROUP_TWO,'1',testName,"2D");
   MV_1ST_CHECK_TEST_SWITCH <= '1';
   
   for i in 0 to 31 loop
      achBits := std_logic_vector(to_unsigned(i,achBits'length));
      PS_ADDR_CH_0_B_1 <= achBits(0);      
      PS_ADDR_CH_1_B_1 <= achBits(1);      
      PS_ADDR_CH_2_B_1 <= achBits(2);      
      PS_ADDR_CH_4_B_1 <= achBits(3);      
      PS_ADDR_CH_8_B_1 <= achBits(4);
      wait for 30 ns;
      check1(PS_ADDR_CH_VC_GROUP_ONE,
         (achBits(0) and achBits(1)) or (achBits(1) and achBits(2)) or
         (achBits(2) and achBits(3)) or (achBits(3) and achBits(4)) or
         (achBits(4) and achBits(0)),testName,"Group One");      
      check1(PS_ADDR_CH_VC_GROUP_TWO,
            (achBits(0) and achBits(2)) or (achBits(2) and achBits(4)) or
            (achBits(4) and achBits(1)) or (achBits(1) and achBits(3)) or
            (achBits(3) and achBits(0)),testName,"Group Two");      
   end loop;
   
   assert false report "Simulation Ended NORMALLY (2)" severity failure;
   

   wait;
   end process;

-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended NORMALLY" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

end;
