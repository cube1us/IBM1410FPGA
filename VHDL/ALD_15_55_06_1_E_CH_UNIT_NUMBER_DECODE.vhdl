-- VHDL for IBM SMS ALD page 15.55.06.1
-- Title: E CH UNIT NUMBER DECODE
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 9/16/2020 8:58:06 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_15_55_06_1_E_CH_UNIT_NUMBER_DECODE is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_E_CH_UNIT_NU_REG_NOT_8_BIT:	 in STD_LOGIC;
		PS_E_CH_UNIT_NU_REG_4_BIT:	 in STD_LOGIC;
		PS_E_CH_UNIT_NU_REG_2_BIT:	 in STD_LOGIC;
		PS_E_CH_UNIT_NU_REG_NOT_1_BIT:	 in STD_LOGIC;
		PS_E_CH_UNIT_NU_REG_NOT_C_BIT:	 in STD_LOGIC;
		PS_E_CH_UNIT_NU_REG_C_BIT:	 in STD_LOGIC;
		PS_E_CH_UNIT_NU_REG_NOT_4_BIT:	 in STD_LOGIC;
		PS_E_CH_UNIT_NU_REG_1_BIT:	 in STD_LOGIC;
		PS_E_CH_UNIT_NU_REG_8_BIT:	 in STD_LOGIC;
		PS_E_CH_UNIT_NU_REG_NOT_2_BIT:	 in STD_LOGIC;
		MC_UNIT_NU_6_TO_TAU_STAR_E_CH:	 out STD_LOGIC;
		MC_E_CH_UNIT_8_BIT_STAR_1301_STAR:	 out STD_LOGIC;
		MC_UNIT_NU_7_TO_TAU_STAR_E_CH:	 out STD_LOGIC;
		MC_E_CH_UNIT_1_BIT_STAR_1301_STAR:	 out STD_LOGIC;
		MC_UNIT_NU_8_TO_TAU_STAR_E_CH:	 out STD_LOGIC;
		MC_E_CH_UNIT_C_BIT_STAR_1301_STAR:	 out STD_LOGIC;
		MC_E_CH_UNIT_2_BIT_STAR_1301_STAR:	 out STD_LOGIC;
		MS_E_CH_UNIT_NUMBER_9:	 out STD_LOGIC;
		MC_UNIT_NU_9_TO_TAU_STAR_E_CH:	 out STD_LOGIC;
		MC_E_CH_UNIT_4_BIT_STAR_1301_STAR:	 out STD_LOGIC);
end ALD_15_55_06_1_E_CH_UNIT_NUMBER_DECODE;

architecture behavioral of ALD_15_55_06_1_E_CH_UNIT_NUMBER_DECODE is 

	signal OUT_4A_G: STD_LOGIC;
	signal OUT_1A_G: STD_LOGIC;
	signal OUT_4B_G: STD_LOGIC;
	signal OUT_2B_H: STD_LOGIC;
	signal OUT_4C_G: STD_LOGIC;
	signal OUT_1C_H: STD_LOGIC;
	signal OUT_4D_G: STD_LOGIC;
	signal OUT_2D_A: STD_LOGIC;
	signal OUT_4E_G: STD_LOGIC;
	signal OUT_2E_A: STD_LOGIC;
	signal OUT_1E_A: STD_LOGIC;
	signal OUT_4F_G: STD_LOGIC;
	signal OUT_2F_E: STD_LOGIC;
	signal OUT_4G_G: STD_LOGIC;
	signal OUT_2G_G: STD_LOGIC;
	signal OUT_1G_E: STD_LOGIC;
	signal OUT_4H_G: STD_LOGIC;
	signal OUT_DOT_4A: STD_LOGIC;
	signal OUT_DOT_4C: STD_LOGIC;
	signal OUT_DOT_4E: STD_LOGIC;
	signal OUT_DOT_4G: STD_LOGIC;

begin

	OUT_4A_G <= NOT(PS_E_CH_UNIT_NU_REG_C_BIT AND PS_E_CH_UNIT_NU_REG_NOT_1_BIT AND PS_E_CH_UNIT_NU_REG_NOT_8_BIT );
	OUT_1A_G <= OUT_DOT_4A;
	OUT_4B_G <= NOT(PS_E_CH_UNIT_NU_REG_4_BIT AND PS_E_CH_UNIT_NU_REG_2_BIT );
	OUT_2B_H <= PS_E_CH_UNIT_NU_REG_NOT_8_BIT;
	OUT_4C_G <= NOT(PS_E_CH_UNIT_NU_REG_2_BIT AND PS_E_CH_UNIT_NU_REG_4_BIT AND PS_E_CH_UNIT_NU_REG_NOT_8_BIT );
	OUT_1C_H <= OUT_DOT_4C;
	OUT_4D_G <= NOT(PS_E_CH_UNIT_NU_REG_1_BIT AND PS_E_CH_UNIT_NU_REG_NOT_C_BIT );
	OUT_2D_A <= PS_E_CH_UNIT_NU_REG_NOT_1_BIT;
	OUT_4E_G <= NOT(PS_E_CH_UNIT_NU_REG_NOT_C_BIT AND PS_E_CH_UNIT_NU_REG_NOT_1_BIT AND PS_E_CH_UNIT_NU_REG_NOT_4_BIT );
	OUT_2E_A <= PS_E_CH_UNIT_NU_REG_NOT_C_BIT;
	OUT_1E_A <= OUT_DOT_4E;
	OUT_4F_G <= NOT(PS_E_CH_UNIT_NU_REG_8_BIT AND PS_E_CH_UNIT_NU_REG_NOT_2_BIT );
	OUT_2F_E <= PS_E_CH_UNIT_NU_REG_NOT_2_BIT;
	OUT_4G_G <= NOT(PS_E_CH_UNIT_NU_REG_8_BIT AND PS_E_CH_UNIT_NU_REG_NOT_4_BIT AND PS_E_CH_UNIT_NU_REG_NOT_2_BIT );
	OUT_2G_G <= PS_E_CH_UNIT_NU_REG_NOT_4_BIT;
	OUT_1G_E <= OUT_DOT_4G;
	OUT_4H_G <= NOT(PS_E_CH_UNIT_NU_REG_1_BIT AND PS_E_CH_UNIT_NU_REG_C_BIT );
	OUT_DOT_4A <= OUT_4A_G OR OUT_4B_G;
	OUT_DOT_4C <= OUT_4C_G OR OUT_4D_G;
	OUT_DOT_4E <= OUT_4E_G OR OUT_4F_G;
	OUT_DOT_4G <= OUT_4G_G OR OUT_4H_G;

	MC_UNIT_NU_6_TO_TAU_STAR_E_CH <= OUT_1A_G;
	MC_E_CH_UNIT_8_BIT_STAR_1301_STAR <= OUT_2B_H;
	MC_UNIT_NU_7_TO_TAU_STAR_E_CH <= OUT_1C_H;
	MC_E_CH_UNIT_1_BIT_STAR_1301_STAR <= OUT_2D_A;
	MC_E_CH_UNIT_C_BIT_STAR_1301_STAR <= OUT_2E_A;
	MC_UNIT_NU_8_TO_TAU_STAR_E_CH <= OUT_1E_A;
	MC_E_CH_UNIT_2_BIT_STAR_1301_STAR <= OUT_2F_E;
	MC_E_CH_UNIT_4_BIT_STAR_1301_STAR <= OUT_2G_G;
	MC_UNIT_NU_9_TO_TAU_STAR_E_CH <= OUT_1G_E;
	MS_E_CH_UNIT_NUMBER_9 <= OUT_DOT_4G;


end;
