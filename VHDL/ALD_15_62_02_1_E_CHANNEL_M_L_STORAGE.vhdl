-- VHDL for IBM SMS ALD page 15.62.02.1
-- Title: E CHANNEL M-L STORAGE
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 9/19/2020 2:28:52 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- For use in test benches only
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_15_62_02_1_E_CHANNEL_M_L_STORAGE is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_E_CH_SELECT_7_BIT_UNIT:	 in STD_LOGIC;
		PS_PERCENT_OR_COML_AT:	 in STD_LOGIC;
		MS_1401_CARD_PRINT_IN_PROC:	 in STD_LOGIC;
		MS_UNIT_CTRL_OP_CODE:	 in STD_LOGIC;
		PS_E_CH_2_CHAR_ONLY_OP_CODES:	 in STD_LOGIC;
		PS_LAST_INSN_RO_CYCLE:	 in STD_LOGIC;
		MS_I_O_MOVE_OP_CODE:	 in STD_LOGIC;
		MS_E_CH_RESET_1:	 in STD_LOGIC;
		PS_BRANCH_ON_STATUS_CH_1:	 in STD_LOGIC;
		PS_LOGIC_GATE_E_1:	 in STD_LOGIC;
		PS_I_O_INTLK_RESET_CONDITION:	 in STD_LOGIC;
		PS_I_O_LOAD_OP_CODE:	 in STD_LOGIC;
		PS_E_CH_WORD_SEPARATOR_MODE:	 out STD_LOGIC;
		MS_E_CH_MOVE_MODE:	 out STD_LOGIC;
		PS_E_CH_MOVE_MODE:	 out STD_LOGIC;
		PS_UNIT_CTRL_OR_MOVE_OP_CODE:	 out STD_LOGIC;
		MS_E_CH_LOAD_MODE:	 out STD_LOGIC;
		PS_E_CH_LOAD_MODE:	 out STD_LOGIC;
		MS_E_CH_INTERLOCK:	 out STD_LOGIC;
		PS_E_CH_INTERLOCK:	 out STD_LOGIC;
		MC_LOAD_MODE_TO_1301_STAR_E_CH:	 out STD_LOGIC;
		MC_LOAD_MODE_TO_1405_STAR_E_CH:	 out STD_LOGIC;
		LAMP_15A1A14:	 out STD_LOGIC);
end ALD_15_62_02_1_E_CHANNEL_M_L_STORAGE;

architecture behavioral of ALD_15_62_02_1_E_CHANNEL_M_L_STORAGE is 

	signal OUT_5A_C: STD_LOGIC;
	signal OUT_4A_C: STD_LOGIC;
	signal OUT_5B_R: STD_LOGIC;
	signal OUT_4B_D: STD_LOGIC;
	signal OUT_3B_D: STD_LOGIC;
	signal OUT_3B_D_Latch: STD_LOGIC;
	signal OUT_2B_E: STD_LOGIC;
	signal OUT_2B_E_Latch: STD_LOGIC;
	signal OUT_1B_R: STD_LOGIC;
	signal OUT_5C_C: STD_LOGIC;
	signal OUT_4C_E: STD_LOGIC;
	signal OUT_3C_D: STD_LOGIC;
	signal OUT_2C_C: STD_LOGIC;
	signal OUT_1C_D: STD_LOGIC;
	signal OUT_5D_G: STD_LOGIC;
	signal OUT_3D_F: STD_LOGIC;
	signal OUT_3D_F_Latch: STD_LOGIC;
	signal OUT_2D_NoPin: STD_LOGIC;
	signal OUT_2D_NoPin_Latch: STD_LOGIC;
	signal OUT_1D_E: STD_LOGIC;
	signal OUT_5E_G: STD_LOGIC;
	signal OUT_3E_C: STD_LOGIC;
	signal OUT_1E_D: STD_LOGIC;
	signal OUT_4G_R: STD_LOGIC;
	signal OUT_3G_B: STD_LOGIC;
	signal OUT_2G_E: STD_LOGIC;
	signal OUT_4H_F: STD_LOGIC;
	signal OUT_4I_H: STD_LOGIC;
	signal OUT_DOT_2B: STD_LOGIC;
	signal OUT_DOT_5D: STD_LOGIC;
	signal OUT_DOT_4G: STD_LOGIC;

begin

	OUT_5A_C <= NOT(PS_E_CH_SELECT_7_BIT_UNIT AND OUT_1E_D );
	OUT_4A_C <= NOT OUT_5A_C;
	OUT_5B_R <= NOT(PS_LAST_INSN_RO_CYCLE AND PS_PERCENT_OR_COML_AT );
	OUT_4B_D <= NOT OUT_5B_R;
	OUT_3B_D_Latch <= NOT(MS_E_CH_RESET_1 AND OUT_DOT_5D AND OUT_DOT_2B );
	OUT_2B_E_Latch <= NOT(OUT_3B_D AND OUT_3C_D AND OUT_5C_C );
	OUT_1B_R <= NOT OUT_DOT_2B;
	OUT_5C_C <= NOT(PS_LAST_INSN_RO_CYCLE AND PS_E_CH_2_CHAR_ONLY_OP_CODES AND PS_LOGIC_GATE_E_1 );
	OUT_4C_E <= NOT(MS_UNIT_CTRL_OP_CODE AND MS_I_O_MOVE_OP_CODE );
	OUT_3C_D <= NOT(OUT_4B_D AND OUT_4C_E AND PS_LOGIC_GATE_E_1 );
	OUT_2C_C <= NOT(MS_1401_CARD_PRINT_IN_PROC );
	OUT_1C_D <= NOT OUT_3B_D;
	OUT_5D_G <= NOT(PS_LAST_INSN_RO_CYCLE AND PS_BRANCH_ON_STATUS_CH_1 );
	OUT_3D_F_Latch <= NOT(OUT_DOT_5D AND MS_E_CH_RESET_1 AND OUT_2D_NoPin );
	OUT_2D_NoPin_Latch <= NOT(OUT_3D_F AND OUT_3E_C );
	OUT_1D_E <= NOT OUT_2D_NoPin;
	OUT_5E_G <= NOT(PS_LOGIC_GATE_E_1 AND PS_I_O_INTLK_RESET_CONDITION );
	OUT_3E_C <= NOT(OUT_4B_D AND PS_LOGIC_GATE_E_1 AND PS_I_O_LOAD_OP_CODE );
	OUT_1E_D <= NOT OUT_3D_F;
	OUT_4G_R <= NOT OUT_1B_R;
	OUT_3G_B <= NOT OUT_DOT_4G;
	OUT_2G_E <= NOT OUT_3G_B;
	LAMP_15A1A14 <= OUT_2G_E;
	OUT_4H_F <= NOT OUT_1D_E;
	OUT_4I_H <= OUT_1D_E;
	OUT_DOT_2B <= OUT_2B_E OR OUT_2C_C;
	OUT_DOT_5D <= OUT_5D_G OR OUT_5E_G;
	OUT_DOT_4G <= OUT_4G_R OR OUT_4H_F;

	PS_E_CH_WORD_SEPARATOR_MODE <= OUT_4A_C;
	MS_E_CH_MOVE_MODE <= OUT_1B_R;
	PS_UNIT_CTRL_OR_MOVE_OP_CODE <= OUT_4C_E;
	PS_E_CH_MOVE_MODE <= OUT_1C_D;
	MS_E_CH_LOAD_MODE <= OUT_1D_E;
	PS_E_CH_LOAD_MODE <= OUT_1E_D;
	MS_E_CH_INTERLOCK <= OUT_3G_B;
	MC_LOAD_MODE_TO_1301_STAR_E_CH <= OUT_4I_H;
	MC_LOAD_MODE_TO_1405_STAR_E_CH <= OUT_4I_H;
	PS_E_CH_INTERLOCK <= OUT_DOT_4G;

	Latch_3B: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3B_D_Latch,
		Q => OUT_3B_D,
		QBar => OPEN );

	Latch_2B: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2B_E_Latch,
		Q => OUT_2B_E,
		QBar => OPEN );

	Latch_3D: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3D_F_Latch,
		Q => OUT_3D_F,
		QBar => OPEN );

	Latch_2D: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2D_NoPin_Latch,
		Q => OUT_2D_NoPin,
		QBar => OPEN );


end;
