-- Test BenchVHDL for IBM SMS ALD group CycleControlsII
-- Title: CycleControlsII
-- IBM Machine Name 1411
-- Generated by GenerateHDL on 6/22/2020 12:27:53 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity CycleControlsII_tb is
end CycleControlsII_tb;

architecture behavioral of CycleControlsII_tb is

	-- Component Declaration for the Unit Under Test (UUT)

	component CycleControlsII
	    Port (
		FPGA_CLK: in STD_LOGIC;
		PS_OP_MOD_REG_NOT_B_BIT: in STD_LOGIC;
		PS_OP_MOD_REG_A_BIT: in STD_LOGIC;
		PS_A_CH_NOT_RECORD_MARK: in STD_LOGIC;
		PS_OP_MOD_REG_NOT_8_BIT: in STD_LOGIC;
		PS_OP_MOD_REG_NOT_A_BIT: in STD_LOGIC;
		PS_A_CH_NOT_WM_BIT: in STD_LOGIC;
		PS_OP_MOD_REG_8_BIT: in STD_LOGIC;
		PS_A_CH_NOT_GROUP_MARK_DOT_WM: in STD_LOGIC;
		PS_OP_MOD_REG_B_BIT: in STD_LOGIC;
		PS_B_CH_NOT_WM_BIT: in STD_LOGIC;
		PS_A_CYCLE: in STD_LOGIC;
		PS_B_CYCLE_1: in STD_LOGIC;
		PS_C_CYCLE_1: in STD_LOGIC;
		PS_LAST_INSN_RO_CYCLE_1: in STD_LOGIC;
		PS_A_CY_FIRST_OP_CODES: in STD_LOGIC;
		PS_DATA_MOVE_OP_CODE: in STD_LOGIC;
		MS_DATA_MOVE_LAST_EX_CYCLE: in STD_LOGIC;
		PS_SET_A_CYCLE_CTRL_STAR_ARITH_STAR: in STD_LOGIC;
		PS_EDIT_USE_A_CH_NU: in STD_LOGIC;
		PS_MOVE_ZERO_SUP_OP_CODE: in STD_LOGIC;
		MS_TLU_SET_A_CYCLE_CTRL_B: in STD_LOGIC;
		MS_CMP_MODE_SET_A_CYCLE_CTRL_A: in STD_LOGIC;
		PS_BODY_LATCH: in STD_LOGIC;
		PS_1401_STORE_AR_OP_CODES: in STD_LOGIC;
		PS_A_RING_2_OR_3_TIME: in STD_LOGIC;
		PS_I_RING_1_OR_1401_AND_3_TIME: in STD_LOGIC;
		PS_I_CYCLE: in STD_LOGIC;
		PS_D_CYCLE: in STD_LOGIC;
		PS_MPLY_OR_DIV_OP_CODES: in STD_LOGIC;
		PS_B_CH_WM_BIT_2: in STD_LOGIC;
		PS_TABLE_SEARCH_OP_CODE: in STD_LOGIC;
		PS_A_RING_6_TIME: in STD_LOGIC;
		MS_1401_MODE_1: in STD_LOGIC;
		PS_STORE_ADDR_REGS_OP_CODE: in STD_LOGIC;
		PS_A_RING_2_OR_3_OR_4_OR_5_TIME: in STD_LOGIC;
		PS_1401_MODE_1: in STD_LOGIC;
		PS_A_RING_4_TIME: in STD_LOGIC;
		MS_MPLY_DOT_U_OR_Y_DOT_B_DOT_AW_DOT_1: in STD_LOGIC;
		PS_UNITS_LATCH: in STD_LOGIC;
		MS_ANY_LAST_GATE: in STD_LOGIC;
		MS_LOGIC_GATE_A_1: in STD_LOGIC;
		PS_LOGIC_GATE_K: in STD_LOGIC;
		PS_2ND_CLOCK_PULSE_3_JRJ: in STD_LOGIC;
		PS_I_RING_6_OR_1401_AND_8_TIME: in STD_LOGIC;
		PS_SET_D_CYCLE_CTRL_STAR_ARITH: in STD_LOGIC;
		MS_FILE_OP_DOT_LAST_INSN_RO_CYCLE: in STD_LOGIC;
		PS_ARITH_TYPE_OP_CODES: in STD_LOGIC;
		MS_FILE_OP_DOT_D_CY_DOT_U_OR_Y: in STD_LOGIC;
		PS_ALTER_ROUTINE: in STD_LOGIC;
		PS_2ND_SCAN: in STD_LOGIC;
		PS_LAST_INSN_RO_CYCLE_2: in STD_LOGIC;
		MS_CYCLE_CHECK_ERROR: in STD_LOGIC;
		PS_INSTRUCTION_CHECK_GATE_STAR_1311: in STD_LOGIC;
		PS_B_CY_FIRST_OP_CODES: in STD_LOGIC;
		MS_START_INTERRUPT: in STD_LOGIC;
		PS_SET_B_CYCLE_CTRL_STAR_ARITH_STAR: in STD_LOGIC;
		PS_SET_B_CYCLE_CTRL_STAR_BR_OPS: in STD_LOGIC;
		PS_WORD_MARK_OP_CODES: in STD_LOGIC;
		PS_B_CH_Q: in STD_LOGIC;
		MS_STD_A_CYCLE_OPS_DOT_A_CYCLE: in STD_LOGIC;
		PS_EDIT_OP_CODE: in STD_LOGIC;
		PS_A_CH_WM_BIT: in STD_LOGIC;
		MS_EDIT_SET_B_CYCLE_CTRL_E: in STD_LOGIC;
		MS_EDIT_SET_B_CYCLE_CTRL_F: in STD_LOGIC;
		MS_EDIT_SET_B_CYCLE_CTRL_B: in STD_LOGIC;
		MS_EDIT_SET_B_CYCLE_CTRL_C: in STD_LOGIC;
		MS_EDIT_SET_B_CYCLE_CTRL_D: in STD_LOGIC;
		MS_TLU_SET_B_CYCLE_CTRL: in STD_LOGIC;
		MS_EDIT_SKID_CYCLE: in STD_LOGIC;
		PS_X_CYCLE: in STD_LOGIC;
		MS_SET_X_CYCLE_CTRL_A: in STD_LOGIC;
		PS_I_RING_HDL_BUS: in STD_LOGIC_VECTOR (12 downTo 0);
		PS_SET_A_CYCLE_CTRL: out STD_LOGIC;
		MS_DATA_MOVE_A_CYCLE_CTRL_SET: out STD_LOGIC;
		MS_EDIT_SET_A_CYCLE_CTRL: out STD_LOGIC;
		MS_SET_A_CYCLE_CTRL_ON_Z_OP: out STD_LOGIC;
		MS_STORE_AR_SET_A_CYCLE_CTRL_A: out STD_LOGIC;
		MS_STORE_AR_SET_A_CYCLE_CTRL_B: out STD_LOGIC;
		PS_SET_C_CYCLE_CTRL: out STD_LOGIC;
		MS_LAST_I_CYCLE_B: out STD_LOGIC;
		MS_G_OP_SET_C_CYCLE_CTRL_B: out STD_LOGIC;
		MS_STORE_AR_SET_C_CYCLE_CTRL_A: out STD_LOGIC;
		MS_STORE_AR_SET_C_CYCLE_CTRL_B: out STD_LOGIC;
		PS_SET_D_CYCLE_CTRL: out STD_LOGIC;
		MS_NO_LAST_GATE: out STD_LOGIC;
		MS_ALT_ROUTINE_DOT_2ND_SCAN: out STD_LOGIC;
		PS_INSTRUCTION_CHECK_GATE: out STD_LOGIC;
		PS_SET_B_CYCLE_CTRL: out STD_LOGIC;
		MS_WORD_MARK_OP_DOT_A_CYCLE: out STD_LOGIC;
		MS_1401_Q_OP_TRANS: out STD_LOGIC;
		MS_EDIT_SET_B_CYCLE_CTRL_A: out STD_LOGIC;
		MS_EDIT_SET_B_CYCLE_CTRL_G: out STD_LOGIC;
		PS_SET_X_CYCLE_CTRL: out STD_LOGIC);
	end component;

	-- Inputs

	signal FPGA_CLK: STD_LOGIC := '0';
	signal PS_OP_MOD_REG_NOT_B_BIT: STD_LOGIC := '0';
	signal PS_OP_MOD_REG_A_BIT: STD_LOGIC := '0';
	signal PS_A_CH_NOT_RECORD_MARK: STD_LOGIC := '0';
	signal PS_OP_MOD_REG_NOT_8_BIT: STD_LOGIC := '0';
	signal PS_OP_MOD_REG_NOT_A_BIT: STD_LOGIC := '0';
	signal PS_A_CH_NOT_WM_BIT: STD_LOGIC := '0';
	signal PS_OP_MOD_REG_8_BIT: STD_LOGIC := '0';
	signal PS_A_CH_NOT_GROUP_MARK_DOT_WM: STD_LOGIC := '0';
	signal PS_OP_MOD_REG_B_BIT: STD_LOGIC := '0';
	signal PS_B_CH_NOT_WM_BIT: STD_LOGIC := '0';
	signal PS_A_CYCLE: STD_LOGIC := '0';
	signal PS_B_CYCLE_1: STD_LOGIC := '0';
	signal PS_C_CYCLE_1: STD_LOGIC := '0';
	signal PS_LAST_INSN_RO_CYCLE_1: STD_LOGIC := '0';
	signal PS_A_CY_FIRST_OP_CODES: STD_LOGIC := '0';
	signal PS_DATA_MOVE_OP_CODE: STD_LOGIC := '0';
	signal MS_DATA_MOVE_LAST_EX_CYCLE: STD_LOGIC := '1';
	signal PS_SET_A_CYCLE_CTRL_STAR_ARITH_STAR: STD_LOGIC := '0';
	signal PS_EDIT_USE_A_CH_NU: STD_LOGIC := '0';
	signal PS_MOVE_ZERO_SUP_OP_CODE: STD_LOGIC := '0';
	signal MS_TLU_SET_A_CYCLE_CTRL_B: STD_LOGIC := '1';
	signal MS_CMP_MODE_SET_A_CYCLE_CTRL_A: STD_LOGIC := '1';
	signal PS_BODY_LATCH: STD_LOGIC := '0';
	signal PS_1401_STORE_AR_OP_CODES: STD_LOGIC := '0';
	signal PS_A_RING_2_OR_3_TIME: STD_LOGIC := '0';
	signal PS_I_RING_1_OR_1401_AND_3_TIME: STD_LOGIC := '0';
	signal PS_I_CYCLE: STD_LOGIC := '0';
	signal PS_D_CYCLE: STD_LOGIC := '0';
	signal PS_MPLY_OR_DIV_OP_CODES: STD_LOGIC := '0';
	signal PS_B_CH_WM_BIT_2: STD_LOGIC := '0';
	signal PS_TABLE_SEARCH_OP_CODE: STD_LOGIC := '0';
	signal PS_A_RING_6_TIME: STD_LOGIC := '0';
	signal MS_1401_MODE_1: STD_LOGIC := '1';
	signal PS_STORE_ADDR_REGS_OP_CODE: STD_LOGIC := '0';
	signal PS_A_RING_2_OR_3_OR_4_OR_5_TIME: STD_LOGIC := '0';
	signal PS_1401_MODE_1: STD_LOGIC := '0';
	signal PS_A_RING_4_TIME: STD_LOGIC := '0';
	signal MS_MPLY_DOT_U_OR_Y_DOT_B_DOT_AW_DOT_1: STD_LOGIC := '1';
	signal PS_UNITS_LATCH: STD_LOGIC := '0';
	signal MS_ANY_LAST_GATE: STD_LOGIC := '1';
	signal MS_LOGIC_GATE_A_1: STD_LOGIC := '1';
	signal PS_LOGIC_GATE_K: STD_LOGIC := '0';
	signal PS_2ND_CLOCK_PULSE_3_JRJ: STD_LOGIC := '0';
	signal PS_I_RING_6_OR_1401_AND_8_TIME: STD_LOGIC := '0';
	signal PS_SET_D_CYCLE_CTRL_STAR_ARITH: STD_LOGIC := '0';
	signal MS_FILE_OP_DOT_LAST_INSN_RO_CYCLE: STD_LOGIC := '1';
	signal PS_ARITH_TYPE_OP_CODES: STD_LOGIC := '0';
	signal MS_FILE_OP_DOT_D_CY_DOT_U_OR_Y: STD_LOGIC := '1';
	signal PS_ALTER_ROUTINE: STD_LOGIC := '0';
	signal PS_2ND_SCAN: STD_LOGIC := '0';
	signal PS_LAST_INSN_RO_CYCLE_2: STD_LOGIC := '0';
	signal MS_CYCLE_CHECK_ERROR: STD_LOGIC := '1';
	signal PS_INSTRUCTION_CHECK_GATE_STAR_1311: STD_LOGIC := '0';
	signal PS_B_CY_FIRST_OP_CODES: STD_LOGIC := '0';
	signal MS_START_INTERRUPT: STD_LOGIC := '1';
	signal PS_SET_B_CYCLE_CTRL_STAR_ARITH_STAR: STD_LOGIC := '0';
	signal PS_SET_B_CYCLE_CTRL_STAR_BR_OPS: STD_LOGIC := '0';
	signal PS_WORD_MARK_OP_CODES: STD_LOGIC := '0';
	signal PS_B_CH_Q: STD_LOGIC := '0';
	signal MS_STD_A_CYCLE_OPS_DOT_A_CYCLE: STD_LOGIC := '1';
	signal PS_EDIT_OP_CODE: STD_LOGIC := '0';
	signal PS_A_CH_WM_BIT: STD_LOGIC := '0';
	signal MS_EDIT_SET_B_CYCLE_CTRL_E: STD_LOGIC := '1';
	signal MS_EDIT_SET_B_CYCLE_CTRL_F: STD_LOGIC := '1';
	signal MS_EDIT_SET_B_CYCLE_CTRL_B: STD_LOGIC := '1';
	signal MS_EDIT_SET_B_CYCLE_CTRL_C: STD_LOGIC := '1';
	signal MS_EDIT_SET_B_CYCLE_CTRL_D: STD_LOGIC := '1';
	signal MS_TLU_SET_B_CYCLE_CTRL: STD_LOGIC := '1';
	signal MS_EDIT_SKID_CYCLE: STD_LOGIC := '1';
	signal PS_X_CYCLE: STD_LOGIC := '0';
	signal MS_SET_X_CYCLE_CTRL_A: STD_LOGIC := '1';
	signal PS_I_RING_HDL_BUS: STD_LOGIC_VECTOR (12 downTo 0) := "0000000000000";

	-- Outputs

	signal PS_SET_A_CYCLE_CTRL: STD_LOGIC;
	signal MS_DATA_MOVE_A_CYCLE_CTRL_SET: STD_LOGIC;
	signal MS_EDIT_SET_A_CYCLE_CTRL: STD_LOGIC;
	signal MS_SET_A_CYCLE_CTRL_ON_Z_OP: STD_LOGIC;
	signal MS_STORE_AR_SET_A_CYCLE_CTRL_A: STD_LOGIC;
	signal MS_STORE_AR_SET_A_CYCLE_CTRL_B: STD_LOGIC;
	signal PS_SET_C_CYCLE_CTRL: STD_LOGIC;
	signal MS_LAST_I_CYCLE_B: STD_LOGIC;
	signal MS_G_OP_SET_C_CYCLE_CTRL_B: STD_LOGIC;
	signal MS_STORE_AR_SET_C_CYCLE_CTRL_A: STD_LOGIC;
	signal MS_STORE_AR_SET_C_CYCLE_CTRL_B: STD_LOGIC;
	signal PS_SET_D_CYCLE_CTRL: STD_LOGIC;
	signal MS_NO_LAST_GATE: STD_LOGIC;
	signal MS_ALT_ROUTINE_DOT_2ND_SCAN: STD_LOGIC;
	signal PS_INSTRUCTION_CHECK_GATE: STD_LOGIC;
	signal PS_SET_B_CYCLE_CTRL: STD_LOGIC;
	signal MS_WORD_MARK_OP_DOT_A_CYCLE: STD_LOGIC;
	signal MS_1401_Q_OP_TRANS: STD_LOGIC;
	signal MS_EDIT_SET_B_CYCLE_CTRL_A: STD_LOGIC;
	signal MS_EDIT_SET_B_CYCLE_CTRL_G: STD_LOGIC;
	signal PS_SET_X_CYCLE_CTRL: STD_LOGIC;

-- START USER TEST BENCH DECLARATIONS

-- The user test bench declarations, if any, must be
-- placed AFTER the line starts with the first line of text 
-- with -- START USER TEST BENCH DECLARATIONS and ends
-- with the line containing -- END (and the rest of the line) below.
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

   -- Your test bench declarations go here

use IEEE.numeric_std.all;
   
 -- signal testVector1: std_logic_vector(3 downto 0);
 -- signal testVector1A: std_logic_vector(2 downto 0);
 
 signal testVector2: std_logic_vector(2 downto 0);
 signal testVector3: std_logic_vector(2 downto 0);
 signal testVector4: std_logic_vector(2 downto 0);
 signal testVector5: std_logic_vector(2 downto 0);  
 signal testVector6: std_logic_vector(2 downto 0);
 signal testVector7: std_logic_vector(2 downto 0);
 signal testVector8: std_logic_vector(2 downto 0);
 signal testVector9: std_logic_vector(2 downto 0);
 signal testVector10: std_logic_vector(2 downto 0);
 signal testVector11: std_logic_vector(2 downto 0);
 signal testVector12: std_logic_vector(2 downto 0);
   
 procedure check1(
    checked: in STD_LOGIC;
    val: in STD_LOGIC;
    testname: in string;
    test: in string) is
    begin    
    assert checked = val report testname & " (" & test & ") failed." severity failure;
    end procedure;
      

-- END USER TEST BENCH DECLARATIONS
   

	begin

	-- Instantiate the Unit Under Test (UUT)

	UUT: CycleControlsII port map(
		FPGA_CLK => FPGA_CLK,
		PS_OP_MOD_REG_NOT_B_BIT => PS_OP_MOD_REG_NOT_B_BIT,
		PS_OP_MOD_REG_A_BIT => PS_OP_MOD_REG_A_BIT,
		PS_A_CH_NOT_RECORD_MARK => PS_A_CH_NOT_RECORD_MARK,
		PS_OP_MOD_REG_NOT_8_BIT => PS_OP_MOD_REG_NOT_8_BIT,
		PS_OP_MOD_REG_NOT_A_BIT => PS_OP_MOD_REG_NOT_A_BIT,
		PS_A_CH_NOT_WM_BIT => PS_A_CH_NOT_WM_BIT,
		PS_OP_MOD_REG_8_BIT => PS_OP_MOD_REG_8_BIT,
		PS_A_CH_NOT_GROUP_MARK_DOT_WM => PS_A_CH_NOT_GROUP_MARK_DOT_WM,
		PS_OP_MOD_REG_B_BIT => PS_OP_MOD_REG_B_BIT,
		PS_B_CH_NOT_WM_BIT => PS_B_CH_NOT_WM_BIT,
		PS_A_CYCLE => PS_A_CYCLE,
		PS_B_CYCLE_1 => PS_B_CYCLE_1,
		PS_C_CYCLE_1 => PS_C_CYCLE_1,
		PS_LAST_INSN_RO_CYCLE_1 => PS_LAST_INSN_RO_CYCLE_1,
		PS_A_CY_FIRST_OP_CODES => PS_A_CY_FIRST_OP_CODES,
		PS_DATA_MOVE_OP_CODE => PS_DATA_MOVE_OP_CODE,
		MS_DATA_MOVE_LAST_EX_CYCLE => MS_DATA_MOVE_LAST_EX_CYCLE,
		PS_SET_A_CYCLE_CTRL_STAR_ARITH_STAR => PS_SET_A_CYCLE_CTRL_STAR_ARITH_STAR,
		PS_EDIT_USE_A_CH_NU => PS_EDIT_USE_A_CH_NU,
		PS_MOVE_ZERO_SUP_OP_CODE => PS_MOVE_ZERO_SUP_OP_CODE,
		MS_TLU_SET_A_CYCLE_CTRL_B => MS_TLU_SET_A_CYCLE_CTRL_B,
		MS_CMP_MODE_SET_A_CYCLE_CTRL_A => MS_CMP_MODE_SET_A_CYCLE_CTRL_A,
		PS_BODY_LATCH => PS_BODY_LATCH,
		PS_1401_STORE_AR_OP_CODES => PS_1401_STORE_AR_OP_CODES,
		PS_A_RING_2_OR_3_TIME => PS_A_RING_2_OR_3_TIME,
		PS_I_RING_1_OR_1401_AND_3_TIME => PS_I_RING_1_OR_1401_AND_3_TIME,
		PS_I_CYCLE => PS_I_CYCLE,
		PS_D_CYCLE => PS_D_CYCLE,
		PS_MPLY_OR_DIV_OP_CODES => PS_MPLY_OR_DIV_OP_CODES,
		PS_B_CH_WM_BIT_2 => PS_B_CH_WM_BIT_2,
		PS_TABLE_SEARCH_OP_CODE => PS_TABLE_SEARCH_OP_CODE,
		PS_A_RING_6_TIME => PS_A_RING_6_TIME,
		MS_1401_MODE_1 => MS_1401_MODE_1,
		PS_STORE_ADDR_REGS_OP_CODE => PS_STORE_ADDR_REGS_OP_CODE,
		PS_A_RING_2_OR_3_OR_4_OR_5_TIME => PS_A_RING_2_OR_3_OR_4_OR_5_TIME,
		PS_1401_MODE_1 => PS_1401_MODE_1,
		PS_A_RING_4_TIME => PS_A_RING_4_TIME,
		MS_MPLY_DOT_U_OR_Y_DOT_B_DOT_AW_DOT_1 => MS_MPLY_DOT_U_OR_Y_DOT_B_DOT_AW_DOT_1,
		PS_UNITS_LATCH => PS_UNITS_LATCH,
		MS_ANY_LAST_GATE => MS_ANY_LAST_GATE,
		MS_LOGIC_GATE_A_1 => MS_LOGIC_GATE_A_1,
		PS_LOGIC_GATE_K => PS_LOGIC_GATE_K,
		PS_2ND_CLOCK_PULSE_3_JRJ => PS_2ND_CLOCK_PULSE_3_JRJ,
		PS_I_RING_6_OR_1401_AND_8_TIME => PS_I_RING_6_OR_1401_AND_8_TIME,
		PS_SET_D_CYCLE_CTRL_STAR_ARITH => PS_SET_D_CYCLE_CTRL_STAR_ARITH,
		MS_FILE_OP_DOT_LAST_INSN_RO_CYCLE => MS_FILE_OP_DOT_LAST_INSN_RO_CYCLE,
		PS_ARITH_TYPE_OP_CODES => PS_ARITH_TYPE_OP_CODES,
		MS_FILE_OP_DOT_D_CY_DOT_U_OR_Y => MS_FILE_OP_DOT_D_CY_DOT_U_OR_Y,
		PS_ALTER_ROUTINE => PS_ALTER_ROUTINE,
		PS_2ND_SCAN => PS_2ND_SCAN,
		PS_LAST_INSN_RO_CYCLE_2 => PS_LAST_INSN_RO_CYCLE_2,
		MS_CYCLE_CHECK_ERROR => MS_CYCLE_CHECK_ERROR,
		PS_INSTRUCTION_CHECK_GATE_STAR_1311 => PS_INSTRUCTION_CHECK_GATE_STAR_1311,
		PS_B_CY_FIRST_OP_CODES => PS_B_CY_FIRST_OP_CODES,
		MS_START_INTERRUPT => MS_START_INTERRUPT,
		PS_SET_B_CYCLE_CTRL_STAR_ARITH_STAR => PS_SET_B_CYCLE_CTRL_STAR_ARITH_STAR,
		PS_SET_B_CYCLE_CTRL_STAR_BR_OPS => PS_SET_B_CYCLE_CTRL_STAR_BR_OPS,
		PS_WORD_MARK_OP_CODES => PS_WORD_MARK_OP_CODES,
		PS_B_CH_Q => PS_B_CH_Q,
		MS_STD_A_CYCLE_OPS_DOT_A_CYCLE => MS_STD_A_CYCLE_OPS_DOT_A_CYCLE,
		PS_EDIT_OP_CODE => PS_EDIT_OP_CODE,
		PS_A_CH_WM_BIT => PS_A_CH_WM_BIT,
		MS_EDIT_SET_B_CYCLE_CTRL_E => MS_EDIT_SET_B_CYCLE_CTRL_E,
		MS_EDIT_SET_B_CYCLE_CTRL_F => MS_EDIT_SET_B_CYCLE_CTRL_F,
		MS_EDIT_SET_B_CYCLE_CTRL_B => MS_EDIT_SET_B_CYCLE_CTRL_B,
		MS_EDIT_SET_B_CYCLE_CTRL_C => MS_EDIT_SET_B_CYCLE_CTRL_C,
		MS_EDIT_SET_B_CYCLE_CTRL_D => MS_EDIT_SET_B_CYCLE_CTRL_D,
		MS_TLU_SET_B_CYCLE_CTRL => MS_TLU_SET_B_CYCLE_CTRL,
		MS_EDIT_SKID_CYCLE => MS_EDIT_SKID_CYCLE,
		PS_X_CYCLE => PS_X_CYCLE,
		MS_SET_X_CYCLE_CTRL_A => MS_SET_X_CYCLE_CTRL_A,
		PS_I_RING_HDL_BUS => PS_I_RING_HDL_BUS,
		PS_SET_A_CYCLE_CTRL => PS_SET_A_CYCLE_CTRL,
		MS_DATA_MOVE_A_CYCLE_CTRL_SET => MS_DATA_MOVE_A_CYCLE_CTRL_SET,
		MS_EDIT_SET_A_CYCLE_CTRL => MS_EDIT_SET_A_CYCLE_CTRL,
		MS_SET_A_CYCLE_CTRL_ON_Z_OP => MS_SET_A_CYCLE_CTRL_ON_Z_OP,
		MS_STORE_AR_SET_A_CYCLE_CTRL_A => MS_STORE_AR_SET_A_CYCLE_CTRL_A,
		MS_STORE_AR_SET_A_CYCLE_CTRL_B => MS_STORE_AR_SET_A_CYCLE_CTRL_B,
		PS_SET_C_CYCLE_CTRL => PS_SET_C_CYCLE_CTRL,
		MS_LAST_I_CYCLE_B => MS_LAST_I_CYCLE_B,
		MS_G_OP_SET_C_CYCLE_CTRL_B => MS_G_OP_SET_C_CYCLE_CTRL_B,
		MS_STORE_AR_SET_C_CYCLE_CTRL_A => MS_STORE_AR_SET_C_CYCLE_CTRL_A,
		MS_STORE_AR_SET_C_CYCLE_CTRL_B => MS_STORE_AR_SET_C_CYCLE_CTRL_B,
		PS_SET_D_CYCLE_CTRL => PS_SET_D_CYCLE_CTRL,
		MS_NO_LAST_GATE => MS_NO_LAST_GATE,
		MS_ALT_ROUTINE_DOT_2ND_SCAN => MS_ALT_ROUTINE_DOT_2ND_SCAN,
		PS_INSTRUCTION_CHECK_GATE => PS_INSTRUCTION_CHECK_GATE,
		PS_SET_B_CYCLE_CTRL => PS_SET_B_CYCLE_CTRL,
		MS_WORD_MARK_OP_DOT_A_CYCLE => MS_WORD_MARK_OP_DOT_A_CYCLE,
		MS_1401_Q_OP_TRANS => MS_1401_Q_OP_TRANS,
		MS_EDIT_SET_B_CYCLE_CTRL_A => MS_EDIT_SET_B_CYCLE_CTRL_A,
		MS_EDIT_SET_B_CYCLE_CTRL_G => MS_EDIT_SET_B_CYCLE_CTRL_G,
		PS_SET_X_CYCLE_CTRL => PS_SET_X_CYCLE_CTRL);

-- START USER TEST BENCH PROCESS

-- The user test bench code MUST be placed between the
-- line that starts with the first line of text that
-- begins with "-- START USERS TEST BENCH PROCESS" 
-- and ends with "-- END"
-- This text is preserved when the IBM1410SMS applciation
-- regenerates a test bench

-- 
-- TestBenchFPGAClock.vhdl
--
-- Process to simulate the FPGA clock for a VHDL test bench
--

--  Test vector associations

-- (PS_OP_MOD_REG_NOT_B_BIT,PS_A_CH_NOT_WM_BIT,PS_OP_MOD_REG_NOT_8_BIT,
--     PS_OP_MOD_REG_A_BIT) <= testVector1;


fpga_clk_process: process

   constant clk_period : time := 10 ns;

   begin
      fpga_clk <= '0';
      wait for clk_period / 2;
      fpga_clk <= '1';
      wait for clk_period / 2;
   end process;

--
-- End of TestBenchFPGAClock.vhdl
--   

-- Place your test bench code in the uut_process

uut_process: process

   variable testName: string(1 to 18);
   variable subtest: integer;
   
   begin
    
   -- 12.12.40.1
   
   -- 1
   
   testName := "Test 12.12.40.1 01";
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '1', testName, "0");
   check1(PS_SET_A_CYCLE_CTRL,'0',testName,"0A");
   PS_OP_MOD_REG_NOT_8_BIT <= '1';
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '1', testName, "1");
   PS_A_CH_NOT_WM_BIT <= '1';
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '1', testName, "2");
   PS_OP_MOD_REG_NOT_B_BIT <= '1';
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '1', testName, "3");
   PS_OP_MOD_REG_A_BIT <= '1';
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '1', testName, "4");
   PS_DATA_MOVE_OP_CODE <= '1';
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '1', testName, "5");
   PS_B_CYCLE_1 <= '1';
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '0', testName, "6");
   check1(PS_SET_A_CYCLE_CTRL,'1',testName,"6A");   
   
   -- 2
   
   PS_OP_MOD_REG_NOT_B_BIT <= '0';
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '1', testName, "7");
   PS_B_CH_NOT_WM_BIT <= '1';
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '0', testName, "8");
   
   -- 3   
   PS_OP_MOD_REG_NOT_8_BIT <= '0';
   PS_A_CH_NOT_WM_BIT <= '0';
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '1', testName, "9");
   PS_OP_MOD_REG_NOT_B_BIT <= '1';
   PS_OP_MOD_REG_8_BIT <= '1';
   PS_A_CH_NOT_RECORD_MARK <= '1';
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '0', testName, "10");
   
   -- 4
   
   PS_OP_MOD_REG_NOT_B_BIT <= '0';
   PS_OP_MOD_REG_8_BIT <= '0';
   PS_A_CH_NOT_RECORD_MARK <= '0';
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '1', testName, "11");
   PS_OP_MOD_REG_NOT_8_BIT <= '1';
   PS_B_CH_NOT_WM_BIT <= '1';
   PS_OP_MOD_REG_NOT_A_BIT <= '1';   
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '1', testName, "12");
   PS_OP_MOD_REG_A_BIT <= '0';
   PS_OP_MOD_REG_B_BIT <= '1';
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '0', testName, "13");
   
   -- 5
   
   PS_OP_MOD_REG_NOT_8_BIT <= '0';
   PS_B_CH_NOT_WM_BIT <= '0';
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '1', testName, "14");
   PS_OP_MOD_REG_8_BIT <= '1';
   PS_A_CH_NOT_GROUP_MARK_DOT_WM <= '1';
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '0', testName, "15");

   --6 
   
   PS_OP_MOD_REG_NOT_A_BIT <= '0';   
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '1', testName, "16");
   PS_A_CH_NOT_RECORD_MARK <= '1';
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '0', testName, "17");

   -- 7
   
   PS_A_CH_NOT_GROUP_MARK_DOT_WM <= '0';
   PS_A_CH_NOT_RECORD_MARK <= '0';
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '1', testName, "18");
   PS_OP_MOD_REG_NOT_A_BIT <= '1';
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '1', testName, "19");
   PS_A_CH_NOT_WM_BIT <= '1';
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '1', testName, "20");
   PS_OP_MOD_REG_NOT_B_BIT <= '1';
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '1', testName, "21");
   PS_B_CH_NOT_WM_BIT <= '1';
   wait for 30 ns;
   check1(MS_DATA_MOVE_A_CYCLE_CTRL_SET, '0', testName, "22");
   
   PS_OP_MOD_REG_NOT_8_BIT <= '0';
   PS_A_CH_NOT_WM_BIT <= '0';
   PS_OP_MOD_REG_NOT_B_BIT <= '0';
   PS_B_CH_NOT_WM_BIT <= '0';
   PS_OP_MOD_REG_8_BIT <= '0';
   PS_A_CH_NOT_RECORD_MARK <= '0';
   PS_OP_MOD_REG_NOT_A_BIT <= '0';
   PS_A_CH_NOT_GROUP_MARK_DOT_WM <= '0';   
   
   --   Test page 12.12.41.1
   
   testName := "Test 12.12.41.1 01";
      
   -- 1
   
   wait for 30 ns;
   check1(PS_SET_A_CYCLE_CTRL,'0',testName,"0");
   PS_LAST_INSN_RO_CYCLE_1 <= '1';
   PS_A_CY_FIRST_OP_CODES <= '1';
   wait for 30 ns;
   check1(PS_SET_A_CYCLE_CTRL,'1',testName,"1");
   check1(MS_EDIT_SET_A_CYCLE_CTRL,'1',testName,"1A");
   
   -- Gate 2 is 12.12.40.1
   
   -- 3
   
   PS_LAST_INSN_RO_CYCLE_1 <= '0';
   PS_A_CY_FIRST_OP_CODES <= '0';
   PS_B_CH_NOT_WM_BIT <= '1';
   PS_A_CH_NOT_WM_BIT <= '1';
   PS_EDIT_USE_A_CH_NU <= '1';
   wait for 30 ns;
   check1(PS_SET_A_CYCLE_CTRL,'1',testName,"2");
   check1(MS_EDIT_SET_A_CYCLE_CTRL,'0',testName,"2A");
   check1(MS_SET_A_CYCLE_CTRL_ON_Z_OP,'1',testName,"2B");
     
   -- 4
   
   PS_B_CH_NOT_WM_BIT <= '0';
   wait for 30 ns;
   check1(PS_SET_A_CYCLE_CTRL,'0',testName,"3");
   check1(MS_EDIT_SET_A_CYCLE_CTRL,'1',testName,"3A");   
   PS_MOVE_ZERO_SUP_OP_CODE <= '1';
   wait for 30 ns;
   check1(PS_SET_A_CYCLE_CTRL,'1',testName,"4");
   check1(MS_SET_A_CYCLE_CTRL_ON_Z_OP,'0',testName,"4A");
   
   -- 5
   
   PS_A_CH_NOT_WM_BIT <= '0';
   PS_B_CH_NOT_WM_BIT <= '0';
   PS_MOVE_ZERO_SUP_OP_CODE <= '0';
   wait for 30 ns;
   check1(PS_SET_A_CYCLE_CTRL,'0',testName,"5");
   check1(MS_EDIT_SET_A_CYCLE_CTRL,'1',testName,"5A");
   check1(MS_STORE_AR_SET_A_CYCLE_CTRL_A,'1',testName,"5B");   
   PS_C_CYCLE_1 <= '1';
   PS_BODY_LATCH <= '1';
   PS_1401_STORE_AR_OP_CODES <= '1';
   wait for 30 ns;
   check1(PS_SET_A_CYCLE_CTRL,'1',testName,"6");
   check1(MS_STORE_AR_SET_A_CYCLE_CTRL_A,'0',testName,"6B");   
   
   -- 6

   PS_C_CYCLE_1 <= '0';
   PS_BODY_LATCH <= '0';
   wait for 30 ns;
   check1(PS_SET_A_CYCLE_CTRL,'0',testName,"7");
   check1(MS_STORE_AR_SET_A_CYCLE_CTRL_B,'1',testName,"7B");
   PS_A_CYCLE <= '1';
   PS_A_RING_2_OR_3_TIME <= '1';
   wait for 30 ns;
   check1(PS_SET_A_CYCLE_CTRL,'1',testName,"8");
   check1(MS_STORE_AR_SET_A_CYCLE_CTRL_B,'0',testName,"8B");
   
   -- The rest

   PS_A_CYCLE <= '0';
   PS_A_RING_2_OR_3_TIME <= '0';
   wait for 30 ns;
   check1(PS_SET_A_CYCLE_CTRL,'0',testName,"9");
   MS_TLU_SET_A_CYCLE_CTRL_B <= '0';
   wait for 30 ns;
   check1(PS_SET_A_CYCLE_CTRL,'1',testName,"9B");
   MS_TLU_SET_A_CYCLE_CTRL_B <= '1';
   MS_CMP_MODE_SET_A_CYCLE_CTRL_A <= '0';
   wait for 30 ns;
   check1(PS_SET_A_CYCLE_CTRL,'1',testName,"9C");
   MS_CMP_MODE_SET_A_CYCLE_CTRL_A <= '1';
   PS_SET_A_CYCLE_CTRL_STAR_ARITH_STAR <= '1';
   wait for 30 ns;
   check1(PS_SET_A_CYCLE_CTRL,'1',testName,"9D");
   MS_CMP_MODE_SET_A_CYCLE_CTRL_A <= '0';
   PS_SET_A_CYCLE_CTRL_STAR_ARITH_STAR <= '0';
   
  
   --   Test page 12.12.42.1
      
   testName := "Test 12.12.42.1 01";
         
   check1(PS_SET_C_CYCLE_CTRL,'0',testName,"0");
   check1(MS_LAST_I_CYCLE_B,'1',testName,"0A");
   check1(MS_STORE_AR_SET_C_CYCLE_CTRL_A,'1',testName,"0B");
   check1(MS_STORE_AR_SET_C_CYCLE_CTRL_B,'1',testName,"0C");
   check1(MS_G_OP_SET_C_CYCLE_CTRL_B,'1',testName,"0D");
   
   -- 1
      
   PS_D_CYCLE <= '1';
   PS_MPLY_OR_DIV_OP_CODES <= '1';   
   PS_I_RING_1_OR_1401_AND_3_TIME <= '1';
   wait for 30 ns;
   check1(PS_SET_C_CYCLE_CTRL,'1',testName,"1");
   
   -- 2
   
   PS_D_CYCLE <= '0';
   PS_MPLY_OR_DIV_OP_CODES <= '0';
   wait for 30 ns;
   check1(PS_SET_C_CYCLE_CTRL,'0',testName,"2");
   PS_B_CH_WM_BIT_2 <= '1';
   PS_I_CYCLE <= '1';
   PS_TABLE_SEARCH_OP_CODE <= '1';
   wait for 30 ns;
   check1(PS_SET_C_CYCLE_CTRL,'1',testName,"2A");
   check1(MS_LAST_I_CYCLE_B,'0',testName,"2B");

    -- 3
   
   PS_B_CH_WM_BIT_2 <= '0';
   PS_I_CYCLE <= '0';
   PS_TABLE_SEARCH_OP_CODE <= '0';
   PS_I_RING_1_OR_1401_AND_3_TIME <= '0';
   -- Back to initial state, no checke needed
   PS_A_RING_6_TIME <= '1';
   MS_1401_MODE_1 <= '1';   -- Was already set...
   PS_I_RING_HDL_BUS(5) <= '1';   -- First actual appearance of a bus!
   wait for 30 ns;
   check1(PS_SET_C_CYCLE_CTRL,'1',testName,"3");
   
   -- 4
   
   PS_A_RING_6_TIME <= '0';
   MS_1401_MODE_1 <= '0';
   wait for 30 ns;
   check1(PS_SET_C_CYCLE_CTRL,'0',testName,"4");
   PS_1401_MODE_1 <= '1';
   PS_A_RING_4_TIME <= '1';
   PS_1401_STORE_AR_OP_CODES <= '1';
   wait for 30 ns;
   check1(PS_SET_C_CYCLE_CTRL,'1',testName,"4A");

   -- 5
   
   MS_1401_MODE_1 <= '1';
   PS_1401_MODE_1 <= '0';
   PS_I_RING_HDL_BUS(5) <= '0';
   PS_A_RING_4_TIME <= '0';
   wait for 30 ns;
   check1(PS_SET_C_CYCLE_CTRL,'0',testName,"5");
   check1(MS_STORE_AR_SET_C_CYCLE_CTRL_A,'1',testName,"5A");
   PS_1401_STORE_AR_OP_CODES <= '1';
   PS_LAST_INSN_RO_CYCLE_1 <= '1';
   wait for 30 ns;
   check1(PS_SET_C_CYCLE_CTRL,'1',testName,"5B");
   check1(MS_STORE_AR_SET_C_CYCLE_CTRL_A,'0',testName,"5C");
   
   -- 6
   
   PS_LAST_INSN_RO_CYCLE_1 <= '0';
   wait for 30 ns;
   check1(PS_SET_C_CYCLE_CTRL,'0',testName,"6");
   check1(MS_STORE_AR_SET_C_CYCLE_CTRL_A,'1',testName,"6A");
   check1(MS_STORE_AR_SET_C_CYCLE_CTRL_B,'1',testName,"6B");
   PS_C_CYCLE_1 <= '1';
   PS_UNITS_LATCH <= '1';
   wait for 30 ns;
   check1(PS_SET_C_CYCLE_CTRL,'1',testName,"6C");
   check1(MS_STORE_AR_SET_C_CYCLE_CTRL_A,'1',testName,"6D");
   check1(MS_STORE_AR_SET_C_CYCLE_CTRL_B,'0',testName,"6E");
      
   -- 7
   
   PS_C_CYCLE_1 <= '0';
   PS_UNITS_LATCH <= '0';
   wait for 30 ns;
   check1(PS_SET_C_CYCLE_CTRL,'0',testName,"7");
   check1(MS_STORE_AR_SET_C_CYCLE_CTRL_B,'1',testName,"7B");
   PS_LAST_INSN_RO_CYCLE_1 <= '1';
   PS_STORE_ADDR_REGS_OP_CODE <= '1';
   wait for 30 ns;
   check1(PS_SET_C_CYCLE_CTRL,'1',testName,"7C");
   
   -- 8
   
   PS_LAST_INSN_RO_CYCLE_1 <= '0';
   wait for 30 ns;   
   check1(PS_SET_C_CYCLE_CTRL,'0',testName,"8");
   check1(MS_STORE_AR_SET_C_CYCLE_CTRL_B,'1',testName,"8A");   
   check1(MS_G_OP_SET_C_CYCLE_CTRL_B,'1',testName,"8B");
   PS_A_RING_2_OR_3_OR_4_OR_5_TIME <= '1';
   wait for 30 ns;   
   check1(PS_SET_C_CYCLE_CTRL,'1',testName,"8C");
   check1(MS_G_OP_SET_C_CYCLE_CTRL_B,'0',testName,"8D");
   
   -- Finish up
   
   PS_A_RING_2_OR_3_OR_4_OR_5_TIME <= '0';
   PS_STORE_ADDR_REGS_OP_CODE <= '0';
   PS_A_RING_2_OR_3_OR_4_OR_5_TIME <= '0';
   wait for 30 ns;   
   check1(PS_SET_C_CYCLE_CTRL,'0',testName,"9");
   MS_MPLY_DOT_U_OR_Y_DOT_B_DOT_AW_DOT_1 <= '0';
   wait for 30 ns;   
   check1(PS_SET_C_CYCLE_CTRL,'1',testName,"9A");
   MS_MPLY_DOT_U_OR_Y_DOT_B_DOT_AW_DOT_1 <= '1';
      
   
   --   Test page 12.12.43.1
         
   testName := "Test 12.12.43.1 01";
   
   -- 1
   
   check1(PS_SET_D_CYCLE_CTRL,'0',testName,"1");
   MS_FILE_OP_DOT_LAST_INSN_RO_CYCLE <= '0';
   wait for 30 ns;
   check1(PS_SET_D_CYCLE_CTRL,'1',testName,"1A");
   MS_FILE_OP_DOT_LAST_INSN_RO_CYCLE <= '1';
   -- No 0 check needed - same as before
   MS_FILE_OP_DOT_D_CY_DOT_U_OR_Y <= '0';
   wait for 30 ns;
   check1(PS_SET_D_CYCLE_CTRL,'1',testName,"1B");
   
   -- 2  
   
   MS_FILE_OP_DOT_D_CY_DOT_U_OR_Y <= '1';
   PS_I_RING_1_OR_1401_AND_3_TIME <= '1';
   PS_B_CH_WM_BIT_2 <= '1';
   wait for 30 ns;
   check1(PS_SET_D_CYCLE_CTRL,'0',testName,"2");
   PS_I_CYCLE <= '1';
   PS_ARITH_TYPE_OP_CODES <= '1';
   wait for 30 ns;
   check1(PS_SET_D_CYCLE_CTRL,'1',testName,"2A");

   -- 3

   PS_ARITH_TYPE_OP_CODES <= '0';
   PS_I_RING_1_OR_1401_AND_3_TIME <= '0';   
   wait for 30 ns;
   check1(PS_SET_D_CYCLE_CTRL,'0',testName,"3");
   PS_I_RING_6_OR_1401_AND_8_TIME <= '1';
   PS_MPLY_OR_DIV_OP_CODES <= '1';
   wait for 30 ns;
   check1(PS_SET_D_CYCLE_CTRL,'1',testName,"3A");
   
   -- 4

   PS_I_RING_6_OR_1401_AND_8_TIME <= '0';
   PS_MPLY_OR_DIV_OP_CODES <= '0';
   PS_B_CH_WM_BIT_2 <= '0';
   PS_I_CYCLE <= '0';
   -- No check needed - back to initial state.
   PS_A_RING_6_TIME <= '1';
   MS_1401_MODE_1 <= '1';
   PS_I_RING_HDL_BUS(10) <= '1';
   wait for 30 ns;
   check1(PS_SET_D_CYCLE_CTRL,'1',testName,"4");

    -- 5

   PS_A_RING_6_TIME <= '0';
   MS_1401_MODE_1 <= '1';  -- Leave in initial state
   wait for 30 ns;
   check1(PS_SET_D_CYCLE_CTRL,'0',testName,"5");
   PS_1401_MODE_1 <= '1';
   PS_A_RING_4_TIME <= '1';
   wait for 30 ns;
   check1(PS_SET_D_CYCLE_CTRL,'1',testName,"5A");
   
   -- 6
    
   PS_1401_MODE_1 <= '0';
   PS_A_RING_4_TIME <= '0';
   PS_I_RING_HDL_BUS(10) <= '0';
   wait for 30 ns;
   check1(PS_SET_D_CYCLE_CTRL,'0',testName,"6");
   check1(MS_ALT_ROUTINE_DOT_2ND_SCAN,'1',testName,"6A");
   PS_ALTER_ROUTINE <= '1';
   PS_2ND_SCAN <= '1';
   wait for 30 ns;
   check1(PS_SET_D_CYCLE_CTRL,'1',testName,"6");
   check1(MS_ALT_ROUTINE_DOT_2ND_SCAN,'0',testName,"6A");
   
   -- Finish up
   
   PS_ALTER_ROUTINE <= '0';
   PS_2ND_SCAN <= '0';
   -- No need to test here
   PS_SET_D_CYCLE_CTRL_STAR_ARITH <= '1';    
   wait for 30 ns;     
   check1(PS_SET_D_CYCLE_CTRL,'1',testName,"7");         
   PS_SET_D_CYCLE_CTRL_STAR_ARITH <= '0';    
   
   --  No Last Gate
   
   -- This is a latch - starts up undefined at first
   MS_LOGIC_GATE_A_1 <= '0';
   wait for 30 ns;
   check1(MS_NO_LAST_GATE,'1',testName,"8A");
   --   This is a latch.  See that it stays set
   MS_LOGIC_GATE_A_1 <= '1';
   wait for 30 ns;
   check1(MS_NO_LAST_GATE,'1',testName,"8B");
   PS_2ND_CLOCK_PULSE_3_JRJ <= '1';
   wait for 30 ns;
   check1(MS_NO_LAST_GATE,'1',testName,"8C");
   PS_LOGIC_GATE_K <= '1';
   MS_ANY_LAST_GATE <= '1';
   wait for 30 ns;
   check1(MS_NO_LAST_GATE,'0',testName,"8D");
   --   Again, this is a latch.  See that it stays reset
   PS_2ND_CLOCK_PULSE_3_JRJ <= '0';
   wait for 30 ns;
   check1(MS_NO_LAST_GATE,'0',testName,"8E");
   PS_LOGIC_GATE_K <= '0';
   MS_ANY_LAST_GATE <= '0';
   wait for 30 ns;
   check1(MS_NO_LAST_GATE,'0',testName,"8F");
   
   --  Instruction Check gate - test thoroughly becauyse
   --  this is itself a check circuit
   
   -- Setting no last gate above should set this already...
   check1(PS_INSTRUCTION_CHECK_GATE,'1',testName,"9");
   -- Now reset that latch again
   MS_LOGIC_GATE_A_1 <= '0';
   wait for 30 ns;
   check1(PS_INSTRUCTION_CHECK_GATE,'0',testName,"9A");
   MS_CYCLE_CHECK_ERROR <= '0';
   wait for 30 ns;
   check1(PS_INSTRUCTION_CHECK_GATE,'1',testName,"9B");
   MS_CYCLE_CHECK_ERROR <= '1';
   wait for 30 ns;
   check1(PS_INSTRUCTION_CHECK_GATE,'0',testName,"9C");
   
   PS_LAST_INSN_RO_CYCLE_2 <= '1';
   wait for 30 ns;
   check1(PS_INSTRUCTION_CHECK_GATE,'0',testName,"9D");
   PS_TABLE_SEARCH_OP_CODE <= '1';
   wait for 30 ns;
   check1(PS_INSTRUCTION_CHECK_GATE,'1',testName,"9E");
   PS_OP_MOD_REG_NOT_8_BIT <= '1';
   wait for 30 ns;
   check1(PS_INSTRUCTION_CHECK_GATE,'1',testName,"9F");
   PS_OP_MOD_REG_NOT_A_BIT <= '1';
   wait for 30 ns;
   check1(PS_INSTRUCTION_CHECK_GATE,'1',testName,"9G");
   PS_OP_MOD_REG_NOT_B_BIT <= '1';
   wait for 30 ns;
   check1(PS_INSTRUCTION_CHECK_GATE,'0',testName,"9H");
   PS_TABLE_SEARCH_OP_CODE <= '0';
   PS_LAST_INSN_RO_CYCLE_2 <= '0';
   PS_OP_MOD_REG_NOT_8_BIT <= '0';
   PS_OP_MOD_REG_NOT_A_BIT <= '0';
   PS_OP_MOD_REG_NOT_B_BIT <= '0';
   wait for 30 ns;
   check1(PS_INSTRUCTION_CHECK_GATE,'0',testName,"9H");
   PS_INSTRUCTION_CHECK_GATE_STAR_1311 <= '1';
   wait for 30 ns;
   check1(PS_INSTRUCTION_CHECK_GATE,'1',testName,"9H");
   PS_INSTRUCTION_CHECK_GATE_STAR_1311 <= '0';

   --   Test page 12.12.44.1
         
   testName := "Test 12.12.44.1 01";
   
   -- 1
   
   check1(PS_SET_B_CYCLE_CTRL,'0',testName,"1");
   PS_B_CY_FIRST_OP_CODES <= '1';
   PS_LAST_INSN_RO_CYCLE_1 <= '1';
   wait for 30 ns;
   check1(PS_SET_B_CYCLE_CTRL,'1',testName,"1A");
   check1(MS_WORD_MARK_OP_DOT_A_CYCLE,'1',testName,"1B");
   PS_B_CY_FIRST_OP_CODES <= '0';
   PS_LAST_INSN_RO_CYCLE_1 <= '0';
   
   -- 2
   
   PS_A_CYCLE <= '1';
   PS_WORD_MARK_OP_CODES <= '1';
   wait for 30 ns;
   check1(PS_SET_B_CYCLE_CTRL,'1',testName,"2");
   check1(MS_WORD_MARK_OP_DOT_A_CYCLE,'0',testName,"2A");
   check1(MS_1401_Q_OP_TRANS,'1',testName,"2B");
   PS_A_CYCLE <= '0';
   PS_WORD_MARK_OP_CODES <= '0';
   
   -- 3
   
   PS_I_RING_HDL_BUS(0) <= '1';  -- Op time
   PS_B_CH_Q <= '1';
   PS_I_CYCLE <= '1';
   wait for 30 ns;
   check1(MS_1401_Q_OP_TRANS,'1',testName,"3");
   check1(PS_SET_B_CYCLE_CTRL,'0',testName,"3A");
   PS_B_CH_WM_BIT_2 <= '1';
   PS_1401_MODE_1 <= '1';
   wait for 30 ns;
   check1(MS_1401_Q_OP_TRANS,'0',testName,"3B");
   check1(PS_SET_B_CYCLE_CTRL,'1',testName,"3C");
   PS_I_RING_HDL_BUS(0) <= '0';  -- Op time
   PS_B_CH_Q <= '0';
   PS_I_CYCLE <= '0';
   PS_B_CH_WM_BIT_2 <= '0';
   PS_1401_MODE_1 <= '0';
      
   -- 4
   
   check1(MS_EDIT_SET_B_CYCLE_CTRL_A,'1',testName,"4");
   PS_EDIT_USE_A_CH_NU <= '1';
   PS_A_CH_WM_BIT <= '1';
   PS_B_CH_NOT_WM_BIT <= '1';
   PS_EDIT_OP_CODE <= '1';
   wait for 30 ns;
   check1(PS_SET_B_CYCLE_CTRL,'1',testName,"4A");
   check1(MS_EDIT_SET_B_CYCLE_CTRL_A,'0',testName,"4B");
   PS_B_CH_NOT_WM_BIT <= '0';
   PS_EDIT_OP_CODE <= '0';

   -- 5
   
   check1(MS_EDIT_SET_B_CYCLE_CTRL_G,'1',testName,"5");
   PS_MOVE_ZERO_SUP_OP_CODE <= '1';
   wait for 30 ns;
   check1(MS_EDIT_SET_B_CYCLE_CTRL_G,'0',testName,"5A");
   check1(PS_SET_B_CYCLE_CTRL,'1',testName,"5B");
   PS_EDIT_USE_A_CH_NU <= '0';
   PS_A_CH_WM_BIT <= '0';
   PS_MOVE_ZERO_SUP_OP_CODE <= '0';
   
   -- Finish up
   
   wait for 30 ns;
   check1(PS_SET_B_CYCLE_CTRL,'0',testName,"6");
   MS_START_INTERRUPT <= '0';
   wait for 30 ns;
   check1(PS_SET_B_CYCLE_CTRL,'1',testName,"6B");
   MS_START_INTERRUPT <= '1';
   MS_STD_A_CYCLE_OPS_DOT_A_CYCLE <= '0';
   wait for 30 ns;
   check1(PS_SET_B_CYCLE_CTRL,'1',testName,"6C");   
   MS_STD_A_CYCLE_OPS_DOT_A_CYCLE <= '1';
   MS_EDIT_SET_B_CYCLE_CTRL_E <= '0';
   wait for 30 ns;
   check1(PS_SET_B_CYCLE_CTRL,'1',testName,"6D");   
   MS_EDIT_SET_B_CYCLE_CTRL_E <= '1';   
   MS_EDIT_SET_B_CYCLE_CTRL_F <= '0';
   wait for 30 ns;
   check1(PS_SET_B_CYCLE_CTRL,'1',testName,"6E");
   MS_EDIT_SET_B_CYCLE_CTRL_F <= '1';
   wait for 30 ns;
   check1(PS_SET_B_CYCLE_CTRL,'0',testName,"6F");
   
   MS_EDIT_SET_B_CYCLE_CTRL_B <= '0';
   wait for 30 ns;
   check1(PS_SET_B_CYCLE_CTRL,'1',testName,"6G");
   MS_EDIT_SET_B_CYCLE_CTRL_B <= '1';
   MS_EDIT_SET_B_CYCLE_CTRL_C <= '0';
   wait for 30 ns;
   check1(PS_SET_B_CYCLE_CTRL,'1',testName,"6H");
   MS_EDIT_SET_B_CYCLE_CTRL_C <= '1';
   MS_EDIT_SET_B_CYCLE_CTRL_D <= '0';
   wait for 30 ns;
   check1(PS_SET_B_CYCLE_CTRL,'1',testName,"6I");
   MS_EDIT_SET_B_CYCLE_CTRL_D <= '1';
   MS_TLU_SET_B_CYCLE_CTRL <= '0';
   wait for 30 ns;
   check1(PS_SET_B_CYCLE_CTRL,'1',testName,"6J");
   MS_TLU_SET_B_CYCLE_CTRL <= '1';  
   wait for 30 ns; 
   check1(PS_SET_B_CYCLE_CTRL,'0',testName,"6K");
   
   MS_EDIT_SKID_CYCLE <= '0';
   wait for 30 ns;
   check1(PS_SET_B_CYCLE_CTRL,'1',testName,"6L");
   MS_EDIT_SKID_CYCLE <= '1';
   PS_SET_B_CYCLE_CTRL_STAR_ARITH_STAR <= '1';   
   wait for 30 ns;
   check1(PS_SET_B_CYCLE_CTRL,'1',testName,"6M");
   PS_SET_B_CYCLE_CTRL_STAR_ARITH_STAR <= '0';
   PS_SET_B_CYCLE_CTRL_STAR_BR_OPS <= '1';
   wait for 30 ns;
   check1(PS_SET_B_CYCLE_CTRL,'1',testName,"6N");
   PS_SET_B_CYCLE_CTRL_STAR_BR_OPS <= '0';
   wait for 30 ns;
   check1(PS_SET_B_CYCLE_CTRL,'0',testName,"6O");
   
   wait;
   end process;


-- The following is needed for older VHDL simulations to
-- terminate the simulation process.  If your environment
-- does not need it, it may be deleted.

stop_simulation: process
   begin
   wait for 100 us;  -- Determines how long your simulation runs
   assert false report "Simulation Ended" severity failure;
   end process;

-- END USER TEST BENCH PROCESS
   

END;
