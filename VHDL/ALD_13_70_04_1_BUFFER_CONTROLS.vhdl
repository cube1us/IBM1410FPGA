-- VHDL for IBM SMS ALD page 13.70.04.1
-- Title: BUFFER CONTROLS
-- IBM Machine Name 1411
-- Generated by GenerateHDL at 8/13/2020 3:50:28 PM

-- Included from HDLTemplate.vhdl

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use WORK.ALL;

-- End of include from HDLTemplate.vhdl

entity ALD_13_70_04_1_BUFFER_CONTROLS is
	    Port (
		FPGA_CLK:		 in STD_LOGIC;
		PS_E_CH_CORRECT_LENGTH_RECORD:	 in STD_LOGIC;
		MS_E_CH_CHECK:	 in STD_LOGIC;
		PS_E_CH_SECOND_SAMPLE_B:	 in STD_LOGIC;
		PS_E_CH_CONDITION:	 in STD_LOGIC;
		PS_E_CH_STATUS_SAMPLE_A_DELAY:	 in STD_LOGIC;
		PS_E_CH_SELECT_ANY_BUFFER:	 in STD_LOGIC;
		MS_E_CH_INPUT_MODE:	 in STD_LOGIC;
		PS_E_CH_STATUS_SAMPLE_B:	 in STD_LOGIC;
		PS_1401_MODE:	 in STD_LOGIC;
		PS_E_CH_IN_PROCESS:	 in STD_LOGIC;
		MS_E_CYCLE_DOT_ANY_LAST_GATE:	 in STD_LOGIC;
		MS_1401_MODE:	 in STD_LOGIC;
		MS_MASTER_ERROR:	 in STD_LOGIC;
		MS_1401_I_O_CHECK_RESET:	 in STD_LOGIC;
		MS_RES_PUNCH_OR_PRINT_ERROR:	 in STD_LOGIC;
		MS_E_CH_WRONG_LENGTH_RECORD:	 in STD_LOGIC;
		MS_E_CH_STACKER_SEL_OP_CODE:	 in STD_LOGIC;
		MS_E_CH_FORMS_CTRL_OP_CODE:	 in STD_LOGIC;
		MS_1401_PUNCH:	 in STD_LOGIC;
		MS_1401_PRINT:	 in STD_LOGIC;
		PS_E_CH_NO_TRANSFER_LATCH:	 in STD_LOGIC;
		PS_LOGIC_GATE_E_1:	 in STD_LOGIC;
		PS_LAST_INSN_RO_CYCLE:	 in STD_LOGIC;
		PS_E_CH_2_CHAR_ONLY_OP_CODES:	 in STD_LOGIC;
		MS_E_CH_NOT_READY:	 in STD_LOGIC;
		MS_E_CH_BUSY:	 in STD_LOGIC;
		MS_E_CH_NO_TRANSFER_LATCH:	 in STD_LOGIC;
		PS_OP_MOD_REG_NOT_A_BIT:	 in STD_LOGIC;
		PS_OP_MOD_REG_NOT_B_BIT:	 in STD_LOGIC;
		PS_E_CH_STACKER_SEL_OP_CODE:	 in STD_LOGIC;
		MC_CORRECT_TRANS_TO_BUFFER:	 out STD_LOGIC;
		MC_RESET_SELECT_BUFFER_LATCHES:	 out STD_LOGIC;
		MC_READY_TO_BUFFER:	 out STD_LOGIC;
		MS_1401_CARD_PR_SAMPLE_B:	 out STD_LOGIC;
		MC_1401_MODE_TO_BUFFER:	 out STD_LOGIC;
		MC_STACK_SELECT_TO_BUFFER:	 out STD_LOGIC;
		MC_FORMS_CTRL_TO_BUFFER:	 out STD_LOGIC;
		MS_FORMS_STACKER_GO:	 out STD_LOGIC;
		MC_FORMS_STACKER_GO:	 out STD_LOGIC);
end ALD_13_70_04_1_BUFFER_CONTROLS;

architecture behavioral of ALD_13_70_04_1_BUFFER_CONTROLS is 

	signal OUT_5A_R: STD_LOGIC;
	signal OUT_4A_P: STD_LOGIC;
	signal OUT_3A_G: STD_LOGIC;
	signal OUT_2A_C: STD_LOGIC;
	signal OUT_1A_A: STD_LOGIC;
	signal OUT_5B_D: STD_LOGIC;
	signal OUT_4B_E: STD_LOGIC;
	signal OUT_3B_C: STD_LOGIC;
	signal OUT_2B_K: STD_LOGIC;
	signal OUT_1B_E: STD_LOGIC;
	signal OUT_4C_C: STD_LOGIC;
	signal OUT_3C_D: STD_LOGIC;
	signal OUT_3C_D_Latch: STD_LOGIC;
	signal OUT_2C_K: STD_LOGIC;
	signal OUT_2C_K_Latch: STD_LOGIC;
	signal OUT_1C_G: STD_LOGIC;
	signal OUT_5D_R: STD_LOGIC;
	signal OUT_4D_K: STD_LOGIC;
	signal OUT_3D_G: STD_LOGIC;
	signal OUT_1D_H: STD_LOGIC;
	signal OUT_4E_C: STD_LOGIC;
	signal OUT_1E_A: STD_LOGIC;
	signal OUT_5F_P: STD_LOGIC;
	signal OUT_1F_E: STD_LOGIC;
	signal OUT_4G_D: STD_LOGIC;
	signal OUT_3G_P: STD_LOGIC;
	signal OUT_2G_A: STD_LOGIC;
	signal OUT_1G_G: STD_LOGIC;
	signal OUT_4H_C: STD_LOGIC;
	signal OUT_3H_C: STD_LOGIC;
	signal OUT_2H_B: STD_LOGIC;
	signal OUT_1H_F: STD_LOGIC;
	signal OUT_2I_P: STD_LOGIC;
	signal OUT_DOT_4A: STD_LOGIC;
	signal OUT_DOT_2C: STD_LOGIC;
	signal OUT_DOT_4G: STD_LOGIC;
	signal OUT_DOT_5B: STD_LOGIC;
	signal OUT_DOT_3B: STD_LOGIC;
	signal OUT_DOT_2H: STD_LOGIC;

begin

	OUT_5A_R <= NOT(PS_E_CH_CORRECT_LENGTH_RECORD AND MS_E_CH_CHECK );
	OUT_4A_P <= NOT(PS_E_CH_SECOND_SAMPLE_B AND PS_E_CH_SELECT_ANY_BUFFER );
	OUT_3A_G <= NOT(OUT_DOT_4A AND OUT_4C_C );
	OUT_2A_C <= NOT(OUT_3A_G );
	OUT_1A_A <= OUT_2A_C;
	OUT_5B_D <= NOT(PS_E_CH_SELECT_ANY_BUFFER AND PS_E_CH_SECOND_SAMPLE_B AND OUT_5D_R );
	OUT_4B_E <= NOT(PS_E_CH_CONDITION AND PS_E_CH_SELECT_ANY_BUFFER AND PS_E_CH_STATUS_SAMPLE_A_DELAY );
	OUT_3B_C <= NOT(OUT_4B_E AND OUT_4E_C AND OUT_DOT_5B );
	OUT_2B_K <= NOT(OUT_DOT_3B AND MS_E_CH_BUSY );
	OUT_1B_E <= OUT_2B_K;
	OUT_4C_C <= NOT(PS_E_CH_STATUS_SAMPLE_B AND PS_E_CH_SELECT_ANY_BUFFER AND PS_1401_MODE );
	OUT_3C_D_Latch <= NOT(MS_E_CH_INPUT_MODE AND MS_E_CYCLE_DOT_ANY_LAST_GATE AND OUT_DOT_2C );
	OUT_2C_K_Latch <= NOT(OUT_3C_D AND PS_E_CH_IN_PROCESS );
	OUT_1C_G <= OUT_DOT_2C;
	OUT_5D_R <= NOT(MS_E_CH_CHECK AND MS_E_CH_WRONG_LENGTH_RECORD );
	OUT_4D_K <= NOT(PS_E_CH_SELECT_ANY_BUFFER AND MS_MASTER_ERROR );
	OUT_3D_G <= NOT(MS_1401_I_O_CHECK_RESET AND MS_RES_PUNCH_OR_PRINT_ERROR );
	OUT_1D_H <= MS_1401_MODE;
	OUT_4E_C <= NOT(PS_E_CH_SELECT_ANY_BUFFER AND PS_E_CH_STATUS_SAMPLE_A_DELAY AND PS_E_CH_NO_TRANSFER_LATCH );
	OUT_1E_A <= MS_E_CH_STACKER_SEL_OP_CODE;
	OUT_5F_P <= NOT(MS_1401_PUNCH AND MS_1401_PRINT );
	OUT_1F_E <= MS_E_CH_FORMS_CTRL_OP_CODE;
	OUT_4G_D <= NOT(PS_LAST_INSN_RO_CYCLE AND PS_LOGIC_GATE_E_1 AND PS_E_CH_2_CHAR_ONLY_OP_CODES );

	SingleShot_3G: entity SingleShot
	    generic map(PULSETIME => 20000, CLOCKPERIOD => 10)
	    port map (
		FPGA_CLK => FPGA_CLK,
		IN3 => OUT_DOT_4G,	-- Pin L
		OUT1 => OUT_3G_P,
		IN1 => OPEN,
		IN2 => OPEN );

	OUT_2G_A <= OUT_3G_P;
	OUT_1G_G <= OUT_2G_A;
	OUT_4H_C <= NOT(MS_E_CH_NOT_READY AND MS_E_CH_BUSY AND MS_E_CH_NO_TRANSFER_LATCH );
	OUT_3H_C <= NOT(PS_OP_MOD_REG_NOT_A_BIT AND PS_OP_MOD_REG_NOT_B_BIT );
	OUT_2H_B <= NOT OUT_3H_C;
	OUT_1H_F <= NOT OUT_DOT_2H;
	OUT_2I_P <= NOT(PS_E_CH_SELECT_ANY_BUFFER AND PS_E_CH_STACKER_SEL_OP_CODE );
	OUT_DOT_4A <= OUT_5A_R OR OUT_4A_P;
	OUT_DOT_2C <= OUT_2C_K OR OUT_4D_K;
	OUT_DOT_4G <= OUT_4G_D OR OUT_4H_C OR OUT_1H_F;
	OUT_DOT_5B <= OUT_5B_D OR OUT_5F_P;
	OUT_DOT_3B <= OUT_3B_C OR OUT_3D_G;
	OUT_DOT_2H <= OUT_2H_B OR OUT_2I_P;

	MC_CORRECT_TRANS_TO_BUFFER <= OUT_1A_A;
	MC_RESET_SELECT_BUFFER_LATCHES <= OUT_1B_E;
	MS_1401_CARD_PR_SAMPLE_B <= OUT_4C_C;
	MC_READY_TO_BUFFER <= OUT_1C_G;
	MC_1401_MODE_TO_BUFFER <= OUT_1D_H;
	MC_STACK_SELECT_TO_BUFFER <= OUT_1E_A;
	MC_FORMS_CTRL_TO_BUFFER <= OUT_1F_E;
	MS_FORMS_STACKER_GO <= OUT_2G_A;
	MC_FORMS_STACKER_GO <= OUT_1G_G;

	Latch_3C: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_3C_D_Latch,
		Q => OUT_3C_D,
		QBar => OPEN );

	Latch_2C: entity DFlipFlop port map (
		C => FPGA_CLK,
		D => OUT_2C_K_Latch,
		Q => OUT_2C_K,
		QBar => OPEN );


end;
